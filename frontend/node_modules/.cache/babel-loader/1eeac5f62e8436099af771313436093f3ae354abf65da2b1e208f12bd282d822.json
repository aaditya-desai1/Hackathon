{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress, Paper, Container, Select, MenuItem } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport ChartRecommendations from '../components/visualization/ChartRecommendations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  var _analysis$columns;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  const [showAIRecommendations, setShowAIRecommendations] = useState(false);\n  const [selectedRecommendationFile, setSelectedRecommendationFile] = useState(null);\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi, _analysisData$analysi2, _analysisData$analysi3, _analysisData$analysi4, _analysisData$analysi5, _analysisData$analysi6, _analysisData$analysi7, _analysisData$analysi8, _analysisData$analysi9;\n        setAnalysis({\n          rowCount: ((_analysisData$analysi = analysisData.analysis.summary) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart - Good for comparing values across categories',\n            reasoning: 'Based on data structure',\n            confidence: 85,\n            xAxis: ((_analysisData$analysi2 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi2 === void 0 ? void 0 : _analysisData$analysi2.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi3 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi3 === void 0 ? void 0 : _analysisData$analysi3.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'line',\n            description: 'Line Chart - Best for showing trends over time or continuous data',\n            reasoning: 'Good for trends over time',\n            confidence: 75,\n            xAxis: ((_analysisData$analysi4 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi4 === void 0 ? void 0 : _analysisData$analysi4.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi5 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi5 === void 0 ? void 0 : _analysisData$analysi5.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'pie',\n            description: 'Pie Chart - Excellent for showing proportions of a whole',\n            reasoning: 'Good for showing proportions',\n            confidence: 65,\n            xAxis: ((_analysisData$analysi6 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi6 === void 0 ? void 0 : _analysisData$analysi6.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi7 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi7 === void 0 ? void 0 : _analysisData$analysi7.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot - Ideal for showing correlation between variables',\n            reasoning: 'Good for showing correlations',\n            confidence: 60,\n            xAxis: ((_analysisData$analysi8 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi8 === void 0 ? void 0 : _analysisData$analysi8.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi9 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi9 === void 0 ? void 0 : _analysisData$analysi9.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }]\n        });\n\n        // Automatically open axis selection after successful analysis\n        setAxisSelectionOpen(true);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n\n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      createChartInstance(chart.chartType, chart, newInstances);\n    });\n    setChartPreviewInstances(newInstances);\n  };\n  const createChartInstance = (chartKey, chart, instancesObject) => {\n    var _chart$data, _chart$data2;\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n\n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Create default data if not provided\n    const defaultLabels = ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'];\n    const defaultValues = [65, 59, 80, 81, 56];\n\n    // Prepare data for the chart\n    const chartData = {\n      labels: ((_chart$data = chart.data) === null || _chart$data === void 0 ? void 0 : _chart$data.labels) || defaultLabels,\n      datasets: [{\n        label: chart.title || chart.yAxis || 'Value',\n        data: ((_chart$data2 = chart.data) === null || _chart$data2 === void 0 ? void 0 : _chart$data2.values) || defaultValues,\n        backgroundColor: [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.success.main, theme.palette.warning.main, theme.palette.info.main, theme.palette.error.main, '#9c27b0',\n        // Purple\n        '#2196f3',\n        // Blue\n        '#4caf50',\n        // Green\n        '#ff9800' // Orange\n        ],\n        borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n        borderWidth: 1\n      }]\n    };\n\n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        },\n        y: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        }\n      }\n    };\n    try {\n      // Create the chart\n      const newChart = new Chart(ctx, {\n        type: chart.chartType || 'bar',\n        data: chartData,\n        options: options\n      });\n      instancesObject[chartKey] = newChart;\n    } catch (error) {\n      console.error(`Error creating chart for ${chartKey}:`, error);\n    }\n  };\n  const handleSaveChart = async chart => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n\n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n\n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        console.log(\"Chart image saved locally\");\n\n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n\n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully to your account!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4;\n    if (!chartContainerRef.current || !visualization) return;\n\n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.xAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : (_visualization$config4 = _visualization$config3.yAxis) === null || _visualization$config4 === void 0 ? void 0 : _visualization$config4.label) || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    try {\n      if (chartType === 'scatter') {\n        var _visualization$config5, _visualization$config6;\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : (_visualization$config6 = _visualization$config5.yAxis) === null || _visualization$config6 === void 0 ? void 0 : _visualization$config6.label) || visualization.yAxis || 'Value',\n            data: [{\n              x: 20,\n              y: 45\n            }, {\n              x: 25,\n              y: 55\n            }, {\n              x: 30,\n              y: 65\n            }, {\n              x: 35,\n              y: 75\n            }, {\n              x: 40,\n              y: 70\n            }, {\n              x: 45,\n              y: 60\n            }],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9\n          }]\n        };\n      } else if (chartType === 'pie') {\n        var _visualization$config7, _visualization$config8;\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config7 = visualization.config) === null || _visualization$config7 === void 0 ? void 0 : (_visualization$config8 = _visualization$config7.yAxis) === null || _visualization$config8 === void 0 ? void 0 : _visualization$config8.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        var _visualization$config9, _visualization$config10;\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config9 = visualization.config) === null || _visualization$config9 === void 0 ? void 0 : (_visualization$config10 = _visualization$config9.yAxis) === null || _visualization$config10 === void 0 ? void 0 : _visualization$config10.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    var _location$state2;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n\n        // Schedule rendering after component mounts\n        setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n        }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n      }\n    }\n  }, [location]);\n\n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    var _analysis$visualizati;\n    if (!(analysis !== null && analysis !== void 0 && (_analysis$visualizati = analysis.visualizationSuggestions) !== null && _analysis$visualizati !== void 0 && _analysis$visualizati.length)) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Recommended Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: analysis.visualizationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              },\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            onClick: () => {\n              setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n              setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n              handleGenerateCharts();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  flexGrow: 1\n                },\n                children: [suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1), \" Chart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${suggestion.confidence}% match`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 1\n              },\n              children: [suggestion.type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#1976d2'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 49\n              }, this), suggestion.type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#2e7d32'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 50\n              }, this), suggestion.type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#ed6c02'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 49\n              }, this), suggestion.type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#9c27b0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add this function to handle saving an AI-recommended chart\n  const handleSaveRecommendedChart = async chartData => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chartData.name,\n          description: chartData.description || 'AI generated visualization',\n          fileId: chartData.fileId,\n          chartType: chartData.chartType,\n          config: chartData.config,\n          confidence: chartData.confidence || 85,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save visualization');\n      }\n      const result = await response.json();\n      console.log('Saved AI recommendation:', result);\n\n      // Refresh visualizations list\n      fetchVisualizations();\n\n      // Close AI recommendations\n      setShowAIRecommendations(false);\n      setSelectedRecommendationFile(null);\n    } catch (error) {\n      console.error('Error saving recommendation:', error);\n      setError('Failed to save recommended visualization');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add this function to show AI recommendations for a file\n  const handleShowRecommendations = file => {\n    setSelectedRecommendationFile(file);\n    setShowAIRecommendations(true);\n  };\n\n  // Add this function to render the AI recommendations section\n  const renderAIRecommendationsSection = () => {\n    if (!showAIRecommendations) {\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 3,\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"AI Chart Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: \"Let AI analyze your data and suggest the best visualizations automatically. Select a file to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: files.map(file => {\n            var _file$columns, _file$preview;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                sx: {\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  cursor: 'pointer',\n                  transition: '0.2s',\n                  '&:hover': {\n                    boxShadow: 3\n                  }\n                },\n                onClick: () => handleShowRecommendations(file),\n                children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    flexGrow: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    noWrap: true,\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1020,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    gutterBottom: true,\n                    children: [file.type === 'text/csv' ? 'CSV' : 'JSON', \" \\u2022 \", Math.round(file.size / 1024), \" KB\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1021,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [((_file$columns = file.columns) === null || _file$columns === void 0 ? void 0 : _file$columns.length) || 0, \" columns \\u2022 \", ((_file$preview = file.preview) === null || _file$preview === void 0 ? void 0 : _file$preview.length) || 0, \" rows shown\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    color: \"primary\",\n                    startIcon: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1032,\n                      columnNumber: 34\n                    }, this),\n                    children: \"Generate Charts\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 17\n              }, this)\n            }, file._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      sx: {\n        p: 3,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          sx: {\n            mr: 1\n          },\n          onClick: () => {\n            setShowAIRecommendations(false);\n            setSelectedRecommendationFile(null);\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"AI Chart Recommendations for \", selectedRecommendationFile === null || selectedRecommendationFile === void 0 ? void 0 : selectedRecommendationFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartRecommendations, {\n        file: selectedRecommendationFile,\n        onSaveChart: handleSaveRecommendedChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add this function somewhere after renderPlaceholder and before the return statement\n  const renderVisualizationCard = visualization => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        cursor: 'pointer',\n        '&:hover': {\n          boxShadow: 3\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: getVisualizationIcon(visualization.chartType),\n        title: visualization.name,\n        subheader: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mt: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            label: visualization.isAIGenerated ? 'AI Generated' : 'Custom',\n            color: visualization.isAIGenerated ? 'secondary' : 'primary',\n            variant: \"outlined\",\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: new Date(visualization.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flexGrow: 1,\n          pt: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 2\n          },\n          children: visualization.description || 'No description provided'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => handleViewVisualization(visualization),\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"secondary\",\n          onClick: () => handleEditVisualization(visualization),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          color: \"error\",\n          onClick: () => handleDeleteVisualization(visualization._id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Visualizations\",\n      subtitle: \"Create and manage data visualizations\",\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 24\n        }, this),\n        onClick: handleCreateClick,\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1138,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Your Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 9\n      }, this), loading && !showAIRecommendations ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 11\n      }, this) : visualizations.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: visualizations.map(visualization => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: renderVisualizationCard(visualization)\n        }, visualization._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 11\n      }, this) : renderPlaceholder()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 7\n    }, this), renderAIRecommendationsSection(), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden',\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1233,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            mt: 1,\n            color: 'text.secondary'\n          },\n          children: \"Choose a file to analyze and visualize:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            overflow: 'hidden',\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => handleFileSelect(file),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1315,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1314,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"medium\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1318,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: file.type.toUpperCase(),\n                  color: file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary',\n                  sx: {\n                    mr: 1,\n                    height: 20,\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1321,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(file.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1327,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1317,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1300,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1393,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)' : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1436,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1437,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1438,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1439,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1440,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1415,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1457,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select Data for Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'No file selected',\n          size: \"small\",\n          color: \"default\",\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1528,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1535,\n                columnNumber: 25\n              }, this),\n              sx: {\n                fontWeight: 'medium'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1540,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1546,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.primary.main\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select X-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1585,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1589,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1556,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1549,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1596,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.primary.main\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select Y-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1634,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1638,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1605,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1599,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1595,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1544,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1502,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1647,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1691,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1692,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1696,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1689,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1704,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1700,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1675,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1137,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"TapcDsIDG/EHuJgH4JKmARIFobI=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","Paper","Container","Select","MenuItem","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","ChartRecommendations","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizations","_s","_analysis$columns","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","showAIRecommendations","setShowAIRecommendations","selectedRecommendationFile","setSelectedRecommendationFile","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","_analysisData$analysi2","_analysisData$analysi3","_analysisData$analysi4","_analysisData$analysi5","_analysisData$analysi6","_analysisData$analysi7","_analysisData$analysi8","_analysisData$analysi9","rowCount","summary","totalRows","columns","Object","keys","basicAnalysis","visualizationSuggestions","type","description","reasoning","confidence","xAxis","recommendedAxes","x","yAxis","y","handleCreateClick","handleCloseDialog","handleGenerateCharts","previewData","forEach","chartType","suggestion","find","s","push","name","charAt","toUpperCase","slice","fileId","setTimeout","renderPreviewCharts","charts","values","instance","destroy","newInstances","chart","createChartInstance","chartKey","instancesObject","_chart$data","_chart$data2","canvas","current","ctx","getContext","defaultLabels","defaultValues","chartData","labels","datasets","label","backgroundColor","palette","primary","main","secondary","warning","info","borderColor","mode","borderWidth","options","responsive","maintainAspectRatio","animation","duration","plugins","legend","position","color","text","font","size","tooltip","titleColor","bodyColor","scales","grid","ticks","newChart","handleSaveChart","canvasRef","imageUrl","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","alert","saveToServer","confirm","config","field","subtitle","Date","toLocaleDateString","method","headers","JSON","stringify","isAIGenerated","message","result","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","bar","scatter","line","pie","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","length","variant","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","family","typography","fontFamily","display","weight","padding","_visualization$config5","_visualization$config6","pointRadius","pointHoverRadius","_visualization$config7","_visualization$config8","_visualization$config9","_visualization$config10","tension","_location$state2","savedPreviewCharts","sessionStorage","getItem","savedPreviewFile","parsedCharts","parse","setItem","renderRecommendedVisualizations","_analysis$visualizati","mb","gutterBottom","container","spacing","map","index","sm","md","p","cursor","transition","transform","boxShadow","bgcolor","border","onClick","alignItems","flexGrow","height","justifyContent","handleSaveRecommendedChart","handleShowRecommendations","renderAIRecommendationsSection","paragraph","_file$columns","_file$preview","flexDirection","noWrap","Math","round","preview","startIcon","mr","onSaveChart","renderVisualizationCard","avatar","subheader","createdAt","pt","maxWidth","action","severity","open","onClose","fullWidth","PaperProps","borderRadius","overflow","py","px","ref","style","icon","backgroundImage","borderBottom","button","divider","fontWeight","toFixed","borderTop","onChange","placeholder","rows","flexWrap","gap","displayEmpty","MenuProps","disabled","column","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Divider,\n  Alert,\n  IconButton,\n  useTheme,\n  CircularProgress,\n  Paper,\n  Container,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport {\n  BarChart as ChartIcon,\n  Add as AddIcon,\n  Timeline as TimelineIcon,\n  BubbleChart as ScatterIcon,\n  ShowChart as LineIcon,\n  PieChart as PieIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport ChartRecommendations from '../components/visualization/ChartRecommendations';\n\nfunction Visualizations() {\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  const [showAIRecommendations, setShowAIRecommendations] = useState(false);\n  const [selectedRecommendationFile, setSelectedRecommendationFile] = useState(null);\n\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = async (file) => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    \n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      \n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n      \n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        setAnalysis({\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [\n            {\n              type: 'bar',\n              description: 'Bar Chart - Good for comparing values across categories',\n              reasoning: 'Based on data structure',\n              confidence: 85,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            },\n            {\n              type: 'line',\n              description: 'Line Chart - Best for showing trends over time or continuous data',\n              reasoning: 'Good for trends over time',\n              confidence: 75,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            },\n            {\n              type: 'pie',\n              description: 'Pie Chart - Excellent for showing proportions of a whole',\n              reasoning: 'Good for showing proportions',\n              confidence: 65,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            },\n            {\n              type: 'scatter',\n              description: 'Scatter Plot - Ideal for showing correlation between variables',\n              reasoning: 'Good for showing correlations',\n              confidence: 60,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            }\n          ]\n        });\n        \n        // Automatically open axis selection after successful analysis\n        setAxisSelectionOpen(true);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n    \n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n    \n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      \n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    \n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n    \n    // Schedule rendering after the DOM updates\n      setTimeout(() => {\n        renderPreviewCharts(previewData);\n      }, 300);\n  };\n\n  const renderPreviewCharts = (charts) => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    \n    const newInstances = {};\n    \n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      createChartInstance(chart.chartType, chart, newInstances);\n    });\n    \n    setChartPreviewInstances(newInstances);\n  };\n  \n  const createChartInstance = (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n    \n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    // Create default data if not provided\n    const defaultLabels = ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'];\n    const defaultValues = [65, 59, 80, 81, 56];\n    \n    // Prepare data for the chart\n    const chartData = {\n      labels: chart.data?.labels || defaultLabels,\n      datasets: [{\n        label: chart.title || chart.yAxis || 'Value',\n        data: chart.data?.values || defaultValues,\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.secondary.main,\n          theme.palette.success.main,\n          theme.palette.warning.main,\n          theme.palette.info.main,\n          theme.palette.error.main,\n          '#9c27b0', // Purple\n          '#2196f3', // Blue\n          '#4caf50', // Green\n          '#ff9800', // Orange\n        ],\n        borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n        borderWidth: 1\n      }]\n    };\n    \n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000,\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        },\n        y: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        }\n      }\n    };\n    \n    try {\n      // Create the chart\n      const newChart = new Chart(ctx, {\n        type: chart.chartType || 'bar',\n        data: chartData,\n        options: options\n      });\n      \n      instancesObject[chartKey] = newChart;\n    } catch (error) {\n      console.error(`Error creating chart for ${chartKey}:`, error);\n    }\n  };\n\n  const handleSaveChart = async (chart) => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n        \n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n        \n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        \n        console.log(\"Chart image saved locally\");\n        \n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n      \n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n      \n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      \n      const result = await response.json();\n      console.log('Visualization created:', result);\n      \n      // Show success message\n      alert('Visualization saved successfully to your account!');\n      \n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n      \n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      \n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n      \n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  \n  const handleEditVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  \n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    \n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n      \n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  \n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteVisualization = async (vizId) => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      \n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Delete response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      \n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n      \n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n\n  const getVisualizationIcon = (type) => {\n    const iconSize = { fontSize: 80, opacity: 0.8 };\n    const colors = {\n      bar: '#1976d2',    // blue\n      scatter: '#9c27b0', // purple\n      line: '#2e7d32',    // green\n      pie: '#ed6c02'      // orange\n    };\n    \n    const iconColor = { color: colors[type] || colors.bar };\n    \n    switch (type) {\n      case 'bar':\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'scatter':\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'line':\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'pie':\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\n      default:\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (loading) {\n      return (\n        <Grid item xs={12}>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <LinearProgress />\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\n              Loading...\n            </Typography>\n          </Box>\n        </Grid>\n      );\n    }\n    \n    if (visualizations.length === 0) {\n      return (\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\n          </Typography>\n        </Grid>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderChart = (visualization) => {\n    if (!chartContainerRef.current || !visualization) return;\n    \n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    \n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily,\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || visualization.config?.xAxis?.label || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || visualization.config?.yAxis?.label || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    \n    try {\n      if (chartType === 'scatter') {\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [\n              { x: 20, y: 45 },\n              { x: 25, y: 55 },\n              { x: 30, y: 65 },\n              { x: 35, y: 75 },\n              { x: 40, y: 70 },\n              { x: 45, y: 60 }\n            ],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9,\n          }]\n        };\n      } else if (chartType === 'pie') {\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n      \n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      \n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    \n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        \n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n        \n        // Schedule rendering after component mounts\n      setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n      }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n    }\n    }\n  }, [location]);\n    \n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      \n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    if (!analysis?.visualizationSuggestions?.length) return null;\n\n  return (\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Recommended Visualizations\n        </Typography>\n        <Grid container spacing={2}>\n          {analysis.visualizationSuggestions.map((suggestion, index) => (\n            <Grid item xs={12} sm={6} md={3} key={index}>\n              <Paper\n                sx={{\n                  p: 2,\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4,\n                  },\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                  border: 1,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n                }}\n                onClick={() => {\n                  setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n                  setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n                  handleGenerateCharts();\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\n                    {suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1)} Chart\n                  </Typography>\n                  <Chip\n                    label={`${suggestion.confidence}% match`}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Box sx={{ height: 100, display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>\n                  {suggestion.type === 'bar' && <ChartIcon sx={{ fontSize: 50, color: '#1976d2' }} />}\n                  {suggestion.type === 'line' && <LineIcon sx={{ fontSize: 50, color: '#2e7d32' }} />}\n                  {suggestion.type === 'pie' && <PieIcon sx={{ fontSize: 50, color: '#ed6c02' }} />}\n                  {suggestion.type === 'scatter' && <ScatterIcon sx={{ fontSize: 50, color: '#9c27b0' }} />}\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {suggestion.description}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  // Add this function to handle saving an AI-recommended chart\n  const handleSaveRecommendedChart = async (chartData) => {\n    try {\n      setLoading(true);\n      \n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chartData.name,\n          description: chartData.description || 'AI generated visualization',\n          fileId: chartData.fileId,\n          chartType: chartData.chartType,\n          config: chartData.config,\n          confidence: chartData.confidence || 85,\n          isAIGenerated: true\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to save visualization');\n      }\n      \n      const result = await response.json();\n      console.log('Saved AI recommendation:', result);\n      \n      // Refresh visualizations list\n      fetchVisualizations();\n      \n      // Close AI recommendations\n      setShowAIRecommendations(false);\n      setSelectedRecommendationFile(null);\n    } catch (error) {\n      console.error('Error saving recommendation:', error);\n      setError('Failed to save recommended visualization');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Add this function to show AI recommendations for a file\n  const handleShowRecommendations = (file) => {\n    setSelectedRecommendationFile(file);\n    setShowAIRecommendations(true);\n  };\n\n  // Add this function to render the AI recommendations section\n  const renderAIRecommendationsSection = () => {\n    if (!showAIRecommendations) {\n      return (\n        <Paper variant=\"outlined\" sx={{ p: 3, mt: 4 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            AI Chart Recommendations\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            Let AI analyze your data and suggest the best visualizations automatically.\n            Select a file to get started.\n          </Typography>\n          \n          <Grid container spacing={2}>\n            {files.map(file => (\n              <Grid item xs={12} sm={6} md={4} key={file._id}>\n                <Card variant=\"outlined\" sx={{ \n                  height: '100%', \n                  display: 'flex', \n                  flexDirection: 'column',\n                  cursor: 'pointer',\n                  transition: '0.2s',\n                  '&:hover': {\n                    boxShadow: 3\n                  }\n                }}\n                onClick={() => handleShowRecommendations(file)}\n                >\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography variant=\"subtitle1\" noWrap>{file.name}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                      {file.type === 'text/csv' ? 'CSV' : 'JSON'} • {Math.round(file.size / 1024)} KB\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {file.columns?.length || 0} columns • {file.preview?.length || 0} rows shown\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button \n                      size=\"small\" \n                      color=\"primary\" \n                      startIcon={<ChartIcon />}\n                    >\n                      Generate Charts\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      );\n    }\n    \n    return (\n      <Paper variant=\"outlined\" sx={{ p: 3, mt: 4 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <IconButton \n            size=\"small\" \n            sx={{ mr: 1 }}\n            onClick={() => {\n              setShowAIRecommendations(false);\n              setSelectedRecommendationFile(null);\n            }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            AI Chart Recommendations for {selectedRecommendationFile?.name}\n          </Typography>\n        </Box>\n        \n        <ChartRecommendations \n          file={selectedRecommendationFile} \n          onSaveChart={handleSaveRecommendedChart} \n        />\n      </Paper>\n    );\n  };\n\n  // Add this function somewhere after renderPlaceholder and before the return statement\n  const renderVisualizationCard = (visualization) => {\n    return (\n      <Card \n        variant=\"outlined\" \n        sx={{ \n          height: '100%', \n          display: 'flex', \n          flexDirection: 'column',\n          cursor: 'pointer',\n          '&:hover': {\n            boxShadow: 3\n          }\n        }}\n      >\n        <CardHeader\n          avatar={getVisualizationIcon(visualization.chartType)}\n          title={visualization.name}\n          subheader={\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n              <Chip \n                size=\"small\" \n                label={visualization.isAIGenerated ? 'AI Generated' : 'Custom'}\n                color={visualization.isAIGenerated ? 'secondary' : 'primary'}\n                variant=\"outlined\"\n                sx={{ mr: 1 }}\n              />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {new Date(visualization.createdAt).toLocaleDateString()}\n              </Typography>\n            </Box>\n          }\n        />\n        <CardContent sx={{ flexGrow: 1, pt: 0 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            {visualization.description || 'No description provided'}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button \n            size=\"small\"\n            onClick={() => handleViewVisualization(visualization)}\n          >\n            View\n          </Button>\n          <Button \n            size=\"small\"\n            color=\"secondary\"\n            onClick={() => handleEditVisualization(visualization)}\n          >\n            Edit\n          </Button>\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton \n            size=\"small\" \n            color=\"error\"\n            onClick={() => handleDeleteVisualization(visualization._id)}\n          >\n            <DeleteIcon fontSize=\"small\" />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <PageHeader \n        title=\"Visualizations\" \n        subtitle=\"Create and manage data visualizations\"\n        action={\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={handleCreateClick}\n          >\n            Create Visualization\n          </Button>\n        }\n      />\n      \n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Existing visualizations */}\n      <Paper variant=\"outlined\" sx={{ p: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Your Visualizations\n        </Typography>\n        \n        {loading && !showAIRecommendations ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n            <CircularProgress />\n          </Box>\n        ) : visualizations.length > 0 ? (\n          <Grid container spacing={3}>\n            {visualizations.map(visualization => (\n              <Grid item xs={12} sm={6} md={4} key={visualization._id}>\n                {renderVisualizationCard(visualization)}\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          renderPlaceholder()\n        )}\n      </Paper>\n      \n      {/* AI Recommendations Section */}\n      {renderAIRecommendationsSection()}\n\n      {/* Preview dialog */}\n      <Dialog\n        open={openViewDialog}\n        onClose={handleCloseViewDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden',\n            bgcolor: 'background.paper',\n          }\n        }}\n      >\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\n          <Typography variant=\"h5\">\n            {currentVisualization?.name || 'View Visualization'}\n          </Typography>\n        </Box>\n        <DialogContent sx={{ p: 0 }}>\n          {currentVisualization && (\n            <Box>\n              <Box sx={{ height: 400, p: 3 }}>\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\n              </Box>\n              \n              <Box sx={{ \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5' \n              }}>\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\n                </Typography>\n                \n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n                  <Chip \n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\n                    color=\"primary\"\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\n                    sx={{ mr: 1 }}\n                  />\n                  <Chip \n                    label={`${currentVisualization.confidence || 90}% confidence`}\n                    color=\"success\"\n                  />\n                  <Box sx={{ flexGrow: 1 }} />\n                  <Button \n                    variant=\"outlined\" \n                    startIcon={<EditIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleEditVisualization(currentVisualization);\n                    }}\n                    sx={{ mr: 1 }}\n                  >\n                    Edit\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleDeleteVisualization(currentVisualization._id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Create chart dialog */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          Create Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 1, color: 'text.secondary' }}>\n            Choose a file to analyze and visualize:\n          </Typography>\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <List sx={{ \n              borderRadius: 1, \n              border: '1px solid',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)', \n              overflow: 'hidden',\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n            }}>\n              {files.map((file) => (\n                <ListItem\n                  key={file._id}\n                  button\n                  divider\n                  sx={{ \n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \n                    '&:hover': {\n                      bgcolor: theme.palette.mode === 'dark' \n                        ? 'rgba(255, 255, 255, 0.1)' \n                        : 'rgba(25, 118, 210, 0.08)'\n                    }\n                  }}\n                  onClick={() => handleFileSelect(file)}\n                >\n                  <ListItemIcon>\n                    <ChartIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={<Typography fontWeight=\"medium\">{file.name}</Typography>}\n                    secondary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                        <Chip \n                          size=\"small\" \n                          label={file.type.toUpperCase()} \n                          color={file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary'}\n                          sx={{ mr: 1, height: 20, fontSize: '0.7rem' }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {(file.size / 1024).toFixed(2)} KB\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* Edit dialog */}\n      <Dialog\n        open={openEditDialog}\n        onClose={handleCloseEditDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\n          Edit Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3, mt: 2 }}>\n          {currentVisualization && (\n            <Box sx={{ pt: 1 }}>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={currentVisualization.name || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter a descriptive name\"\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\n                <textarea\n                  name=\"description\"\n                  value={currentVisualization.description || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe what insights this visualization provides\"\n                  rows={3}\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\n                    <Box \n                      key={type}\n                      onClick={() => setCurrentVisualization({\n                        ...currentVisualization,\n                        chartType: type\n                      })}\n                      sx={{ \n                        border: '2px solid',\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                        borderRadius: 2,\n                        p: 2,\n                        width: '110px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                        bgcolor: currentVisualization.chartType === type \n                          ? (theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)') \n                          : (theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent')\n                      }}\n                    >\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      <Typography variant=\"body2\">\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUpdateVisualization}\n            startIcon={<EditIcon />}\n          >\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Axis selection dialog */}\n      <Dialog\n        open={axisSelectionOpen}\n        onClose={() => {\n          setAxisSelectionOpen(false);\n          setError(null);\n        }}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          py: 2, \n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Typography variant=\"h6\">\n            Select Data for Visualization\n          </Typography>\n          <Chip \n            label={selectedFile?.name || 'No file selected'} \n            size=\"small\" \n            color=\"default\"\n            sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\n          />\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Box sx={{ \n                mb: 3, \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)', \n                borderRadius: 1,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                border: 1,\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }}>\n                <Box>\n                  <Typography variant=\"h6\">Data Summary</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\n                  </Typography>\n                </Box>\n                <Chip \n                  label=\"Ready for visualization\" \n                  color=\"success\" \n                  icon={<CheckCircleIcon />} \n                  sx={{ fontWeight: 'medium' }}\n                />\n              </Box>\n              \n              <Typography variant=\"h6\" gutterBottom>\n                Select Data Axes\n              </Typography>\n              \n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    X-Axis (Categories)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \n                    borderRadius: 1, \n                    p: 1,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedXAxis}\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.primary.main,\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select X-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    Y-Axis (Values)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                    borderRadius: 1,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedYAxis}\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.primary.main,\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select Y-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end', \n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setAxisSelectionOpen(false);\n              setError(null);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={!selectedXAxis || !selectedYAxis || loading}\n            onClick={handleGenerateCharts}\n          >\n            Generate Charts\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* Delete confirmation */}\n      <Dialog\n        open={openDeleteDialog}\n        onClose={handleCancelDelete}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\n          Delete Visualization\n        </DialogTitle>\n        <DialogContent sx={{ mt: 2, p: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\n            <Typography variant=\"h6\">\n              Are you sure?\n            </Typography>\n          </Box>\n          <Typography>\n            This visualization will be permanently deleted. This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}