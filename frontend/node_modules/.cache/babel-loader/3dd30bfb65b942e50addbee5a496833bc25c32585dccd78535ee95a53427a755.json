{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress, Paper, Container, Select, MenuItem } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  var _analysis$columns;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi, _analysisData$analysi2;\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n\n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n\n        // Find correlations between numeric columns\n        const correlations = ((_analysisData$analysi = analysisData.analysis.advancedAnalysis) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.correlations) || {};\n\n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n\n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          line: {\n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          pie: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          scatter: {\n            x: numericColumns[0] || defaultXAxis,\n            y: numericColumns[1] || numericColumns[0] || defaultYAxis\n          }\n        };\n\n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        setAnalysis({\n          rowCount: ((_analysisData$analysi2 = analysisData.analysis.summary) === null || _analysisData$analysi2 === void 0 ? void 0 : _analysisData$analysi2.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart - Good for comparing values across categories',\n            reasoning: 'Based on data structure',\n            confidence: 85,\n            xAxis: recommendedAxes.bar.x,\n            yAxis: recommendedAxes.bar.y\n          }, {\n            type: 'line',\n            description: 'Line Chart - Best for showing trends over time or continuous data',\n            reasoning: 'Good for trends over time',\n            confidence: 75,\n            xAxis: recommendedAxes.line.x,\n            yAxis: recommendedAxes.line.y\n          }, {\n            type: 'pie',\n            description: 'Pie Chart - Excellent for showing proportions of a whole',\n            reasoning: 'Good for showing proportions',\n            confidence: 65,\n            xAxis: recommendedAxes.pie.x,\n            yAxis: recommendedAxes.pie.y\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot - Ideal for showing correlation between variables',\n            reasoning: 'Good for showing correlations',\n            confidence: 60,\n            xAxis: recommendedAxes.scatter.x,\n            yAxis: recommendedAxes.scatter.y\n          }]\n        });\n\n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n\n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n\n    // Close the file selection dialog\n    setOpenDialog(false);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n\n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      createChartInstance(chart.chartType, chart, newInstances);\n    });\n    setChartPreviewInstances(newInstances);\n  };\n  const createChartInstance = (chartKey, chart, instancesObject) => {\n    var _chart$data, _chart$data2;\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n\n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Create default data if not provided\n    const defaultLabels = ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'];\n    const defaultValues = [65, 59, 80, 81, 56];\n\n    // Prepare data for the chart\n    const chartData = {\n      labels: ((_chart$data = chart.data) === null || _chart$data === void 0 ? void 0 : _chart$data.labels) || defaultLabels,\n      datasets: [{\n        label: chart.title || chart.yAxis || 'Value',\n        data: ((_chart$data2 = chart.data) === null || _chart$data2 === void 0 ? void 0 : _chart$data2.values) || defaultValues,\n        backgroundColor: [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.success.main, theme.palette.warning.main, theme.palette.info.main, theme.palette.error.main, '#9c27b0',\n        // Purple\n        '#2196f3',\n        // Blue\n        '#4caf50',\n        // Green\n        '#ff9800' // Orange\n        ],\n        borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n        borderWidth: 1\n      }]\n    };\n\n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        },\n        y: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        }\n      }\n    };\n    try {\n      // Create the chart\n      const newChart = new Chart(ctx, {\n        type: chart.chartType || 'bar',\n        data: chartData,\n        options: options\n      });\n      instancesObject[chartKey] = newChart;\n    } catch (error) {\n      console.error(`Error creating chart for ${chartKey}:`, error);\n    }\n  };\n  const handleSaveChart = async chart => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n\n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n\n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        console.log(\"Chart image saved locally\");\n\n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n\n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully to your account!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4;\n    if (!chartContainerRef.current || !visualization) return;\n\n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.xAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : (_visualization$config4 = _visualization$config3.yAxis) === null || _visualization$config4 === void 0 ? void 0 : _visualization$config4.label) || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    try {\n      if (chartType === 'scatter') {\n        var _visualization$config5, _visualization$config6;\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : (_visualization$config6 = _visualization$config5.yAxis) === null || _visualization$config6 === void 0 ? void 0 : _visualization$config6.label) || visualization.yAxis || 'Value',\n            data: [{\n              x: 20,\n              y: 45\n            }, {\n              x: 25,\n              y: 55\n            }, {\n              x: 30,\n              y: 65\n            }, {\n              x: 35,\n              y: 75\n            }, {\n              x: 40,\n              y: 70\n            }, {\n              x: 45,\n              y: 60\n            }],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9\n          }]\n        };\n      } else if (chartType === 'pie') {\n        var _visualization$config7, _visualization$config8;\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config7 = visualization.config) === null || _visualization$config7 === void 0 ? void 0 : (_visualization$config8 = _visualization$config7.yAxis) === null || _visualization$config8 === void 0 ? void 0 : _visualization$config8.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        var _visualization$config9, _visualization$config10;\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config9 = visualization.config) === null || _visualization$config9 === void 0 ? void 0 : (_visualization$config10 = _visualization$config9.yAxis) === null || _visualization$config10 === void 0 ? void 0 : _visualization$config10.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    var _location$state2;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n\n        // Schedule rendering after component mounts\n        setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n        }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n      }\n    }\n  }, [location]);\n\n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    var _analysis$visualizati;\n    if (!(analysis !== null && analysis !== void 0 && (_analysis$visualizati = analysis.visualizationSuggestions) !== null && _analysis$visualizati !== void 0 && _analysis$visualizati.length)) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Recommended Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: analysis.visualizationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              },\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            onClick: () => {\n              setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n              setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n              handleGenerateCharts();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  flexGrow: 1\n                },\n                children: [suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1), \" Chart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${suggestion.confidence}% match`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 1\n              },\n              children: [suggestion.type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#1976d2'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 49\n              }, this), suggestion.type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#2e7d32'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 50\n              }, this), suggestion.type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#ed6c02'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 49\n              }, this), suggestion.type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#9c27b0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Visualizations\",\n        subtitle: \"Create and manage your data visualizations\",\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 26\n          }, this),\n          onClick: () => setOpenDialog(true),\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            color: \"primary\",\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"AI Recommended Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [\"Based on your data structure, here are the most effective visualizations for \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => chart.isAIRecommended).map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${chart.confidence}% match`,\n                  color: chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default',\n                  size: \"small\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: 'white',\n                    bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: chart.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[chart.chartType] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1109,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1115,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1114,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 19\n            }, this)\n          }, chart.chartType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 28\n            }, this),\n            onClick: () => {\n              setOpenDialog(true);\n              setAxisSelectionOpen(true);\n            },\n            children: \"Create Custom Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Custom Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: [chart.yAxis, \" by \", chart.xAxis]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`custom-${chart.chartType}-${index}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1196,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 19\n            }, this)\n          }, `custom-${chart.chartType}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 11\n      }, this), previewCharts.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          width: '100%',\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            width: 80,\n            height: 80,\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: \"No visualizations yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          align: \"center\",\n          sx: {\n            maxWidth: 400,\n            mb: 4\n          },\n          children: \"Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 26\n          }, this),\n          onClick: handleCreateClick,\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 11\n      }, this), visualizations.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3\n          },\n          children: \"Saved Visualizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: visualizations.map(viz => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: viz.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1274,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1266,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: viz.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1278,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`viz-${viz._id}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1282,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleViewVisualization(viz),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1288,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1287,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1256,\n              columnNumber: 19\n            }, this)\n          }, viz._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1255,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            mt: 1,\n            color: 'text.secondary'\n          },\n          children: \"Choose a file to analyze and visualize:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            overflow: 'hidden',\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => handleFileSelect(file),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1359,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"medium\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1362,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: file.type.toUpperCase(),\n                  color: file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary',\n                  sx: {\n                    mr: 1,\n                    height: 20,\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1365,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(file.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1371,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1364,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select Data for Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'No file selected',\n          size: \"small\",\n          color: \"default\",\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1442,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1459,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1457,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1466,\n                columnNumber: 25\n              }, this),\n              sx: {\n                fontWeight: 'medium'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.primary.main\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select X-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1516,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1520,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1487,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1480,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: theme.palette.primary.main\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select Y-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1565,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1569,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1536,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1530,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1526,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1595,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1578,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden',\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1620,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1628,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1635,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1636,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1641,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1647,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1651,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1654,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1652,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1666,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1663,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1640,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1631,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1626,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1624,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1606,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1695,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1702,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1703,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1701,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1722,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1723,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1721,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)' : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1766,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1767,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1768,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1769,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1770,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1745,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1743,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1741,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1698,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1781,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1787,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1784,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1780,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1682,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1806,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1811,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1812,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1810,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1809,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1821,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1824,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1820,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1795,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1028,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"L2D9Jz4fUBYqFDEgWNb323sNPWg=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","Paper","Container","Select","MenuItem","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizations","_s","_analysis$columns","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","_analysisData$analysi2","columnTypes","Object","keys","basicAnalysis","forEach","column","type","dateColumns","filter","col","numericColumns","categoricalColumns","correlations","advancedAnalysis","defaultXAxis","defaultYAxis","recommendedAxes","bar","x","y","line","pie","scatter","length","correlationPairs","entries","sort","a","b","Math","abs","bestCorrelationPair","split","rowCount","summary","totalRows","columns","visualizationSuggestions","description","reasoning","confidence","xAxis","yAxis","generateAIRecommendedCharts","previewData","chartType","push","name","charAt","toUpperCase","slice","fileId","isAIRecommended","setTimeout","renderPreviewCharts","handleCreateClick","handleCloseDialog","handleGenerateCharts","suggestion","find","s","charts","values","instance","destroy","newInstances","chart","createChartInstance","chartKey","instancesObject","_chart$data","_chart$data2","canvas","current","ctx","getContext","defaultLabels","defaultValues","chartData","labels","datasets","label","backgroundColor","palette","primary","main","secondary","warning","info","borderColor","mode","borderWidth","options","responsive","maintainAspectRatio","animation","duration","plugins","legend","position","color","text","font","size","tooltip","titleColor","bodyColor","scales","grid","ticks","newChart","handleSaveChart","canvasRef","imageUrl","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","alert","saveToServer","confirm","config","field","subtitle","Date","toLocaleDateString","method","headers","JSON","stringify","isAIGenerated","message","result","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","variant","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","family","typography","fontFamily","display","weight","padding","_visualization$config5","_visualization$config6","pointRadius","pointHoverRadius","_visualization$config7","_visualization$config8","_visualization$config9","_visualization$config10","tension","_location$state2","savedPreviewCharts","sessionStorage","getItem","savedPreviewFile","parsedCharts","parse","setItem","renderRecommendedVisualizations","_analysis$visualizati","mb","gutterBottom","container","spacing","map","index","sm","md","p","cursor","transition","transform","boxShadow","bgcolor","border","onClick","alignItems","flexGrow","height","justifyContent","maxWidth","py","action","startIcon","severity","borderRadius","mr","component","paragraph","backgroundImage","flexDirection","overflow","fontWeight","px","ref","el","style","fullWidth","open","onClose","PaperProps","borderBottom","button","divider","toFixed","borderTop","icon","onChange","displayEmpty","MenuProps","disabled","gap","pt","placeholder","rows","flexWrap","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Divider,\n  Alert,\n  IconButton,\n  useTheme,\n  CircularProgress,\n  Paper,\n  Container,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport {\n  BarChart as ChartIcon,\n  Add as AddIcon,\n  Timeline as TimelineIcon,\n  BubbleChart as ScatterIcon,\n  ShowChart as LineIcon,\n  PieChart as PieIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\n\nfunction Visualizations() {\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = async (file) => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    \n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      \n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n      \n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n        \n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n        \n        // Find correlations between numeric columns\n        const correlations = analysisData.analysis.advancedAnalysis?.correlations || {};\n        \n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n        \n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          line: { \n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          pie: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          scatter: { \n            x: numericColumns[0] || defaultXAxis, \n            y: numericColumns[1] || numericColumns[0] || defaultYAxis \n          }\n        };\n        \n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        \n        setAnalysis({\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [\n            {\n              type: 'bar',\n              description: 'Bar Chart - Good for comparing values across categories',\n              reasoning: 'Based on data structure',\n              confidence: 85,\n              xAxis: recommendedAxes.bar.x,\n              yAxis: recommendedAxes.bar.y\n            },\n            {\n              type: 'line',\n              description: 'Line Chart - Best for showing trends over time or continuous data',\n              reasoning: 'Good for trends over time',\n              confidence: 75,\n              xAxis: recommendedAxes.line.x,\n              yAxis: recommendedAxes.line.y\n            },\n            {\n              type: 'pie',\n              description: 'Pie Chart - Excellent for showing proportions of a whole',\n              reasoning: 'Good for showing proportions',\n              confidence: 65,\n              xAxis: recommendedAxes.pie.x,\n              yAxis: recommendedAxes.pie.y\n            },\n            {\n              type: 'scatter',\n              description: 'Scatter Plot - Ideal for showing correlation between variables',\n              reasoning: 'Good for showing correlations',\n              confidence: 60,\n              xAxis: recommendedAxes.scatter.x,\n              yAxis: recommendedAxes.scatter.y\n            }\n          ]\n        });\n        \n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n    \n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      \n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    \n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n    \n    // Close the file selection dialog\n    setOpenDialog(false);\n    \n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n    \n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n    \n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      \n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    \n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n    \n    // Schedule rendering after the DOM updates\n      setTimeout(() => {\n        renderPreviewCharts(previewData);\n      }, 300);\n  };\n\n  const renderPreviewCharts = (charts) => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    \n    const newInstances = {};\n    \n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      createChartInstance(chart.chartType, chart, newInstances);\n    });\n    \n    setChartPreviewInstances(newInstances);\n  };\n  \n  const createChartInstance = (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n    \n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    // Create default data if not provided\n    const defaultLabels = ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'];\n    const defaultValues = [65, 59, 80, 81, 56];\n    \n    // Prepare data for the chart\n    const chartData = {\n      labels: chart.data?.labels || defaultLabels,\n      datasets: [{\n        label: chart.title || chart.yAxis || 'Value',\n        data: chart.data?.values || defaultValues,\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.secondary.main,\n          theme.palette.success.main,\n          theme.palette.warning.main,\n          theme.palette.info.main,\n          theme.palette.error.main,\n          '#9c27b0', // Purple\n          '#2196f3', // Blue\n          '#4caf50', // Green\n          '#ff9800', // Orange\n        ],\n        borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n        borderWidth: 1\n      }]\n    };\n    \n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000,\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        },\n        y: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        }\n      }\n    };\n    \n    try {\n      // Create the chart\n      const newChart = new Chart(ctx, {\n        type: chart.chartType || 'bar',\n        data: chartData,\n        options: options\n      });\n      \n      instancesObject[chartKey] = newChart;\n    } catch (error) {\n      console.error(`Error creating chart for ${chartKey}:`, error);\n    }\n  };\n\n  const handleSaveChart = async (chart) => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n        \n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n        \n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        \n        console.log(\"Chart image saved locally\");\n        \n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n      \n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n      \n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      \n      const result = await response.json();\n      console.log('Visualization created:', result);\n      \n      // Show success message\n      alert('Visualization saved successfully to your account!');\n      \n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n      \n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      \n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n      \n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  \n  const handleEditVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  \n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    \n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n      \n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  \n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteVisualization = async (vizId) => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      \n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Delete response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      \n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n      \n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n\n  const getVisualizationIcon = (type) => {\n    const iconSize = { fontSize: 80, opacity: 0.8 };\n    const colors = {\n      bar: '#1976d2',    // blue\n      scatter: '#9c27b0', // purple\n      line: '#2e7d32',    // green\n      pie: '#ed6c02'      // orange\n    };\n    \n    const iconColor = { color: colors[type] || colors.bar };\n    \n    switch (type) {\n      case 'bar':\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'scatter':\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'line':\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'pie':\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\n      default:\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (loading) {\n      return (\n        <Grid item xs={12}>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <LinearProgress />\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\n              Loading...\n            </Typography>\n          </Box>\n        </Grid>\n      );\n    }\n    \n    if (visualizations.length === 0) {\n      return (\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\n          </Typography>\n        </Grid>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderChart = (visualization) => {\n    if (!chartContainerRef.current || !visualization) return;\n    \n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    \n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily,\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || visualization.config?.xAxis?.label || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || visualization.config?.yAxis?.label || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    \n    try {\n      if (chartType === 'scatter') {\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [\n              { x: 20, y: 45 },\n              { x: 25, y: 55 },\n              { x: 30, y: 65 },\n              { x: 35, y: 75 },\n              { x: 40, y: 70 },\n              { x: 45, y: 60 }\n            ],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9,\n          }]\n        };\n      } else if (chartType === 'pie') {\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n      \n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      \n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    \n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        \n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n        \n        // Schedule rendering after component mounts\n      setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n      }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n    }\n    }\n  }, [location]);\n    \n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      \n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    if (!analysis?.visualizationSuggestions?.length) return null;\n\n  return (\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Recommended Visualizations\n        </Typography>\n        <Grid container spacing={2}>\n          {analysis.visualizationSuggestions.map((suggestion, index) => (\n            <Grid item xs={12} sm={6} md={3} key={index}>\n              <Paper\n                sx={{\n                  p: 2,\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4,\n                  },\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                  border: 1,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n                }}\n                onClick={() => {\n                  setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n                  setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n                  handleGenerateCharts();\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\n                    {suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1)} Chart\n                  </Typography>\n                  <Chip\n                    label={`${suggestion.confidence}% match`}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Box sx={{ height: 100, display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>\n                  {suggestion.type === 'bar' && <ChartIcon sx={{ fontSize: 50, color: '#1976d2' }} />}\n                  {suggestion.type === 'line' && <LineIcon sx={{ fontSize: 50, color: '#2e7d32' }} />}\n                  {suggestion.type === 'pie' && <PieIcon sx={{ fontSize: 50, color: '#ed6c02' }} />}\n                  {suggestion.type === 'scatter' && <ScatterIcon sx={{ fontSize: 50, color: '#9c27b0' }} />}\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {suggestion.description}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ py: 4 }}>\n        <PageHeader\n          title=\"Visualizations\"\n          subtitle=\"Create and manage your data visualizations\"\n          action={\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={() => setOpenDialog(true)}\n            >\n              Create Visualization\n            </Button>\n          }\n        />\n\n        {loading && <LinearProgress sx={{ mb: 2 }} />}\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* AI Recommended Visualizations Section */}\n        {previewCharts.filter(chart => chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <CheckCircleIcon color=\"primary\" sx={{ mr: 1 }} />\n              <Typography variant=\"h5\" component=\"h2\">\n                AI Recommended Visualizations\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n              Based on your data structure, here are the most effective visualizations for {previewFile?.name}\n            </Typography>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => chart.isAIRecommended).map((chart) => (\n                <Grid item xs={12} sm={6} key={chart.chartType}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                      <Chip \n                        label={`${chart.confidence}% match`} \n                        color={chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default'} \n                        size=\"small\"\n                        sx={{ fontWeight: 'bold', color: 'white', bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575' }}\n                      />\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[chart.chartType] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n            \n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n              <Button \n                variant=\"outlined\" \n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  setOpenDialog(true);\n                  setAxisSelectionOpen(true);\n                }}\n              >\n                Create Custom Chart\n              </Button>\n            </Box>\n          </Paper>\n        )}\n        \n        {/* Custom Visualizations Section */}\n        {previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <Typography variant=\"h5\" component=\"h2\">\n                Custom Visualizations\n              </Typography>\n            </Box>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => (\n                <Grid item xs={12} sm={6} key={`custom-${chart.chartType}-${index}`}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.yAxis} by {chart.xAxis}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`custom-${chart.chartType}-${index}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        )}\n\n        {/* Placeholder when no visualizations are available */}\n        {previewCharts.length === 0 && !loading && (\n          <Box \n            sx={{ \n              mt: 4, \n              p: 4, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center',\n              height: '100%',\n              width: '100%',\n              borderRadius: 2,\n              bgcolor: 'background.paper',\n              backgroundImage: 'none',\n              boxShadow: 1\n            }}\n          >\n            <ChartIcon sx={{ width: 80, height: 80, color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)', mb: 2 }} />\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              No visualizations yet\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ maxWidth: 400, mb: 4 }}>\n              Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<AddIcon />}\n              onClick={handleCreateClick}\n            >\n              Create Visualization\n            </Button>\n          </Box>\n        )}\n\n        {/* Saved Visualizations Section */}\n        {visualizations.length > 0 && (\n          <Box sx={{ mt: 6 }}>\n            <Typography variant=\"h5\" sx={{ mb: 3 }}>\n              Saved Visualizations\n            </Typography>\n            <Grid container spacing={3}>\n              {visualizations.map((viz) => (\n                <Grid item xs={12} sm={6} key={viz._id}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {viz.name}\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {viz.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`viz-${viz._id}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleViewVisualization(viz)}\n                      >\n                        View\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        )}\n      </Box>\n\n      {/* File Selection Dialog */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          Create Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 1, color: 'text.secondary' }}>\n            Choose a file to analyze and visualize:\n          </Typography>\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <List sx={{ \n              borderRadius: 1, \n              border: '1px solid',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)', \n              overflow: 'hidden',\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n            }}>\n              {files.map((file) => (\n                <ListItem\n                  key={file._id}\n                  button\n                  divider\n                  sx={{ \n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \n                    '&:hover': {\n                      bgcolor: theme.palette.mode === 'dark' \n                        ? 'rgba(255, 255, 255, 0.1)' \n                        : 'rgba(25, 118, 210, 0.08)'\n                    }\n                  }}\n                  onClick={() => handleFileSelect(file)}\n                >\n                  <ListItemIcon>\n                    <ChartIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={<Typography fontWeight=\"medium\">{file.name}</Typography>}\n                    secondary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                        <Chip \n                          size=\"small\" \n                          label={file.type.toUpperCase()} \n                          color={file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary'}\n                          sx={{ mr: 1, height: 20, fontSize: '0.7rem' }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {(file.size / 1024).toFixed(2)} KB\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* Axis Selection Dialog */}\n      <Dialog\n        open={axisSelectionOpen}\n        onClose={() => {\n          setAxisSelectionOpen(false);\n          setError(null);\n        }}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          py: 2, \n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Typography variant=\"h6\">\n            Select Data for Visualization\n          </Typography>\n          <Chip \n            label={selectedFile?.name || 'No file selected'} \n            size=\"small\" \n            color=\"default\"\n            sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\n          />\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Box sx={{ \n                mb: 3, \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)', \n                borderRadius: 1,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                border: 1,\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }}>\n                <Box>\n                  <Typography variant=\"h6\">Data Summary</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\n                  </Typography>\n                </Box>\n                <Chip \n                  label=\"Ready for visualization\" \n                  color=\"success\" \n                  icon={<CheckCircleIcon />} \n                  sx={{ fontWeight: 'medium' }}\n                />\n              </Box>\n              \n              <Typography variant=\"h6\" gutterBottom>\n                Select Data Axes\n              </Typography>\n              \n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    X-Axis (Categories)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \n                    borderRadius: 1, \n                    p: 1,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedXAxis}\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.primary.main,\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select X-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    Y-Axis (Values)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                    borderRadius: 1,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedYAxis}\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: theme.palette.primary.main,\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select Y-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end', \n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setAxisSelectionOpen(false);\n              setError(null);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={!selectedXAxis || !selectedYAxis || loading}\n            onClick={handleGenerateCharts}\n          >\n            Generate Charts\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* View Visualization Dialog */}\n      <Dialog\n        open={openViewDialog}\n        onClose={handleCloseViewDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden',\n            bgcolor: 'background.paper',\n          }\n        }}\n      >\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\n          <Typography variant=\"h5\">\n            {currentVisualization?.name || 'View Visualization'}\n          </Typography>\n        </Box>\n        <DialogContent sx={{ p: 0 }}>\n          {currentVisualization && (\n            <Box>\n              <Box sx={{ height: 400, p: 3 }}>\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\n              </Box>\n              \n              <Box sx={{ \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5' \n              }}>\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\n                </Typography>\n                \n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n                  <Chip \n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\n                    color=\"primary\"\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\n                    sx={{ mr: 1 }}\n                  />\n                  <Chip \n                    label={`${currentVisualization.confidence || 90}% confidence`}\n                    color=\"success\"\n                  />\n                  <Box sx={{ flexGrow: 1 }} />\n                  <Button \n                    variant=\"outlined\" \n                    startIcon={<EditIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleEditVisualization(currentVisualization);\n                    }}\n                    sx={{ mr: 1 }}\n                  >\n                    Edit\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleDeleteVisualization(currentVisualization._id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n      </Dialog>\n      \n      {/* Edit Visualization Dialog - simplified */}\n      <Dialog\n        open={openEditDialog}\n        onClose={handleCloseEditDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\n          Edit Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3, mt: 2 }}>\n          {currentVisualization && (\n            <Box sx={{ pt: 1 }}>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={currentVisualization.name || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter a descriptive name\"\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\n                <textarea\n                  name=\"description\"\n                  value={currentVisualization.description || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe what insights this visualization provides\"\n                  rows={3}\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\n                    <Box \n                      key={type}\n                      onClick={() => setCurrentVisualization({\n                        ...currentVisualization,\n                        chartType: type\n                      })}\n                      sx={{ \n                        border: '2px solid',\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                        borderRadius: 2,\n                        p: 2,\n                        width: '110px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                        bgcolor: currentVisualization.chartType === type \n                          ? (theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)') \n                          : (theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent')\n                      }}\n                    >\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      <Typography variant=\"body2\">\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUpdateVisualization}\n            startIcon={<EditIcon />}\n          >\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={openDeleteDialog}\n        onClose={handleCancelDelete}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\n          Delete Visualization\n        </DialogTitle>\n        <DialogContent sx={{ mt: 2, p: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\n            <Typography variant=\"h6\">\n              Are you sure?\n            </Typography>\n          </Box>\n          <Typography>\n            This visualization will be permanently deleted. This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}