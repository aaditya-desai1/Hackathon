{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress, Paper, Container, Select, MenuItem } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  var _analysis$columns;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi, _analysisData$analysi2;\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n\n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n\n        // Find correlations between numeric columns\n        const correlations = ((_analysisData$analysi = analysisData.analysis.advancedAnalysis) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.correlations) || {};\n\n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n\n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          line: {\n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          pie: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          scatter: {\n            x: numericColumns[0] || defaultXAxis,\n            y: numericColumns[1] || numericColumns[0] || defaultYAxis\n          }\n        };\n\n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        setAnalysis({\n          rowCount: ((_analysisData$analysi2 = analysisData.analysis.summary) === null || _analysisData$analysi2 === void 0 ? void 0 : _analysisData$analysi2.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart - Good for comparing values across categories',\n            reasoning: 'Based on data structure',\n            confidence: 85,\n            xAxis: recommendedAxes.bar.x,\n            yAxis: recommendedAxes.bar.y\n          }, {\n            type: 'line',\n            description: 'Line Chart - Best for showing trends over time or continuous data',\n            reasoning: 'Good for trends over time',\n            confidence: 75,\n            xAxis: recommendedAxes.line.x,\n            yAxis: recommendedAxes.line.y\n          }, {\n            type: 'pie',\n            description: 'Pie Chart - Excellent for showing proportions of a whole',\n            reasoning: 'Good for showing proportions',\n            confidence: 65,\n            xAxis: recommendedAxes.pie.x,\n            yAxis: recommendedAxes.pie.y\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot - Ideal for showing correlation between variables',\n            reasoning: 'Good for showing correlations',\n            confidence: 60,\n            xAxis: recommendedAxes.scatter.x,\n            yAxis: recommendedAxes.scatter.y\n          }]\n        });\n\n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n\n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n\n    // Close the file selection dialog\n    setOpenDialog(false);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Custom Chart: ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile,\n        isAIRecommended: false\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(prevCharts => {\n      // Maintain existing AI-recommended charts if any\n      const aiCharts = prevCharts.filter(chart => chart.isAIRecommended);\n      return [...aiCharts, ...previewData];\n    });\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n\n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      const chartKey = chart.isAIRecommended ? chart.chartType : `custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`;\n\n      // Schedule creation of chart instance after DOM update\n      setTimeout(() => {\n        if (chartPreviewRefs.current[chartKey]) {\n          createChartInstance(chartKey, chart, newInstances);\n        }\n      }, 100);\n    });\n\n    // Don't automatically update existing charts - this was causing duplicate canvas issues\n\n    setChartPreviewInstances(newInstances);\n  };\n  const createChartInstance = async (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n\n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Attempt to fetch real data if possible\n    let chartData = {\n      labels: ['Loading...'],\n      datasets: [{\n        label: chart.yAxis || 'Value',\n        data: [0],\n        backgroundColor: theme.palette.primary.main\n      }]\n    };\n    try {\n      // Fetch chart data from backend\n      if (chart.fileId && chart.xAxis && chart.yAxis) {\n        const response = await fetch(`/api/data/chart?fileId=${chart.fileId}&xAxis=${chart.xAxis}&yAxis=${chart.yAxis}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.success && data.chartData) {\n            // Format the data based on chart type\n            const backgroundColor = ['#1976d2',\n            // Blue (Primary)\n            '#9c27b0',\n            // Purple\n            '#2e7d32',\n            // Green\n            '#ed6c02',\n            // Orange\n            '#d32f2f',\n            // Red\n            '#0288d1',\n            // Light Blue\n            '#388e3c',\n            // Light Green\n            '#f57c00',\n            // Deep Orange\n            '#512da8',\n            // Deep Purple\n            '#00796b' // Teal\n            ];\n\n            // Process data based on chart type\n            if (chart.chartType === 'pie') {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: backgroundColor,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n                  borderWidth: 1\n                }]\n              };\n            } else {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: chart.chartType === 'bar' ? backgroundColor : backgroundColor[0],\n                  borderColor: chart.chartType === 'line' || chart.chartType === 'scatter' ? backgroundColor[0] : undefined,\n                  borderWidth: chart.chartType === 'line' ? 2 : 1,\n                  pointBackgroundColor: chart.chartType === 'scatter' || chart.chartType === 'line' ? backgroundColor[0] : undefined,\n                  pointRadius: chart.chartType === 'scatter' ? 5 : chart.chartType === 'line' ? 3 : 0,\n                  fill: chart.chartType === 'line' ? false : undefined\n                }]\n              };\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n      // Use default data if real data fetch fails\n      chartData = {\n        labels: ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'],\n        datasets: [{\n          label: chart.yAxis || 'Value',\n          data: [65, 59, 80, 81, 56],\n          backgroundColor: [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.success.main, theme.palette.warning.main, theme.palette.info.main]\n        }]\n      };\n    }\n\n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000\n      },\n      plugins: {\n        legend: {\n          position: chart.chartType === 'pie' ? 'right' : 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: chart.chartType === 'pie' ? undefined : {\n        x: {\n          title: {\n            display: true,\n            text: chart.xAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: chart.yAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          beginAtZero: true\n        }\n      }\n    };\n\n    // Create the chart instance\n    const chartInstance = new Chart(ctx, {\n      type: chart.chartType,\n      data: chartData,\n      options: options\n    });\n\n    // Store the instance\n    instancesObject[chartKey] = chartInstance;\n  };\n  const handleSaveChart = async chart => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n\n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n\n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        console.log(\"Chart image saved locally\");\n\n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n\n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully to your account!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4;\n    if (!chartContainerRef.current || !visualization) return;\n\n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.xAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : (_visualization$config4 = _visualization$config3.yAxis) === null || _visualization$config4 === void 0 ? void 0 : _visualization$config4.label) || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    try {\n      if (chartType === 'scatter') {\n        var _visualization$config5, _visualization$config6;\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : (_visualization$config6 = _visualization$config5.yAxis) === null || _visualization$config6 === void 0 ? void 0 : _visualization$config6.label) || visualization.yAxis || 'Value',\n            data: [{\n              x: 20,\n              y: 45\n            }, {\n              x: 25,\n              y: 55\n            }, {\n              x: 30,\n              y: 65\n            }, {\n              x: 35,\n              y: 75\n            }, {\n              x: 40,\n              y: 70\n            }, {\n              x: 45,\n              y: 60\n            }],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9\n          }]\n        };\n      } else if (chartType === 'pie') {\n        var _visualization$config7, _visualization$config8;\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config7 = visualization.config) === null || _visualization$config7 === void 0 ? void 0 : (_visualization$config8 = _visualization$config7.yAxis) === null || _visualization$config8 === void 0 ? void 0 : _visualization$config8.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        var _visualization$config9, _visualization$config10;\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config9 = visualization.config) === null || _visualization$config9 === void 0 ? void 0 : (_visualization$config10 = _visualization$config9.yAxis) === null || _visualization$config10 === void 0 ? void 0 : _visualization$config10.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    var _location$state2;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n\n        // Schedule rendering after component mounts\n        setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n        }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n      }\n    }\n  }, [location]);\n\n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    var _analysis$visualizati;\n    if (!(analysis !== null && analysis !== void 0 && (_analysis$visualizati = analysis.visualizationSuggestions) !== null && _analysis$visualizati !== void 0 && _analysis$visualizati.length)) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Recommended Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: analysis.visualizationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              },\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            onClick: () => {\n              setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n              setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n              handleGenerateCharts();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  flexGrow: 1\n                },\n                children: [suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1), \" Chart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${suggestion.confidence}% match`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 1\n              },\n              children: [suggestion.type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#1976d2'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1091,\n                columnNumber: 49\n              }, this), suggestion.type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#2e7d32'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 50\n              }, this), suggestion.type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#ed6c02'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 49\n              }, this), suggestion.type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#9c27b0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Visualizations\",\n        subtitle: \"Create and manage your data visualizations\",\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 26\n          }, this),\n          onClick: () => setOpenDialog(true),\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            color: \"primary\",\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"AI Recommended Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [\"Based on your data structure, here are the most effective visualizations for \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => chart.isAIRecommended).map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${chart.confidence}% match`,\n                  color: chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default',\n                  size: \"small\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: 'white',\n                    bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1179,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: chart.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[chart.chartType] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1196,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 19\n            }, this)\n          }, chart.chartType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1213,\n              columnNumber: 28\n            }, this),\n            onClick: () => {\n              setOpenDialog(true);\n              setAxisSelectionOpen(true);\n            },\n            children: \"Create Custom Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Custom Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1263,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: [chart.yAxis, \" by \", chart.xAxis]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1267,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1271,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1277,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1276,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1245,\n              columnNumber: 19\n            }, this)\n          }, `custom-${chart.chartType}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1244,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1227,\n        columnNumber: 11\n      }, this), previewCharts.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          width: '100%',\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            width: 80,\n            height: 80,\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: \"No visualizations yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          align: \"center\",\n          sx: {\n            maxWidth: 400,\n            mb: 4\n          },\n          children: \"Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 26\n          }, this),\n          onClick: handleCreateClick,\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 11\n      }, this), visualizations.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3\n          },\n          children: \"Saved Visualizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: visualizations.map(viz => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: viz.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1355,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: viz.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`viz-${viz._id}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1363,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleViewVisualization(viz),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1369,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1368,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1337,\n              columnNumber: 19\n            }, this)\n          }, viz._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1336,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: axisSelectionOpen ? 'Create Custom Visualization' : 'Create Visualization'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            mt: 1,\n            color: 'text.secondary'\n          },\n          children: axisSelectionOpen ? 'Choose a file and configure custom chart settings:' : 'Choose a file to analyze and visualize:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1408,\n          columnNumber: 11\n        }, this), !axisSelectionOpen && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"When you select a file, our AI will automatically generate the best visualizations based on your data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1416,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            p: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Analyzing your data and generating recommendations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1425,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            overflow: 'hidden',\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => {\n              if (axisSelectionOpen) {\n                // If in custom chart mode, just select the file but don't auto-generate\n                setSelectedFile(file);\n              } else {\n                // Otherwise, trigger AI analysis\n                handleFileSelect(file);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1461,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"medium\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1464,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: file.type.split('/')[1].toUpperCase(),\n                  color: file.type.includes('csv') ? 'success' : file.type.includes('json') ? 'info' : 'primary',\n                  sx: {\n                    mr: 1,\n                    height: 20,\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1467,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(file.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1473,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1466,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1491,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select Data for Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'No file selected',\n          size: \"small\",\n          color: \"default\",\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1537,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1544,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1543,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1560,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1561,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1568,\n                columnNumber: 25\n              }, this),\n              sx: {\n                fontWeight: 'medium'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1573,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1579,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 0,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    height: '56px',\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select X-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1619,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1623,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1589,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1582,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1630,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 0,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    height: '56px',\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select Y-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1670,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1674,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1640,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1633,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1629,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1577,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1683,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden',\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1725,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1733,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1732,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1740,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1741,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1746,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1752,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1756,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1759,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1757,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1771,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1768,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1745,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1736,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1729,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1711,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1800,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1807,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1808,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1806,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1827,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1828,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1826,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1847,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)' : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1871,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1872,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1873,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1874,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1875,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1850,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1848,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1846,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1805,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1886,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1892,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1885,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1911,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1916,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1917,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1915,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1921,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1914,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1926,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1929,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1925,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1900,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1109,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"L2D9Jz4fUBYqFDEgWNb323sNPWg=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","Paper","Container","Select","MenuItem","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizations","_s","_analysis$columns","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","_analysisData$analysi2","columnTypes","Object","keys","basicAnalysis","forEach","column","type","dateColumns","filter","col","numericColumns","categoricalColumns","correlations","advancedAnalysis","defaultXAxis","defaultYAxis","recommendedAxes","bar","x","y","line","pie","scatter","length","correlationPairs","entries","sort","a","b","Math","abs","bestCorrelationPair","split","rowCount","summary","totalRows","columns","visualizationSuggestions","description","reasoning","confidence","xAxis","yAxis","generateAIRecommendedCharts","previewData","chartType","push","name","charAt","toUpperCase","slice","fileId","isAIRecommended","setTimeout","renderPreviewCharts","handleCreateClick","handleCloseDialog","handleGenerateCharts","suggestion","find","s","prevCharts","aiCharts","chart","charts","values","instance","destroy","newInstances","chartKey","current","createChartInstance","instancesObject","canvas","ctx","getContext","chartData","labels","datasets","label","backgroundColor","palette","primary","main","borderColor","mode","borderWidth","undefined","pointBackgroundColor","pointRadius","fill","secondary","warning","info","options","responsive","maintainAspectRatio","animation","duration","plugins","legend","position","color","text","font","size","tooltip","titleColor","bodyColor","scales","display","ticks","grid","beginAtZero","handleSaveChart","canvasRef","imageUrl","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","alert","saveToServer","confirm","config","field","subtitle","Date","toLocaleDateString","method","headers","JSON","stringify","isAIGenerated","message","result","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","variant","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","family","typography","fontFamily","weight","padding","_visualization$config5","_visualization$config6","pointHoverRadius","_visualization$config7","_visualization$config8","_visualization$config9","_visualization$config10","tension","newChart","_location$state2","savedPreviewCharts","sessionStorage","getItem","savedPreviewFile","parsedCharts","parse","setItem","renderRecommendedVisualizations","_analysis$visualizati","mb","gutterBottom","container","spacing","map","index","sm","md","p","cursor","transition","transform","boxShadow","bgcolor","border","onClick","alignItems","flexGrow","height","justifyContent","maxWidth","py","action","startIcon","severity","borderRadius","mr","component","paragraph","backgroundImage","flexDirection","overflow","fontWeight","px","ref","el","style","fullWidth","open","onClose","PaperProps","borderBottom","button","divider","includes","toFixed","borderTop","icon","onChange","displayEmpty","MenuProps","disabled","gap","pt","placeholder","rows","flexWrap","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Divider,\n  Alert,\n  IconButton,\n  useTheme,\n  CircularProgress,\n  Paper,\n  Container,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport {\n  BarChart as ChartIcon,\n  Add as AddIcon,\n  Timeline as TimelineIcon,\n  BubbleChart as ScatterIcon,\n  ShowChart as LineIcon,\n  PieChart as PieIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\n\nfunction Visualizations() {\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = async (file) => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    \n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      \n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n      \n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n        \n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n        \n        // Find correlations between numeric columns\n        const correlations = analysisData.analysis.advancedAnalysis?.correlations || {};\n        \n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n        \n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          line: { \n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          pie: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          scatter: { \n            x: numericColumns[0] || defaultXAxis, \n            y: numericColumns[1] || numericColumns[0] || defaultYAxis \n          }\n        };\n        \n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        \n        setAnalysis({\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [\n            {\n              type: 'bar',\n              description: 'Bar Chart - Good for comparing values across categories',\n              reasoning: 'Based on data structure',\n              confidence: 85,\n              xAxis: recommendedAxes.bar.x,\n              yAxis: recommendedAxes.bar.y\n            },\n            {\n              type: 'line',\n              description: 'Line Chart - Best for showing trends over time or continuous data',\n              reasoning: 'Good for trends over time',\n              confidence: 75,\n              xAxis: recommendedAxes.line.x,\n              yAxis: recommendedAxes.line.y\n            },\n            {\n              type: 'pie',\n              description: 'Pie Chart - Excellent for showing proportions of a whole',\n              reasoning: 'Good for showing proportions',\n              confidence: 65,\n              xAxis: recommendedAxes.pie.x,\n              yAxis: recommendedAxes.pie.y\n            },\n            {\n              type: 'scatter',\n              description: 'Scatter Plot - Ideal for showing correlation between variables',\n              reasoning: 'Good for showing correlations',\n              confidence: 60,\n              xAxis: recommendedAxes.scatter.x,\n              yAxis: recommendedAxes.scatter.y\n            }\n          ]\n        });\n        \n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n    \n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      \n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    \n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n    \n    // Close the file selection dialog\n    setOpenDialog(false);\n    \n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n    \n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n    \n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      \n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Custom Chart: ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile,\n        isAIRecommended: false\n      });\n    });\n    \n    setPreviewFile(selectedFile);\n    setPreviewCharts(prevCharts => {\n      // Maintain existing AI-recommended charts if any\n      const aiCharts = prevCharts.filter(chart => chart.isAIRecommended);\n      return [...aiCharts, ...previewData];\n    });\n    \n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n\n  const renderPreviewCharts = (charts) => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    \n    const newInstances = {};\n    \n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      const chartKey = chart.isAIRecommended ? \n        chart.chartType : \n        `custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`;\n      \n      // Schedule creation of chart instance after DOM update\n      setTimeout(() => {\n        if (chartPreviewRefs.current[chartKey]) {\n          createChartInstance(chartKey, chart, newInstances);\n        }\n      }, 100);\n    });\n    \n    // Don't automatically update existing charts - this was causing duplicate canvas issues\n    \n    setChartPreviewInstances(newInstances);\n  };\n  \n  const createChartInstance = async (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n    \n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    // Attempt to fetch real data if possible\n    let chartData = {\n      labels: ['Loading...'],\n      datasets: [{\n        label: chart.yAxis || 'Value',\n        data: [0],\n        backgroundColor: theme.palette.primary.main\n      }]\n    };\n    \n    try {\n      // Fetch chart data from backend\n      if (chart.fileId && chart.xAxis && chart.yAxis) {\n        const response = await fetch(\n          `/api/data/chart?fileId=${chart.fileId}&xAxis=${chart.xAxis}&yAxis=${chart.yAxis}`\n        );\n        \n        if (response.ok) {\n          const data = await response.json();\n          \n          if (data.success && data.chartData) {\n            // Format the data based on chart type\n            const backgroundColor = [\n              '#1976d2', // Blue (Primary)\n              '#9c27b0', // Purple\n              '#2e7d32', // Green\n              '#ed6c02', // Orange\n              '#d32f2f', // Red\n              '#0288d1', // Light Blue\n              '#388e3c', // Light Green\n              '#f57c00', // Deep Orange\n              '#512da8', // Deep Purple\n              '#00796b', // Teal\n            ];\n            \n            // Process data based on chart type\n            if (chart.chartType === 'pie') {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: backgroundColor,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n                  borderWidth: 1\n                }]\n              };\n            } else {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: chart.chartType === 'bar' ? backgroundColor : backgroundColor[0],\n                  borderColor: chart.chartType === 'line' || chart.chartType === 'scatter' ? backgroundColor[0] : undefined,\n                  borderWidth: chart.chartType === 'line' ? 2 : 1,\n                  pointBackgroundColor: chart.chartType === 'scatter' || chart.chartType === 'line' ? backgroundColor[0] : undefined,\n                  pointRadius: chart.chartType === 'scatter' ? 5 : chart.chartType === 'line' ? 3 : 0,\n                  fill: chart.chartType === 'line' ? false : undefined\n                }]\n              };\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n      // Use default data if real data fetch fails\n      chartData = {\n        labels: ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'],\n        datasets: [{\n          label: chart.yAxis || 'Value',\n          data: [65, 59, 80, 81, 56],\n          backgroundColor: [\n            theme.palette.primary.main,\n            theme.palette.secondary.main,\n            theme.palette.success.main,\n            theme.palette.warning.main,\n            theme.palette.info.main,\n          ]\n        }]\n      };\n    }\n    \n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000,\n      },\n      plugins: {\n        legend: {\n          position: chart.chartType === 'pie' ? 'right' : 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: chart.chartType === 'pie' ? undefined : {\n        x: {\n          title: {\n            display: true,\n            text: chart.xAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: chart.yAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          beginAtZero: true\n        }\n      }\n    };\n\n    // Create the chart instance\n    const chartInstance = new Chart(ctx, {\n      type: chart.chartType,\n      data: chartData,\n      options: options\n    });\n    \n    // Store the instance\n    instancesObject[chartKey] = chartInstance;\n  };\n\n  const handleSaveChart = async (chart) => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n        \n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n        \n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        \n        console.log(\"Chart image saved locally\");\n        \n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n      \n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n      \n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      \n      const result = await response.json();\n      console.log('Visualization created:', result);\n      \n      // Show success message\n      alert('Visualization saved successfully to your account!');\n      \n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n      \n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      \n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n      \n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  \n  const handleEditVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  \n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    \n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n      \n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  \n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteVisualization = async (vizId) => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      \n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Delete response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      \n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n      \n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n\n  const getVisualizationIcon = (type) => {\n    const iconSize = { fontSize: 80, opacity: 0.8 };\n    const colors = {\n      bar: '#1976d2',    // blue\n      scatter: '#9c27b0', // purple\n      line: '#2e7d32',    // green\n      pie: '#ed6c02'      // orange\n    };\n    \n    const iconColor = { color: colors[type] || colors.bar };\n    \n    switch (type) {\n      case 'bar':\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'scatter':\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'line':\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'pie':\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\n      default:\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (loading) {\n      return (\n        <Grid item xs={12}>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <LinearProgress />\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\n              Loading...\n            </Typography>\n          </Box>\n        </Grid>\n      );\n    }\n    \n    if (visualizations.length === 0) {\n      return (\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\n          </Typography>\n        </Grid>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderChart = (visualization) => {\n    if (!chartContainerRef.current || !visualization) return;\n    \n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    \n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily,\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || visualization.config?.xAxis?.label || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || visualization.config?.yAxis?.label || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    \n    try {\n      if (chartType === 'scatter') {\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [\n              { x: 20, y: 45 },\n              { x: 25, y: 55 },\n              { x: 30, y: 65 },\n              { x: 35, y: 75 },\n              { x: 40, y: 70 },\n              { x: 45, y: 60 }\n            ],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9,\n          }]\n        };\n      } else if (chartType === 'pie') {\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n      \n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      \n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    \n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        \n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n        \n        // Schedule rendering after component mounts\n      setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n      }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n    }\n    }\n  }, [location]);\n    \n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      \n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    if (!analysis?.visualizationSuggestions?.length) return null;\n\n  return (\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Recommended Visualizations\n        </Typography>\n        <Grid container spacing={2}>\n          {analysis.visualizationSuggestions.map((suggestion, index) => (\n            <Grid item xs={12} sm={6} md={3} key={index}>\n              <Paper\n                sx={{\n                  p: 2,\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4,\n                  },\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                  border: 1,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n                }}\n                onClick={() => {\n                  setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n                  setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n                  handleGenerateCharts();\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\n                    {suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1)} Chart\n                  </Typography>\n                  <Chip\n                    label={`${suggestion.confidence}% match`}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Box sx={{ height: 100, display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>\n                  {suggestion.type === 'bar' && <ChartIcon sx={{ fontSize: 50, color: '#1976d2' }} />}\n                  {suggestion.type === 'line' && <LineIcon sx={{ fontSize: 50, color: '#2e7d32' }} />}\n                  {suggestion.type === 'pie' && <PieIcon sx={{ fontSize: 50, color: '#ed6c02' }} />}\n                  {suggestion.type === 'scatter' && <ScatterIcon sx={{ fontSize: 50, color: '#9c27b0' }} />}\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {suggestion.description}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ py: 4 }}>\n        <PageHeader\n          title=\"Visualizations\"\n          subtitle=\"Create and manage your data visualizations\"\n          action={\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={() => setOpenDialog(true)}\n            >\n              Create Visualization\n            </Button>\n          }\n        />\n\n        {loading && <LinearProgress sx={{ mb: 2 }} />}\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* AI Recommended Visualizations Section */}\n        {previewCharts.filter(chart => chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <CheckCircleIcon color=\"primary\" sx={{ mr: 1 }} />\n              <Typography variant=\"h5\" component=\"h2\">\n                AI Recommended Visualizations\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n              Based on your data structure, here are the most effective visualizations for {previewFile?.name}\n            </Typography>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => chart.isAIRecommended).map((chart) => (\n                <Grid item xs={12} sm={6} key={chart.chartType}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                      <Chip \n                        label={`${chart.confidence}% match`} \n                        color={chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default'} \n                        size=\"small\"\n                        sx={{ fontWeight: 'bold', color: 'white', bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575' }}\n                      />\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[chart.chartType] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n            \n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n              <Button \n                variant=\"outlined\" \n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  setOpenDialog(true);\n                  setAxisSelectionOpen(true);\n                }}\n              >\n                Create Custom Chart\n              </Button>\n            </Box>\n          </Paper>\n        )}\n        \n        {/* Custom Visualizations Section */}\n        {previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <Typography variant=\"h5\" component=\"h2\">\n                Custom Visualizations\n              </Typography>\n            </Box>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => (\n                <Grid item xs={12} sm={6} key={`custom-${chart.chartType}-${index}`}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.yAxis} by {chart.xAxis}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        )}\n\n        {/* Placeholder when no visualizations are available */}\n        {previewCharts.length === 0 && !loading && (\n          <Box \n            sx={{ \n              mt: 4, \n              p: 4, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center',\n              height: '100%',\n              width: '100%',\n              borderRadius: 2,\n              bgcolor: 'background.paper',\n              backgroundImage: 'none',\n              boxShadow: 1\n            }}\n          >\n            <ChartIcon sx={{ width: 80, height: 80, color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)', mb: 2 }} />\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              No visualizations yet\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ maxWidth: 400, mb: 4 }}>\n              Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<AddIcon />}\n              onClick={handleCreateClick}\n            >\n              Create Visualization\n            </Button>\n          </Box>\n        )}\n\n        {/* Saved Visualizations Section */}\n        {visualizations.length > 0 && (\n          <Box sx={{ mt: 6 }}>\n            <Typography variant=\"h5\" sx={{ mb: 3 }}>\n              Saved Visualizations\n            </Typography>\n            <Grid container spacing={3}>\n              {visualizations.map((viz) => (\n                <Grid item xs={12} sm={6} key={viz._id}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {viz.name}\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {viz.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`viz-${viz._id}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleViewVisualization(viz)}\n                      >\n                        View\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        )}\n      </Box>\n\n      {/* File Selection Dialog */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          {axisSelectionOpen ? 'Create Custom Visualization' : 'Create Visualization'}\n        </DialogTitle>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 1, color: 'text.secondary' }}>\n            {axisSelectionOpen \n              ? 'Choose a file and configure custom chart settings:' \n              : 'Choose a file to analyze and visualize:'}\n          </Typography>\n          \n          {!axisSelectionOpen && (\n            <Alert severity=\"info\" sx={{ mb: 3 }}>\n              <Typography variant=\"body2\">\n                When you select a file, our AI will automatically generate the best visualizations based on your data.\n              </Typography>\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n              <CircularProgress sx={{ mb: 2 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Analyzing your data and generating recommendations...\n              </Typography>\n            </Box>\n          ) : (\n            <List sx={{ \n              borderRadius: 1, \n              border: '1px solid',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)', \n              overflow: 'hidden',\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n            }}>\n              {files.map((file) => (\n                <ListItem\n                  key={file._id}\n                  button\n                  divider\n                  sx={{ \n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \n                    '&:hover': {\n                      bgcolor: theme.palette.mode === 'dark' \n                        ? 'rgba(255, 255, 255, 0.1)' \n                        : 'rgba(25, 118, 210, 0.08)'\n                    }\n                  }}\n                  onClick={() => {\n                    if (axisSelectionOpen) {\n                      // If in custom chart mode, just select the file but don't auto-generate\n                      setSelectedFile(file);\n                    } else {\n                      // Otherwise, trigger AI analysis\n                      handleFileSelect(file);\n                    }\n                  }}\n                >\n                  <ListItemIcon>\n                    <ChartIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={<Typography fontWeight=\"medium\">{file.name}</Typography>}\n                    secondary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                        <Chip \n                          size=\"small\" \n                          label={file.type.split('/')[1].toUpperCase()} \n                          color={file.type.includes('csv') ? 'success' : file.type.includes('json') ? 'info' : 'primary'}\n                          sx={{ mr: 1, height: 20, fontSize: '0.7rem' }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {(file.size / 1024).toFixed(2)} KB\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* Axis Selection Dialog */}\n      <Dialog\n        open={axisSelectionOpen}\n        onClose={() => {\n          setAxisSelectionOpen(false);\n          setError(null);\n        }}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          py: 2, \n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Typography variant=\"h6\">\n            Select Data for Visualization\n          </Typography>\n          <Chip \n            label={selectedFile?.name || 'No file selected'} \n            size=\"small\" \n            color=\"default\"\n            sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\n          />\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Box sx={{ \n                mb: 3, \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)', \n                borderRadius: 1,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                border: 1,\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }}>\n                <Box>\n                  <Typography variant=\"h6\">Data Summary</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\n                  </Typography>\n                </Box>\n                <Chip \n                  label=\"Ready for visualization\" \n                  color=\"success\" \n                  icon={<CheckCircleIcon />} \n                  sx={{ fontWeight: 'medium' }}\n                />\n              </Box>\n              \n              <Typography variant=\"h6\" gutterBottom>\n                Select Data Axes\n              </Typography>\n              \n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    X-Axis (Categories)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \n                    borderRadius: 1, \n                    p: 0,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedXAxis}\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        height: '56px',\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select X-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    Y-Axis (Values)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                    borderRadius: 1,\n                    p: 0,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedYAxis}\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        height: '56px',\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select Y-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end', \n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setAxisSelectionOpen(false);\n              setError(null);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={!selectedXAxis || !selectedYAxis || loading}\n            onClick={handleGenerateCharts}\n          >\n            Generate Charts\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* View Visualization Dialog */}\n      <Dialog\n        open={openViewDialog}\n        onClose={handleCloseViewDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden',\n            bgcolor: 'background.paper',\n          }\n        }}\n      >\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\n          <Typography variant=\"h5\">\n            {currentVisualization?.name || 'View Visualization'}\n          </Typography>\n        </Box>\n        <DialogContent sx={{ p: 0 }}>\n          {currentVisualization && (\n            <Box>\n              <Box sx={{ height: 400, p: 3 }}>\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\n              </Box>\n              \n              <Box sx={{ \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5' \n              }}>\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\n                </Typography>\n                \n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n                  <Chip \n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\n                    color=\"primary\"\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\n                    sx={{ mr: 1 }}\n                  />\n                  <Chip \n                    label={`${currentVisualization.confidence || 90}% confidence`}\n                    color=\"success\"\n                  />\n                  <Box sx={{ flexGrow: 1 }} />\n                  <Button \n                    variant=\"outlined\" \n                    startIcon={<EditIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleEditVisualization(currentVisualization);\n                    }}\n                    sx={{ mr: 1 }}\n                  >\n                    Edit\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleDeleteVisualization(currentVisualization._id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n      </Dialog>\n      \n      {/* Edit Visualization Dialog - simplified */}\n      <Dialog\n        open={openEditDialog}\n        onClose={handleCloseEditDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\n          Edit Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3, mt: 2 }}>\n          {currentVisualization && (\n            <Box sx={{ pt: 1 }}>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={currentVisualization.name || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter a descriptive name\"\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\n                <textarea\n                  name=\"description\"\n                  value={currentVisualization.description || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe what insights this visualization provides\"\n                  rows={3}\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\n                    <Box \n                      key={type}\n                      onClick={() => setCurrentVisualization({\n                        ...currentVisualization,\n                        chartType: type\n                      })}\n                      sx={{ \n                        border: '2px solid',\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                        borderRadius: 2,\n                        p: 2,\n                        width: '110px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                        bgcolor: currentVisualization.chartType === type \n                          ? (theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)') \n                          : (theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent')\n                      }}\n                    >\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      <Typography variant=\"body2\">\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUpdateVisualization}\n            startIcon={<EditIcon />}\n          >\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={openDeleteDialog}\n        onClose={handleCancelDelete}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\n          Delete Visualization\n        </DialogTitle>\n        <DialogContent sx={{ mt: 2, p: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\n            <Typography variant=\"h6\">\n              Are you sure?\n            </Typography>\n          </Box>\n          <Typography>\n            This visualization will be permanently deleted. This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}