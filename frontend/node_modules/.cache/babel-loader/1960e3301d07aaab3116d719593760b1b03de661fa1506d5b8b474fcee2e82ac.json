{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress, Paper, Container } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  var _analysis$columns, _analysis$columns2, _analysis$columns3;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi, _analysisData$analysi2, _analysisData$analysi3, _analysisData$analysi4, _analysisData$analysi5, _analysisData$analysi6, _analysisData$analysi7, _analysisData$analysi8, _analysisData$analysi9;\n        setAnalysis({\n          rowCount: ((_analysisData$analysi = analysisData.analysis.summary) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart - Good for comparing values across categories',\n            reasoning: 'Based on data structure',\n            confidence: 85,\n            xAxis: ((_analysisData$analysi2 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi2 === void 0 ? void 0 : _analysisData$analysi2.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi3 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi3 === void 0 ? void 0 : _analysisData$analysi3.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'line',\n            description: 'Line Chart - Best for showing trends over time or continuous data',\n            reasoning: 'Good for trends over time',\n            confidence: 75,\n            xAxis: ((_analysisData$analysi4 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi4 === void 0 ? void 0 : _analysisData$analysi4.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi5 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi5 === void 0 ? void 0 : _analysisData$analysi5.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'pie',\n            description: 'Pie Chart - Excellent for showing proportions of a whole',\n            reasoning: 'Good for showing proportions',\n            confidence: 65,\n            xAxis: ((_analysisData$analysi6 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi6 === void 0 ? void 0 : _analysisData$analysi6.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi7 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi7 === void 0 ? void 0 : _analysisData$analysi7.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot - Ideal for showing correlation between variables',\n            reasoning: 'Good for showing correlations',\n            confidence: 60,\n            xAxis: ((_analysisData$analysi8 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi8 === void 0 ? void 0 : _analysisData$analysi8.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi9 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi9 === void 0 ? void 0 : _analysisData$analysi9.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }]\n        });\n\n        // Automatically open axis selection after successful analysis\n        setAxisSelectionOpen(true);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n\n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      createChartInstance(chart.chartType, chart, newInstances);\n    });\n    setChartPreviewInstances(newInstances);\n  };\n  const createChartInstance = (chartKey, chart, instancesObject) => {\n    const canvasRef = chartPreviewRefs.current[chartKey];\n    if (!canvasRef) return;\n    const ctx = canvasRef.getContext('2d');\n    if (!ctx) return;\n    try {\n      // Set up data for different chart types\n      let chartData;\n\n      // Use sorted numeric values for the x-axis labels if possible\n      const xLabels = [20, 25, 30, 35, 40, 45];\n      if (chart.chartType === 'scatter') {\n        // For scatter charts, create paired x-y coordinates\n        chartData = {\n          datasets: [{\n            label: chart.yAxis,\n            data: [{\n              x: 20,\n              y: 45\n            }, {\n              x: 25,\n              y: 55\n            }, {\n              x: 30,\n              y: 65\n            }, {\n              x: 35,\n              y: 75\n            }, {\n              x: 40,\n              y: 70\n            }, {\n              x: 45,\n              y: 60\n            }],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9\n          }]\n        };\n      } else if (chart.chartType === 'pie') {\n        chartData = {\n          labels: ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'],\n          datasets: [{\n            label: chart.yAxis,\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        // For bar and line charts\n        chartData = {\n          labels: ['20', '25', '30', '35', '40', '45'],\n          datasets: [{\n            label: chart.yAxis,\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: chart.chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n      const chartInstance = new Chart(ctx, {\n        type: chart.chartType,\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            title: {\n              display: true,\n              text: `${chart.yAxis} by ${chart.xAxis}`,\n              color: theme.palette.text.primary\n            },\n            legend: {\n              display: chart.chartType !== 'bar',\n              position: 'top',\n              labels: {\n                color: theme.palette.text.primary\n              }\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: chart.xAxis,\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.divider\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: chart.yAxis,\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.divider\n              },\n              beginAtZero: true\n            }\n          }\n        }\n      });\n      instancesObject[chartKey] = chartInstance;\n    } catch (error) {\n      console.error(`Error creating ${chart.chartType} chart:`, error);\n    }\n  };\n  const handleSaveChart = async chart => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n\n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n\n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        console.log(\"Chart image saved locally\");\n\n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n\n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully to your account!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    console.log('Rendering chart for visualization:', visualization);\n    if (!chartContainerRef.current) {\n      console.error('Chart container reference not available');\n      return;\n    }\n\n    // Destroy previous chart if exists\n    if (chartInstance) {\n      console.log('Destroying previous chart instance');\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) {\n      console.error('Could not get 2D context from canvas');\n      return;\n    }\n    try {\n      var _visualization$config7, _visualization$config8, _visualization$config9, _visualization$config10, _visualization$config11, _visualization$config12, _visualization$config13;\n      // Generate appropriate data based on the chart type\n      let data;\n      if (visualization.chartType === 'scatter') {\n        var _visualization$config, _visualization$config2;\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.yAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'Value',\n            data: [{\n              x: 20,\n              y: 45\n            }, {\n              x: 25,\n              y: 55\n            }, {\n              x: 30,\n              y: 65\n            }, {\n              x: 35,\n              y: 75\n            }, {\n              x: 40,\n              y: 70\n            }, {\n              x: 45,\n              y: 60\n            }],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9\n          }]\n        };\n      } else if (visualization.chartType === 'pie') {\n        var _visualization$config3, _visualization$config4;\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : (_visualization$config4 = _visualization$config3.yAxis) === null || _visualization$config4 === void 0 ? void 0 : _visualization$config4.label) || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        var _visualization$config5, _visualization$config6;\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : (_visualization$config6 = _visualization$config5.yAxis) === null || _visualization$config6 === void 0 ? void 0 : _visualization$config6.label) || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: visualization.chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: visualization.chartType || 'bar',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            title: {\n              display: true,\n              text: ((_visualization$config7 = visualization.config) === null || _visualization$config7 === void 0 ? void 0 : _visualization$config7.title) || visualization.name,\n              color: theme.palette.text.primary\n            },\n            subtitle: {\n              display: !!((_visualization$config8 = visualization.config) !== null && _visualization$config8 !== void 0 && _visualization$config8.subtitle),\n              text: ((_visualization$config9 = visualization.config) === null || _visualization$config9 === void 0 ? void 0 : _visualization$config9.subtitle) || '',\n              color: theme.palette.text.secondary\n            },\n            legend: {\n              display: visualization.chartType !== 'bar',\n              position: 'top',\n              labels: {\n                color: theme.palette.text.primary\n              }\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: ((_visualization$config10 = visualization.config) === null || _visualization$config10 === void 0 ? void 0 : (_visualization$config11 = _visualization$config10.xAxis) === null || _visualization$config11 === void 0 ? void 0 : _visualization$config11.label) || 'Age',\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.divider\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: ((_visualization$config12 = visualization.config) === null || _visualization$config12 === void 0 ? void 0 : (_visualization$config13 = _visualization$config12.yAxis) === null || _visualization$config13 === void 0 ? void 0 : _visualization$config13.label) || 'Value',\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.divider\n              },\n              beginAtZero: true\n            }\n          }\n        }\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n      alert('Failed to render chart: ' + error.message);\n    }\n  };\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    var _location$state2;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n\n        // Schedule rendering after component mounts\n        setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n        }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n      }\n    }\n  }, [location]);\n\n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    var _analysis$visualizati;\n    if (!(analysis !== null && analysis !== void 0 && (_analysis$visualizati = analysis.visualizationSuggestions) !== null && _analysis$visualizati !== void 0 && _analysis$visualizati.length)) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Recommended Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: analysis.visualizationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              },\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            onClick: () => {\n              setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n              setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n              handleGenerateCharts();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  flexGrow: 1\n                },\n                children: [suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1), \" Chart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${suggestion.confidence}% match`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 1\n              },\n              children: [suggestion.type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#1976d2'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 49\n              }, this), suggestion.type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#2e7d32'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 50\n              }, this), suggestion.type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#ed6c02'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 956,\n                columnNumber: 49\n              }, this), suggestion.type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#9c27b0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Visualizations\",\n        subtitle: \"Create and manage your data visualizations\",\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 26\n          }, this),\n          onClick: () => setOpenDialog(true),\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 9\n      }, this), renderRecommendedVisualizations(), previewCharts.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: [\"Chart Preview: \", selectedXAxis, \" vs \", selectedYAxis]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 1\n              },\n              children: [\"Data from: \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 30\n              }, this),\n              onClick: () => setOpenDialog(true),\n              sx: {\n                ml: 2\n              },\n              children: \"Create New Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            mt: 3\n          },\n          children: \"All Chart Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden',\n                bgcolor: 'background.paper'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1049,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${chart.confidence}% match`,\n                  color: chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default',\n                  size: \"small\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: 'white',\n                    bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: [chart.yAxis, \" by \", chart.xAxis]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[chart.chartType] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 19\n            }, this)\n          }, chart.chartType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'white',\n          borderRadius: 2,\n          boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\n          minHeight: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            fontSize: 64,\n            color: 'primary.light',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"No Visualizations Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 3\n          },\n          children: \"Create your first visualization to see it displayed here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 26\n          }, this),\n          onClick: () => {\n            setOpenDialog(true);\n          },\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          '& .MuiSelect-root': {\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)'\n            },\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)'\n            }\n          }\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select File for Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            mt: 1,\n            color: 'text.secondary'\n          },\n          children: \"Choose a file to analyze and visualize:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            overflow: 'hidden',\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => handleFileSelect(file),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"medium\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1185,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: file.type.toUpperCase(),\n                  color: file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary',\n                  sx: {\n                    mr: 1,\n                    height: 20,\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1188,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(file.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1194,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1184,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.default' : 'white',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select Data for Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'No file selected',\n          size: \"small\",\n          color: \"default\",\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1288,\n                columnNumber: 25\n              }, this),\n              sx: {\n                fontWeight: 'medium'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  style: {\n                    width: '100%',\n                    padding: '10px',\n                    fontSize: '16px',\n                    border: 'none',\n                    outline: 'none',\n                    backgroundColor: 'transparent',\n                    color: theme.palette.text.primary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select X-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1322,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns2 = analysis.columns) === null || _analysis$columns2 === void 0 ? void 0 : _analysis$columns2.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1324,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1309,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1302,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  style: {\n                    width: '100%',\n                    padding: '10px',\n                    fontSize: '16px',\n                    border: 'none',\n                    outline: 'none',\n                    backgroundColor: 'transparent',\n                    color: theme.palette.text.primary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Y-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1354,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns3 = analysis.columns) === null || _analysis$columns3 === void 0 ? void 0 : _analysis$columns3.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1356,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1341,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1334,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1382,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden',\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1438,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1441,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1453,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)' : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1552,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1553,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1554,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1555,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1556,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1531,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1529,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1573,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1570,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1591,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1601,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1609,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1605,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1581,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 972,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"hDgOxKwPH/MGzDn6qvUf8JZxLww=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","Paper","Container","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizations","_s","_analysis$columns","_analysis$columns2","_analysis$columns3","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","_analysisData$analysi2","_analysisData$analysi3","_analysisData$analysi4","_analysisData$analysi5","_analysisData$analysi6","_analysisData$analysi7","_analysisData$analysi8","_analysisData$analysi9","rowCount","summary","totalRows","columns","Object","keys","basicAnalysis","visualizationSuggestions","type","description","reasoning","confidence","xAxis","recommendedAxes","x","yAxis","y","handleCreateClick","handleCloseDialog","handleGenerateCharts","previewData","forEach","chartType","suggestion","find","s","push","name","charAt","toUpperCase","slice","fileId","setTimeout","renderPreviewCharts","charts","values","instance","destroy","newInstances","chart","createChartInstance","chartKey","instancesObject","canvasRef","current","ctx","getContext","chartData","xLabels","datasets","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","labels","borderWidth","tension","options","responsive","maintainAspectRatio","plugins","display","text","color","palette","primary","legend","position","scales","ticks","secondary","grid","divider","beginAtZero","handleSaveChart","imageUrl","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","alert","saveToServer","confirm","config","field","subtitle","Date","toLocaleDateString","method","headers","JSON","stringify","isAIGenerated","message","result","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","bar","scatter","line","pie","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","length","variant","_visualization$config7","_visualization$config8","_visualization$config9","_visualization$config10","_visualization$config11","_visualization$config12","_visualization$config13","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","_visualization$config5","_visualization$config6","newChart","_location$state2","savedPreviewCharts","sessionStorage","getItem","savedPreviewFile","parsedCharts","parse","setItem","renderRecommendedVisualizations","_analysis$visualizati","mb","gutterBottom","container","spacing","map","index","sm","md","p","cursor","transition","transform","boxShadow","bgcolor","mode","border","onClick","alignItems","flexGrow","size","height","justifyContent","maxWidth","py","action","startIcon","borderRadius","component","ml","flexDirection","overflow","fontWeight","px","ref","el","style","fullWidth","minHeight","open","onClose","PaperProps","severity","button","mr","toFixed","borderTop","icon","onChange","padding","outline","column","gap","disabled","pt","placeholder","rows","flexWrap","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Chip,\r\n  Divider,\r\n  Alert,\r\n  IconButton,\r\n  useTheme,\r\n  CircularProgress,\r\n  Paper,\r\n  Container,\r\n} from '@mui/material';\r\nimport {\r\n  BarChart as ChartIcon,\r\n  Add as AddIcon,\r\n  Timeline as TimelineIcon,\r\n  BubbleChart as ScatterIcon,\r\n  ShowChart as LineIcon,\r\n  PieChart as PieIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from '@mui/icons-material';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Visualizations() {\r\n  const theme = useTheme();\r\n  const location = useLocation();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [deleteTarget, setDeleteTarget] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [visualizations, setVisualizations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [currentVisualization, setCurrentVisualization] = useState(null);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const chartContainerRef = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const [selectedXAxis, setSelectedXAxis] = useState('');\r\n  const [selectedYAxis, setSelectedYAxis] = useState('');\r\n  const [showChartOptions, setShowChartOptions] = useState(false);\r\n  const [previewCharts, setPreviewCharts] = useState([]);\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\r\n  const chartPreviewRefs = useRef({});\r\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    fetchVisualizations();\r\n    \r\n    if (location.state?.openCreateDialog) {\r\n      setOpenDialog(true);\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n  }, [location]);\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const response = await fetch('/api/files');\r\n      const data = await response.json();\r\n      setFiles(data.files || []);\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n      setError('Failed to fetch files');\r\n    }\r\n  };\r\n\r\n  const fetchVisualizations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/visualizations');\r\n      const data = await response.json();\r\n      console.log('Fetched visualizations:', data);\r\n      setVisualizations(data.visualizations || []);\r\n    } catch (error) {\r\n      console.error('Error fetching visualizations:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = async (file) => {\r\n    setSelectedFile(file);\r\n    setLoading(true);\r\n    setError(null);\r\n    setSelectedXAxis('');\r\n    setSelectedYAxis('');\r\n    setShowChartOptions(false);\r\n    \r\n    try {\r\n      console.log('Analyzing file with ID:', file._id);\r\n      const response = await fetch(`/api/files/${file._id}/analyze`);\r\n      console.log('Analysis response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Analysis error details:', errorData);\r\n        throw new Error(errorData.error || 'Analysis failed');\r\n      }\r\n      \r\n      const analysisData = await response.json();\r\n      console.log('Analysis result:', analysisData);\r\n      \r\n      // Check the structure of analysis data and adapt as needed\r\n      if (analysisData.success && analysisData.analysis) {\r\n        setAnalysis({\r\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\r\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\r\n          visualizationSuggestions: [\r\n            {\r\n              type: 'bar',\r\n              description: 'Bar Chart - Good for comparing values across categories',\r\n              reasoning: 'Based on data structure',\r\n              confidence: 85,\r\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\r\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\r\n            },\r\n            {\r\n              type: 'line',\r\n              description: 'Line Chart - Best for showing trends over time or continuous data',\r\n              reasoning: 'Good for trends over time',\r\n              confidence: 75,\r\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\r\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\r\n            },\r\n            {\r\n              type: 'pie',\r\n              description: 'Pie Chart - Excellent for showing proportions of a whole',\r\n              reasoning: 'Good for showing proportions',\r\n              confidence: 65,\r\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\r\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\r\n            },\r\n            {\r\n              type: 'scatter',\r\n              description: 'Scatter Plot - Ideal for showing correlation between variables',\r\n              reasoning: 'Good for showing correlations',\r\n              confidence: 60,\r\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\r\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\r\n            }\r\n          ]\r\n        });\r\n        \r\n        // Automatically open axis selection after successful analysis\r\n        setAxisSelectionOpen(true);\r\n      } else {\r\n        setAnalysis({\r\n          rowCount: 0,\r\n          columns: [],\r\n          visualizationSuggestions: []\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error analyzing file:', error);\r\n      setError('Failed to analyze file');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    setOpenDialog(true);\r\n    setSelectedXAxis('');\r\n    setSelectedYAxis('');\r\n    setAxisSelectionOpen(false);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setAxisSelectionOpen(false);\r\n    setSelectedFile(null);\r\n    setAnalysis(null);\r\n  };\r\n\r\n  const handleGenerateCharts = () => {\r\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\r\n      setError('Please select file and axes first');\r\n      return;\r\n    }\r\n    \r\n    // Close both dialogs\r\n    setAxisSelectionOpen(false);\r\n    setOpenDialog(false);\r\n    \r\n    // Create preview charts for all chart types\r\n    const previewData = [];\r\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\r\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\r\n        type: chartType,\r\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\r\n      };\r\n      \r\n      previewData.push({\r\n        chartType,\r\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\r\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\r\n        fileId: selectedFile._id,\r\n        confidence: suggestion.confidence,\r\n        xAxis: selectedXAxis,\r\n        yAxis: selectedYAxis,\r\n        file: selectedFile\r\n      });\r\n    });\r\n    \r\n    setPreviewFile(selectedFile);\r\n    setPreviewCharts(previewData);\r\n    \r\n    // Schedule rendering after the DOM updates\r\n    setTimeout(() => {\r\n      renderPreviewCharts(previewData);\r\n    }, 300);\r\n  };\r\n\r\n  const renderPreviewCharts = (charts) => {\r\n    // Clean up existing chart instances\r\n    Object.values(chartPreviewInstances).forEach(instance => {\r\n      if (instance) instance.destroy();\r\n    });\r\n    \r\n    const newInstances = {};\r\n    \r\n    // Create chart instances for each chart type\r\n    charts.forEach(chart => {\r\n      createChartInstance(chart.chartType, chart, newInstances);\r\n    });\r\n    \r\n    setChartPreviewInstances(newInstances);\r\n  };\r\n  \r\n  const createChartInstance = (chartKey, chart, instancesObject) => {\r\n    const canvasRef = chartPreviewRefs.current[chartKey];\r\n    if (!canvasRef) return;\r\n    \r\n    const ctx = canvasRef.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    try {\r\n      // Set up data for different chart types\r\n      let chartData;\r\n      \r\n      // Use sorted numeric values for the x-axis labels if possible\r\n      const xLabels = [20, 25, 30, 35, 40, 45];\r\n      \r\n      if (chart.chartType === 'scatter') {\r\n        // For scatter charts, create paired x-y coordinates\r\n        chartData = {\r\n          datasets: [{\r\n            label: chart.yAxis,\r\n            data: [\r\n              { x: 20, y: 45 },\r\n              { x: 25, y: 55 },\r\n              { x: 30, y: 65 },\r\n              { x: 35, y: 75 },\r\n              { x: 40, y: 70 },\r\n              { x: 45, y: 60 }\r\n            ],\r\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            pointRadius: 7,\r\n            pointHoverRadius: 9,\r\n          }]\r\n        };\r\n      } else if (chart.chartType === 'pie') {\r\n        chartData = {\r\n          labels: ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'],\r\n          datasets: [{\r\n            label: chart.yAxis,\r\n            data: [65, 59, 80, 81, 56, 55],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.8)',\r\n              'rgba(54, 162, 235, 0.8)',\r\n              'rgba(255, 206, 86, 0.8)',\r\n              'rgba(75, 192, 192, 0.8)',\r\n              'rgba(153, 102, 255, 0.8)',\r\n              'rgba(255, 159, 64, 0.8)'\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        };\r\n      } else {\r\n        // For bar and line charts\r\n        chartData = {\r\n          labels: ['20', '25', '30', '35', '40', '45'],\r\n          datasets: [{\r\n            label: chart.yAxis,\r\n            data: [65, 59, 80, 81, 56, 55],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.8)',\r\n              'rgba(54, 162, 235, 0.8)',\r\n              'rgba(255, 206, 86, 0.8)',\r\n              'rgba(75, 192, 192, 0.8)',\r\n              'rgba(153, 102, 255, 0.8)',\r\n              'rgba(255, 159, 64, 0.8)'\r\n            ],\r\n            borderColor: chart.chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1,\r\n            tension: 0.1\r\n          }]\r\n        };\r\n      }\r\n      \r\n      const chartInstance = new Chart(ctx, {\r\n        type: chart.chartType,\r\n        data: chartData,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: `${chart.yAxis} by ${chart.xAxis}`,\r\n              color: theme.palette.text.primary\r\n            },\r\n            legend: {\r\n              display: chart.chartType !== 'bar',\r\n              position: 'top',\r\n              labels: {\r\n                color: theme.palette.text.primary\r\n              }\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: chart.xAxis,\r\n                color: theme.palette.text.primary\r\n              },\r\n              ticks: {\r\n                color: theme.palette.text.secondary\r\n              },\r\n              grid: {\r\n                color: theme.palette.divider\r\n              }\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: chart.yAxis,\r\n                color: theme.palette.text.primary\r\n              },\r\n              ticks: {\r\n                color: theme.palette.text.secondary\r\n              },\r\n              grid: {\r\n                color: theme.palette.divider\r\n              },\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      instancesObject[chartKey] = chartInstance;\r\n    } catch (error) {\r\n      console.error(`Error creating ${chart.chartType} chart:`, error);\r\n    }\r\n  };\r\n\r\n  const handleSaveChart = async (chart) => {\r\n    try {\r\n      // Save the chart as an image\r\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\r\n      if (canvasRef) {\r\n        // Get the image data URL\r\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\r\n        \r\n        // Create a temporary link element to download the image\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = imageUrl;\r\n        downloadLink.download = `${chart.name}.png`;\r\n        \r\n        // Append to body, click, and remove\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n        \r\n        console.log(\"Chart image saved locally\");\r\n        \r\n        // Success message\r\n        alert(\"Chart saved to your downloads folder\");\r\n      }\r\n      \r\n      // Ask if the user wants to save to the server as well\r\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\r\n      if (!saveToServer) {\r\n        return;\r\n      }\r\n      \r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Create a basic config from the selected axes\r\n      const config = {\r\n        xAxis: {\r\n          field: chart.xAxis,\r\n          label: chart.xAxis\r\n        },\r\n        yAxis: {\r\n          field: chart.yAxis,\r\n          label: chart.yAxis\r\n        },\r\n        title: chart.name,\r\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\r\n      };\r\n      \r\n      // Send request to create visualization\r\n      const response = await fetch('/api/visualizations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: chart.name,\r\n          description: chart.description,\r\n          fileId: chart.fileId,\r\n          chartType: chart.chartType,\r\n          confidence: chart.confidence,\r\n          config: config,\r\n          isAIGenerated: true\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to create visualization');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Visualization created:', result);\r\n      \r\n      // Show success message\r\n      alert('Visualization saved successfully to your account!');\r\n      \r\n      // Refresh visualizations\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error creating visualization:', error);\r\n      setError('Failed to create visualization: ' + error.message);\r\n      alert('Error: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViewVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Visualization details:', data.visualization);\r\n      \r\n      // Fix id inconsistency by ensuring we have _id\r\n      if (data.visualization.id && !data.visualization._id) {\r\n        data.visualization._id = data.visualization.id;\r\n      }\r\n      \r\n      setCurrentVisualization(data.visualization);\r\n      setOpenViewDialog(true);\r\n      \r\n      // We need to render the chart after the dialog is open and DOM is ready\r\n      setTimeout(() => {\r\n        renderChart(data.visualization);\r\n      }, 300);\r\n    } catch (error) {\r\n      console.error('Error viewing visualization:', error);\r\n      alert('Failed to load visualization details');\r\n    }\r\n  };\r\n  \r\n  const handleEditVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCurrentVisualization(data.visualization);\r\n      setOpenEditDialog(true);\r\n    } catch (error) {\r\n      console.error('Error editing visualization:', error);\r\n      alert('Failed to load visualization for editing');\r\n    }\r\n  };\r\n  \r\n  const handleUpdateVisualization = async () => {\r\n    if (!currentVisualization) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: currentVisualization.name,\r\n          description: currentVisualization.description,\r\n          chartType: currentVisualization.chartType,\r\n          config: currentVisualization.config\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update visualization');\r\n      }\r\n      \r\n      // Close dialog and refresh visualizations\r\n      setOpenEditDialog(false);\r\n      setCurrentVisualization(null);\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error updating visualization:', error);\r\n      alert('Failed to update visualization');\r\n    }\r\n  };\r\n  \r\n  const handleCloseViewDialog = () => {\r\n    if (chartInstance) {\r\n      chartInstance.destroy();\r\n      setChartInstance(null);\r\n    }\r\n    setOpenViewDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleCloseEditDialog = () => {\r\n    setOpenEditDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentVisualization(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleDeleteVisualization = async (vizId) => {\r\n    setDeleteTarget(vizId);\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (!deleteTarget) {\r\n      console.error('No delete target set');\r\n      alert('Error: No visualization selected for deletion');\r\n      setOpenDeleteDialog(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Deleting visualization with ID:', deleteTarget);\r\n      \r\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      console.log('Delete response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\r\n        console.error('Delete error details:', errorData);\r\n        throw new Error(errorData.message || 'Failed to delete visualization');\r\n      }\r\n      \r\n      console.log('Visualization deleted successfully');\r\n      alert('Visualization deleted successfully');\r\n      \r\n      // Refresh the list\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error deleting visualization:', error);\r\n      alert(`Failed to delete visualization: ${error.message}`);\r\n    } finally {\r\n      setOpenDeleteDialog(false);\r\n      setDeleteTarget(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenDeleteDialog(false);\r\n    setDeleteTarget(null);\r\n  };\r\n\r\n  const getVisualizationIcon = (type) => {\r\n    const iconSize = { fontSize: 80, opacity: 0.8 };\r\n    const colors = {\r\n      bar: '#1976d2',    // blue\r\n      scatter: '#9c27b0', // purple\r\n      line: '#2e7d32',    // green\r\n      pie: '#ed6c02'      // orange\r\n    };\r\n    \r\n    const iconColor = { color: colors[type] || colors.bar };\r\n    \r\n    switch (type) {\r\n      case 'bar':\r\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'scatter':\r\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'line':\r\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'pie':\r\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      default:\r\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n    }\r\n  };\r\n\r\n  const renderPlaceholder = () => {\r\n    if (loading) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <LinearProgress />\r\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\r\n              Loading...\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    if (visualizations.length === 0) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const renderChart = (visualization) => {\r\n    console.log('Rendering chart for visualization:', visualization);\r\n    \r\n    if (!chartContainerRef.current) {\r\n      console.error('Chart container reference not available');\r\n      return;\r\n    }\r\n    \r\n    // Destroy previous chart if exists\r\n    if (chartInstance) {\r\n      console.log('Destroying previous chart instance');\r\n      chartInstance.destroy();\r\n    }\r\n    \r\n    const ctx = chartContainerRef.current.getContext('2d');\r\n    if (!ctx) {\r\n      console.error('Could not get 2D context from canvas');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Generate appropriate data based on the chart type\r\n      let data;\r\n      \r\n      if (visualization.chartType === 'scatter') {\r\n        // For scatter charts, create paired x-y coordinates with realistic data\r\n        data = {\r\n          datasets: [{\r\n            label: visualization.config?.yAxis?.label || 'Value',\r\n            data: [\r\n              { x: 20, y: 45 },\r\n              { x: 25, y: 55 },\r\n              { x: 30, y: 65 },\r\n              { x: 35, y: 75 },\r\n              { x: 40, y: 70 },\r\n              { x: 45, y: 60 }\r\n            ],\r\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            pointRadius: 7,\r\n            pointHoverRadius: 9,\r\n          }]\r\n        };\r\n      } else if (visualization.chartType === 'pie') {\r\n        // For pie charts\r\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\r\n        data = {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: visualization.config?.yAxis?.label || 'Value',\r\n            data: [65, 59, 80, 81, 56, 55],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.8)',\r\n              'rgba(54, 162, 235, 0.8)',\r\n              'rgba(255, 206, 86, 0.8)',\r\n              'rgba(75, 192, 192, 0.8)',\r\n              'rgba(153, 102, 255, 0.8)',\r\n              'rgba(255, 159, 64, 0.8)'\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        };\r\n      } else {\r\n        // For bar and line charts\r\n        const labels = ['20', '25', '30', '35', '40', '45'];\r\n        data = {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: visualization.config?.yAxis?.label || 'Value',\r\n            data: [65, 59, 80, 81, 56, 55],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.8)',\r\n              'rgba(54, 162, 235, 0.8)',\r\n              'rgba(255, 206, 86, 0.8)',\r\n              'rgba(75, 192, 192, 0.8)',\r\n              'rgba(153, 102, 255, 0.8)',\r\n              'rgba(255, 159, 64, 0.8)'\r\n            ],\r\n            borderColor: visualization.chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1,\r\n            tension: 0.1\r\n          }]\r\n        };\r\n      }\r\n      \r\n      // Create the chart based on the type\r\n      console.log('Creating new chart');\r\n      const newChart = new Chart(ctx, {\r\n        type: visualization.chartType || 'bar',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: visualization.config?.title || visualization.name,\r\n              color: theme.palette.text.primary\r\n            },\r\n            subtitle: {\r\n              display: !!visualization.config?.subtitle,\r\n              text: visualization.config?.subtitle || '',\r\n              color: theme.palette.text.secondary\r\n            },\r\n            legend: {\r\n              display: visualization.chartType !== 'bar',\r\n              position: 'top',\r\n              labels: {\r\n                color: theme.palette.text.primary\r\n              }\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.xAxis?.label || 'Age',\r\n                color: theme.palette.text.primary\r\n              },\r\n              ticks: {\r\n                color: theme.palette.text.secondary\r\n              },\r\n              grid: {\r\n                color: theme.palette.divider\r\n              }\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.yAxis?.label || 'Value',\r\n                color: theme.palette.text.primary\r\n              },\r\n              ticks: {\r\n                color: theme.palette.text.secondary\r\n              },\r\n              grid: {\r\n                color: theme.palette.divider\r\n              },\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      console.log('Chart created successfully');\r\n      setChartInstance(newChart);\r\n    } catch (error) {\r\n      console.error('Error creating chart:', error);\r\n      alert('Failed to render chart: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // Clean up chart instance on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n      Object.values(chartPreviewInstances).forEach(instance => {\r\n        if (instance) instance.destroy();\r\n      });\r\n    };\r\n  }, [chartInstance, chartPreviewInstances]);\r\n\r\n  // Don't clear previewCharts when component mounts/unmounts\r\n  // This will keep visualizations when navigating away and back\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    fetchVisualizations();\r\n    \r\n    if (location.state?.openCreateDialog) {\r\n      setOpenDialog(true);\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n\r\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\r\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\r\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\r\n    \r\n    if (savedPreviewCharts) {\r\n      try {\r\n        const parsedCharts = JSON.parse(savedPreviewCharts);\r\n        setPreviewCharts(parsedCharts);\r\n        \r\n        if (savedPreviewFile) {\r\n          setPreviewFile(JSON.parse(savedPreviewFile));\r\n        }\r\n        \r\n        // Schedule rendering after component mounts\r\n        setTimeout(() => {\r\n          renderPreviewCharts(parsedCharts);\r\n        }, 300);\r\n      } catch (error) {\r\n        console.error('Error restoring saved charts:', error);\r\n      }\r\n    }\r\n  }, [location]);\r\n\r\n  // Save previewCharts to sessionStorage whenever they change\r\n  useEffect(() => {\r\n    if (previewCharts.length > 0) {\r\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\r\n      \r\n      if (previewFile) {\r\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\r\n      }\r\n    }\r\n  }, [previewCharts, previewFile]);\r\n\r\n  // Add recommended visualizations section with previews\r\n  const renderRecommendedVisualizations = () => {\r\n    if (!analysis?.visualizationSuggestions?.length) return null;\r\n\r\n    return (\r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Recommended Visualizations\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          {analysis.visualizationSuggestions.map((suggestion, index) => (\r\n            <Grid item xs={12} sm={6} md={3} key={index}>\r\n              <Paper\r\n                sx={{\r\n                  p: 2,\r\n                  cursor: 'pointer',\r\n                  transition: 'transform 0.2s, box-shadow 0.2s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-4px)',\r\n                    boxShadow: 4,\r\n                  },\r\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\r\n                  border: 1,\r\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\r\n                }}\r\n                onClick={() => {\r\n                  setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\r\n                  setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\r\n                  handleGenerateCharts();\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                  <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\r\n                    {suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1)} Chart\r\n                  </Typography>\r\n                  <Chip\r\n                    label={`${suggestion.confidence}% match`}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  />\r\n                </Box>\r\n                \r\n                <Box sx={{ height: 100, display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>\r\n                  {suggestion.type === 'bar' && <ChartIcon sx={{ fontSize: 50, color: '#1976d2' }} />}\r\n                  {suggestion.type === 'line' && <LineIcon sx={{ fontSize: 50, color: '#2e7d32' }} />}\r\n                  {suggestion.type === 'pie' && <PieIcon sx={{ fontSize: 50, color: '#ed6c02' }} />}\r\n                  {suggestion.type === 'scatter' && <ScatterIcon sx={{ fontSize: 50, color: '#9c27b0' }} />}\r\n                </Box>\r\n                \r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {suggestion.description}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ py: 4 }}>\r\n        <PageHeader\r\n          title=\"Visualizations\"\r\n          subtitle=\"Create and manage your data visualizations\"\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              onClick={() => setOpenDialog(true)}\r\n            >\r\n              Create Visualization\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        {renderRecommendedVisualizations()}\r\n        \r\n        {previewCharts.length > 0 ? (\r\n          <Box sx={{ \r\n            mb: 4, \r\n            p: 3, \r\n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\r\n            borderRadius: 2,\r\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\r\n            border: 1,\r\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\r\n          }}>\r\n            <Box sx={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              justifyContent: 'space-between',\r\n              mb: 2\r\n            }}>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                Chart Preview: {selectedXAxis} vs {selectedYAxis}\r\n              </Typography>\r\n              <Box>\r\n                <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                  Data from: {previewFile?.name}\r\n                </Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<AddIcon />}\r\n                  onClick={() => setOpenDialog(true)}\r\n                  sx={{ ml: 2 }}\r\n                >\r\n                  Create New Visualization\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            {/* All Chart Types */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\r\n              All Chart Types\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              {previewCharts.map((chart) => (\r\n                <Grid item xs={12} sm={6} key={chart.chartType}>\r\n                  <Card sx={{ \r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n                    borderRadius: 2,\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'background.paper'\r\n                  }}>\r\n                    <Box sx={{ \r\n                      bgcolor: 'primary.main', \r\n                      color: 'white',\r\n                      p: 2,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'space-between'\r\n                    }}>\r\n                      <Typography variant=\"h6\" component=\"div\">\r\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\r\n                      </Typography>\r\n                      <Chip \r\n                        label={`${chart.confidence}% match`} \r\n                        color={chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default'} \r\n                        size=\"small\"\r\n                        sx={{ fontWeight: 'bold', color: 'white', bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575' }}\r\n                      />\r\n                    </Box>\r\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\r\n                      {chart.yAxis} by {chart.xAxis}\r\n                    </Typography>\r\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\r\n                      <canvas \r\n                        ref={el => chartPreviewRefs.current[chart.chartType] = el}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ p: 2, mt: 'auto' }}>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        fullWidth\r\n                        onClick={() => handleSaveChart(chart)}\r\n                      >\r\n                        Save Visualization\r\n                      </Button>\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n        ) : (\r\n          <Box \r\n            sx={{ \r\n              mt: 4, \r\n              p: 4, \r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              alignItems: 'center', \r\n              justifyContent: 'center',\r\n              backgroundColor: 'white',\r\n              borderRadius: 2,\r\n              boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\r\n              minHeight: '300px'\r\n            }}\r\n          >\r\n            <TimelineIcon sx={{ fontSize: 64, color: 'primary.light', mb: 2 }} />\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n              No Visualizations Yet\r\n            </Typography>\r\n            <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n              Create your first visualization to see it displayed here.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              onClick={() => {\r\n                setOpenDialog(true);\r\n              }}\r\n            >\r\n              Create Visualization\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      {/* File Selection Dialog */}\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\r\n            '& .MuiSelect-root': {\r\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\r\n              '& .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\r\n              },\r\n              '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)',\r\n              }\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\r\n          <Typography variant=\"h6\">\r\n            Select File for Visualization\r\n          </Typography>\r\n        </Box>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 1, color: 'text.secondary' }}>\r\n            Choose a file to analyze and visualize:\r\n          </Typography>\r\n          \r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <List sx={{ \r\n              borderRadius: 1, \r\n              border: '1px solid',\r\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)', \r\n              overflow: 'hidden',\r\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\r\n            }}>\r\n              {files.map((file) => (\r\n                <ListItem\r\n                  key={file._id}\r\n                  button\r\n                  divider\r\n                  sx={{ \r\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \r\n                    '&:hover': {\r\n                      bgcolor: theme.palette.mode === 'dark' \r\n                        ? 'rgba(255, 255, 255, 0.1)' \r\n                        : 'rgba(25, 118, 210, 0.08)'\r\n                    }\r\n                  }}\r\n                  onClick={() => handleFileSelect(file)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <ChartIcon color=\"primary\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={<Typography fontWeight=\"medium\">{file.name}</Typography>}\r\n                    secondary={\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\r\n                        <Chip \r\n                          size=\"small\" \r\n                          label={file.type.toUpperCase()} \r\n                          color={file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary'}\r\n                          sx={{ mr: 1, height: 20, fontSize: '0.7rem' }}\r\n                        />\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {(file.size / 1024).toFixed(2)} KB\r\n                        </Typography>\r\n                      </Box>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </DialogContent>\r\n        <Box sx={{ \r\n          p: 3, \r\n          display: 'flex', \r\n          justifyContent: 'flex-end',\r\n          borderTop: '1px solid',\r\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\r\n        }}>\r\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </Dialog>\r\n\r\n      {/* Axis Selection Dialog */}\r\n      <Dialog\r\n        open={axisSelectionOpen}\r\n        onClose={() => {\r\n          setAxisSelectionOpen(false);\r\n          setError(null);\r\n        }}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            bgcolor: theme.palette.mode === 'dark' ? 'background.default' : 'white',\r\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ \r\n          bgcolor: 'primary.main', \r\n          color: 'white', \r\n          py: 2, \r\n          px: 3,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <Typography variant=\"h6\">\r\n            Select Data for Visualization\r\n          </Typography>\r\n          <Chip \r\n            label={selectedFile?.name || 'No file selected'} \r\n            size=\"small\" \r\n            color=\"default\"\r\n            sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\r\n          />\r\n        </Box>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Box sx={{ \r\n                mb: 3, \r\n                p: 3, \r\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)', \r\n                borderRadius: 1,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                border: 1,\r\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\r\n              }}>\r\n                <Box>\r\n                  <Typography variant=\"h6\">Data Summary</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\r\n                  </Typography>\r\n                </Box>\r\n                <Chip \r\n                  label=\"Ready for visualization\" \r\n                  color=\"success\" \r\n                  icon={<CheckCircleIcon />} \r\n                  sx={{ fontWeight: 'medium' }}\r\n                />\r\n              </Box>\r\n              \r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Select Data Axes\r\n              </Typography>\r\n              \r\n              <Grid container spacing={3} sx={{ mb: 4 }}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\r\n                    X-Axis (Categories)\r\n                  </Typography>\r\n                  <Box sx={{ \r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \r\n                    borderRadius: 1, \r\n                    p: 1,\r\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \r\n                  }}>\r\n                    <select \r\n                      value={selectedXAxis}\r\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\r\n                      style={{ \r\n                        width: '100%', \r\n                        padding: '10px', \r\n                        fontSize: '16px',\r\n                        border: 'none',\r\n                        outline: 'none',\r\n                        backgroundColor: 'transparent',\r\n                        color: theme.palette.text.primary\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select X-Axis Column</option>\r\n                      {analysis?.columns?.map(column => (\r\n                        <option key={column} value={column}>{column}</option>\r\n                      ))}\r\n                    </select>\r\n                  </Box>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\r\n                    Y-Axis (Values)\r\n                  </Typography>\r\n                  <Box sx={{ \r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \r\n                    borderRadius: 1, \r\n                    p: 1,\r\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \r\n                  }}>\r\n                    <select \r\n                      value={selectedYAxis}\r\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\r\n                      style={{ \r\n                        width: '100%', \r\n                        padding: '10px', \r\n                        fontSize: '16px',\r\n                        border: 'none',\r\n                        outline: 'none',\r\n                        backgroundColor: 'transparent',\r\n                        color: theme.palette.text.primary\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select Y-Axis Column</option>\r\n                      {analysis?.columns?.map(column => (\r\n                        <option key={column} value={column}>{column}</option>\r\n                      ))}\r\n                    </select>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <Box sx={{ \r\n          p: 3, \r\n          display: 'flex', \r\n          justifyContent: 'flex-end', \r\n          gap: 2,\r\n          borderTop: '1px solid',\r\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\r\n        }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              setAxisSelectionOpen(false);\r\n              setError(null);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={!selectedXAxis || !selectedYAxis || loading}\r\n            onClick={handleGenerateCharts}\r\n          >\r\n            Generate Charts\r\n          </Button>\r\n        </Box>\r\n      </Dialog>\r\n\r\n      {/* View Visualization Dialog */}\r\n      <Dialog\r\n        open={openViewDialog}\r\n        onClose={handleCloseViewDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            overflow: 'hidden',\r\n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\r\n          <Typography variant=\"h5\">\r\n            {currentVisualization?.name || 'View Visualization'}\r\n          </Typography>\r\n        </Box>\r\n        <DialogContent sx={{ p: 0 }}>\r\n          {currentVisualization && (\r\n            <Box>\r\n              <Box sx={{ height: 400, p: 3 }}>\r\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\r\n              </Box>\r\n              \r\n              <Box sx={{ \r\n                p: 3, \r\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5' \r\n              }}>\r\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\r\n                </Typography>\r\n                \r\n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n                  <Chip \r\n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\r\n                    color=\"primary\"\r\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Chip \r\n                    label={`${currentVisualization.confidence || 90}% confidence`}\r\n                    color=\"success\"\r\n                  />\r\n                  <Box sx={{ flexGrow: 1 }} />\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<EditIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleEditVisualization(currentVisualization);\r\n                    }}\r\n                    sx={{ mr: 1 }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"error\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleDeleteVisualization(currentVisualization._id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n      \r\n      {/* Edit Visualization Dialog - simplified */}\r\n      <Dialog\r\n        open={openEditDialog}\r\n        onClose={handleCloseEditDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Edit Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3, mt: 2 }}>\r\n          {currentVisualization && (\r\n            <Box sx={{ pt: 1 }}>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={currentVisualization.name || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter a descriptive name\"\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px',\r\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\r\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={currentVisualization.description || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe what insights this visualization provides\"\r\n                  rows={3}\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px',\r\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\r\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\r\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\r\n                    <Box \r\n                      key={type}\r\n                      onClick={() => setCurrentVisualization({\r\n                        ...currentVisualization,\r\n                        chartType: type\r\n                      })}\r\n                      sx={{ \r\n                        border: '2px solid',\r\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\r\n                        borderRadius: 2,\r\n                        p: 2,\r\n                        width: '110px',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        cursor: 'pointer',\r\n                        bgcolor: currentVisualization.chartType === type \r\n                          ? (theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)') \r\n                          : (theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent')\r\n                      }}\r\n                    >\r\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      <Typography variant=\"body2\">\r\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={handleUpdateVisualization}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCancelDelete}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\r\n          Delete Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ mt: 2, p: 3 }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\r\n            <Typography variant=\"h6\">\r\n              Are you sure?\r\n            </Typography>\r\n          </Box>\r\n          <Typography>\r\n            This visualization will be permanently deleted. This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}