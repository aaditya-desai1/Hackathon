{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress, Paper, Container } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s2();\n  var _s = $RefreshSig$(),\n    _analysis$columns,\n    _analysis$columns2,\n    _analysis$columns3;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi, _analysisData$analysi2, _analysisData$analysi3, _analysisData$analysi4, _analysisData$analysi5, _analysisData$analysi6, _analysisData$analysi7, _analysisData$analysi8, _analysisData$analysi9;\n        setAnalysis({\n          rowCount: ((_analysisData$analysi = analysisData.analysis.summary) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart - Good for comparing values across categories',\n            reasoning: 'Based on data structure',\n            confidence: 85,\n            xAxis: ((_analysisData$analysi2 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi2 === void 0 ? void 0 : _analysisData$analysi2.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi3 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi3 === void 0 ? void 0 : _analysisData$analysi3.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'line',\n            description: 'Line Chart - Best for showing trends over time or continuous data',\n            reasoning: 'Good for trends over time',\n            confidence: 75,\n            xAxis: ((_analysisData$analysi4 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi4 === void 0 ? void 0 : _analysisData$analysi4.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi5 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi5 === void 0 ? void 0 : _analysisData$analysi5.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'pie',\n            description: 'Pie Chart - Excellent for showing proportions of a whole',\n            reasoning: 'Good for showing proportions',\n            confidence: 65,\n            xAxis: ((_analysisData$analysi6 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi6 === void 0 ? void 0 : _analysisData$analysi6.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi7 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi7 === void 0 ? void 0 : _analysisData$analysi7.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot - Ideal for showing correlation between variables',\n            reasoning: 'Good for showing correlations',\n            confidence: 60,\n            xAxis: ((_analysisData$analysi8 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi8 === void 0 ? void 0 : _analysisData$analysi8.x) || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n            yAxis: ((_analysisData$analysi9 = analysisData.analysis.recommendedAxes) === null || _analysisData$analysi9 === void 0 ? void 0 : _analysisData$analysi9.y) || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n          }]\n        });\n\n        // Automatically open axis selection after successful analysis\n        setAxisSelectionOpen(true);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n\n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      createChartInstance(chart.chartType, chart, newInstances);\n    });\n    setChartPreviewInstances(newInstances);\n  };\n  const createChartInstance = (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n\n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // Prepare data for the chart\n    const chartData = {\n      labels: chart.data.labels,\n      datasets: [{\n        label: chart.title,\n        data: chart.data.values,\n        backgroundColor: [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.success.main, theme.palette.warning.main, theme.palette.info.main, theme.palette.error.main, '#9c27b0',\n        // Purple\n        '#2196f3',\n        // Blue\n        '#4caf50',\n        // Green\n        '#ff9800' // Orange\n        ],\n        borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n        borderWidth: 1\n      }]\n    };\n\n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        },\n        y: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        }\n      }\n    };\n\n    // Create the chart\n    const newChart = new Chart(ctx, {\n      type: chart.chartType,\n      data: chartData,\n      options: options\n    });\n    instancesObject[chartKey] = newChart;\n  };\n  const handleSaveChart = async chart => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n\n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n\n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        console.log(\"Chart image saved locally\");\n\n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n\n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully to your account!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    _s();\n    useEffect(() => {\n      if (chartContainerRef.current && visualization) {\n        // Destroy previous chart instance if it exists\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n        const ctx = chartContainerRef.current.getContext('2d');\n        if (!ctx) return;\n\n        // Configure chart options\n        const options = {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'top',\n              labels: {\n                color: theme.palette.text.primary,\n                font: {\n                  family: theme.typography.fontFamily\n                }\n              }\n            },\n            title: {\n              display: true,\n              text: visualization.title,\n              color: theme.palette.text.primary,\n              font: {\n                family: theme.typography.fontFamily,\n                size: 16,\n                weight: 'bold'\n              }\n            },\n            tooltip: {\n              backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n              titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n              bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n              borderWidth: 1,\n              padding: 10\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: visualization.xAxis,\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: visualization.yAxis,\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }\n            }\n          }\n        };\n\n        // Generate appropriate data based on the chart type\n        let data;\n        if (visualization.chartType === 'scatter') {\n          var _visualization$config, _visualization$config2;\n          // For scatter charts, create paired x-y coordinates with realistic data\n          data = {\n            datasets: [{\n              label: ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.yAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'Value',\n              data: [{\n                x: 20,\n                y: 45\n              }, {\n                x: 25,\n                y: 55\n              }, {\n                x: 30,\n                y: 65\n              }, {\n                x: 35,\n                y: 75\n              }, {\n                x: 40,\n                y: 70\n              }, {\n                x: 45,\n                y: 60\n              }],\n              backgroundColor: 'rgba(75, 192, 192, 0.8)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              pointRadius: 7,\n              pointHoverRadius: 9\n            }]\n          };\n        } else if (visualization.chartType === 'pie') {\n          var _visualization$config3, _visualization$config4;\n          // For pie charts\n          const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n          data = {\n            labels: labels,\n            datasets: [{\n              label: ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : (_visualization$config4 = _visualization$config3.yAxis) === null || _visualization$config4 === void 0 ? void 0 : _visualization$config4.label) || 'Value',\n              data: [65, 59, 80, 81, 56, 55],\n              backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n              borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n              borderWidth: 1\n            }]\n          };\n        } else {\n          var _visualization$config5, _visualization$config6;\n          // For bar and line charts\n          const labels = ['20', '25', '30', '35', '40', '45'];\n          data = {\n            labels: labels,\n            datasets: [{\n              label: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : (_visualization$config6 = _visualization$config5.yAxis) === null || _visualization$config6 === void 0 ? void 0 : _visualization$config6.label) || 'Value',\n              data: [65, 59, 80, 81, 56, 55],\n              backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n              borderColor: visualization.chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n              borderWidth: 1,\n              tension: 0.1\n            }]\n          };\n        }\n\n        // Create the chart based on the type\n        console.log('Creating new chart');\n        const newChart = new Chart(ctx, {\n          type: visualization.chartType || 'bar',\n          data: data,\n          options: options\n        });\n        console.log('Chart created successfully');\n        setChartInstance(newChart);\n      }\n    }, [chartContainerRef, visualization, theme, chartInstance]);\n  };\n\n  // Clean up chart instance on component unmount\n  _s(renderChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    var _location$state2;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n\n        // Schedule rendering after component mounts\n        setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n        }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n      }\n    }\n  }, [location]);\n\n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    var _analysis$visualizati;\n    if (!(analysis !== null && analysis !== void 0 && (_analysis$visualizati = analysis.visualizationSuggestions) !== null && _analysis$visualizati !== void 0 && _analysis$visualizati.length)) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Recommended Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: analysis.visualizationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              },\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            onClick: () => {\n              setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n              setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n              handleGenerateCharts();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  flexGrow: 1\n                },\n                children: [suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1), \" Chart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${suggestion.confidence}% match`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 1\n              },\n              children: [suggestion.type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#1976d2'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 49\n              }, this), suggestion.type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#2e7d32'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 50\n              }, this), suggestion.type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#ed6c02'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 49\n              }, this), suggestion.type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#9c27b0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Visualizations\",\n        subtitle: \"Create and manage your data visualizations\",\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 24\n          }, this),\n          onClick: () => setOpenDialog(true),\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 7\n      }, this), renderRecommendedVisualizations(), previewCharts.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: [\"Chart Preview: \", selectedXAxis, \" vs \", selectedYAxis]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 1\n              },\n              children: [\"Data from: \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 30\n              }, this),\n              onClick: () => setOpenDialog(true),\n              sx: {\n                ml: 2\n              },\n              children: \"Create New Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            mt: 3\n          },\n          children: \"All Chart Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${chart.confidence}% match`,\n                  color: chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default',\n                  size: \"small\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: 'white',\n                    bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: [chart.yAxis, \" by \", chart.xAxis]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[chart.chartType] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1015,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 19\n            }, this)\n          }, chart.chartType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'white',\n          borderRadius: 2,\n          boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\n          minHeight: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            fontSize: 64,\n            color: 'primary.light',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"No Visualizations Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 3\n          },\n          children: \"Create your first visualization to see it displayed here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 26\n          }, this),\n          onClick: () => {\n            setOpenDialog(true);\n          },\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            mt: 1,\n            color: 'text.secondary'\n          },\n          children: \"Choose a file to analyze and visualize:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            overflow: 'hidden',\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => handleFileSelect(file),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"medium\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: file.type.toUpperCase(),\n                  color: file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary',\n                  sx: {\n                    mr: 1,\n                    height: 20,\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1124,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(file.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1130,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select Data for Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'No file selected',\n          size: \"small\",\n          color: \"default\",\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 25\n              }, this),\n              sx: {\n                fontWeight: 'medium'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  style: {\n                    width: '100%',\n                    padding: '10px',\n                    fontSize: '16px',\n                    border: 'none',\n                    outline: 'none',\n                    backgroundColor: 'transparent',\n                    color: theme.palette.text.primary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select X-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns2 = analysis.columns) === null || _analysis$columns2 === void 0 ? void 0 : _analysis$columns2.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1261,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1246,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1239,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  style: {\n                    width: '100%',\n                    padding: '10px',\n                    fontSize: '16px',\n                    border: 'none',\n                    outline: 'none',\n                    backgroundColor: 'transparent',\n                    color: theme.palette.text.primary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Y-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1291,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns3 = analysis.columns) === null || _analysis$columns3 === void 0 ? void 0 : _analysis$columns3.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1293,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden',\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1378,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)' : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1490,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1491,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1492,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1493,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1494,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1469,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1467,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1504,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1519,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 917,\n    columnNumber: 5\n  }, this);\n}\n_s2(Visualizations, \"hDgOxKwPH/MGzDn6qvUf8JZxLww=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","Paper","Container","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizations","_s2","_s","$RefreshSig$","_analysis$columns","_analysis$columns2","_analysis$columns3","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","_analysisData$analysi2","_analysisData$analysi3","_analysisData$analysi4","_analysisData$analysi5","_analysisData$analysi6","_analysisData$analysi7","_analysisData$analysi8","_analysisData$analysi9","rowCount","summary","totalRows","columns","Object","keys","basicAnalysis","visualizationSuggestions","type","description","reasoning","confidence","xAxis","recommendedAxes","x","yAxis","y","handleCreateClick","handleCloseDialog","handleGenerateCharts","previewData","forEach","chartType","suggestion","find","s","push","name","charAt","toUpperCase","slice","fileId","setTimeout","renderPreviewCharts","charts","values","instance","destroy","newInstances","chart","createChartInstance","chartKey","instancesObject","canvas","current","ctx","getContext","chartData","labels","datasets","label","backgroundColor","palette","primary","main","secondary","warning","info","borderColor","mode","borderWidth","options","responsive","maintainAspectRatio","animation","duration","plugins","legend","position","color","text","font","size","tooltip","titleColor","bodyColor","scales","grid","ticks","newChart","handleSaveChart","canvasRef","imageUrl","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","alert","saveToServer","confirm","config","field","subtitle","Date","toLocaleDateString","method","headers","JSON","stringify","isAIGenerated","message","result","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","bar","scatter","line","pie","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","length","variant","family","typography","fontFamily","display","weight","padding","_visualization$config","_visualization$config2","pointRadius","pointHoverRadius","_visualization$config3","_visualization$config4","_visualization$config5","_visualization$config6","tension","_location$state2","savedPreviewCharts","sessionStorage","getItem","savedPreviewFile","parsedCharts","parse","setItem","renderRecommendedVisualizations","_analysis$visualizati","mb","gutterBottom","container","spacing","map","index","sm","md","p","cursor","transition","transform","boxShadow","bgcolor","border","onClick","alignItems","flexGrow","height","justifyContent","maxWidth","py","action","startIcon","borderRadius","component","ml","backgroundImage","flexDirection","overflow","fontWeight","px","ref","el","style","fullWidth","minHeight","open","onClose","PaperProps","borderBottom","severity","button","divider","mr","toFixed","borderTop","icon","onChange","outline","column","gap","disabled","pt","placeholder","rows","flexWrap","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Divider,\n  Alert,\n  IconButton,\n  useTheme,\n  CircularProgress,\n  Paper,\n  Container,\n} from '@mui/material';\nimport {\n  BarChart as ChartIcon,\n  Add as AddIcon,\n  Timeline as TimelineIcon,\n  BubbleChart as ScatterIcon,\n  ShowChart as LineIcon,\n  PieChart as PieIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\n\nfunction Visualizations() {\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = async (file) => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    \n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      \n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n      \n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        setAnalysis({\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [\n            {\n              type: 'bar',\n              description: 'Bar Chart - Good for comparing values across categories',\n              reasoning: 'Based on data structure',\n              confidence: 85,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            },\n            {\n              type: 'line',\n              description: 'Line Chart - Best for showing trends over time or continuous data',\n              reasoning: 'Good for trends over time',\n              confidence: 75,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            },\n            {\n              type: 'pie',\n              description: 'Pie Chart - Excellent for showing proportions of a whole',\n              reasoning: 'Good for showing proportions',\n              confidence: 65,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            },\n            {\n              type: 'scatter',\n              description: 'Scatter Plot - Ideal for showing correlation between variables',\n              reasoning: 'Good for showing correlations',\n              confidence: 60,\n              xAxis: analysisData.analysis.recommendedAxes?.x || Object.keys(analysisData.analysis.basicAnalysis || {})[0],\n              yAxis: analysisData.analysis.recommendedAxes?.y || Object.keys(analysisData.analysis.basicAnalysis || {})[1]\n            }\n          ]\n        });\n        \n        // Automatically open axis selection after successful analysis\n        setAxisSelectionOpen(true);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n    \n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n    \n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      \n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    \n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n    \n    // Schedule rendering after the DOM updates\n      setTimeout(() => {\n        renderPreviewCharts(previewData);\n      }, 300);\n  };\n\n  const renderPreviewCharts = (charts) => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    \n    const newInstances = {};\n    \n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      createChartInstance(chart.chartType, chart, newInstances);\n    });\n    \n    setChartPreviewInstances(newInstances);\n  };\n  \n  const createChartInstance = (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n    }\n    \n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    \n    // Prepare data for the chart\n    const chartData = {\n      labels: chart.data.labels,\n      datasets: [{\n        label: chart.title,\n        data: chart.data.values,\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.secondary.main,\n          theme.palette.success.main,\n          theme.palette.warning.main,\n          theme.palette.info.main,\n          theme.palette.error.main,\n          '#9c27b0', // Purple\n          '#2196f3', // Blue\n          '#4caf50', // Green\n          '#ff9800', // Orange\n        ],\n        borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n        borderWidth: 1\n      }]\n    };\n    \n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000,\n      },\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        },\n        y: {\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          }\n        }\n      }\n    };\n    \n    // Create the chart\n    const newChart = new Chart(ctx, {\n      type: chart.chartType,\n      data: chartData,\n      options: options\n    });\n    \n    instancesObject[chartKey] = newChart;\n  };\n\n  const handleSaveChart = async (chart) => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n        \n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n        \n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        \n        console.log(\"Chart image saved locally\");\n        \n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n      \n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n      \n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      \n      const result = await response.json();\n      console.log('Visualization created:', result);\n      \n      // Show success message\n      alert('Visualization saved successfully to your account!');\n      \n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n      \n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      \n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n      \n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  \n  const handleEditVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  \n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    \n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n      \n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  \n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteVisualization = async (vizId) => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      \n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Delete response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      \n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n      \n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n\n  const getVisualizationIcon = (type) => {\n    const iconSize = { fontSize: 80, opacity: 0.8 };\n    const colors = {\n      bar: '#1976d2',    // blue\n      scatter: '#9c27b0', // purple\n      line: '#2e7d32',    // green\n      pie: '#ed6c02'      // orange\n    };\n    \n    const iconColor = { color: colors[type] || colors.bar };\n    \n    switch (type) {\n      case 'bar':\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'scatter':\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'line':\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'pie':\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\n      default:\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (loading) {\n      return (\n        <Grid item xs={12}>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <LinearProgress />\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\n              Loading...\n            </Typography>\n          </Box>\n        </Grid>\n      );\n    }\n    \n    if (visualizations.length === 0) {\n      return (\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\n          </Typography>\n        </Grid>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderChart = (visualization) => {\n    useEffect(() => {\n      if (chartContainerRef.current && visualization) {\n        // Destroy previous chart instance if it exists\n        if (chartInstance) {\n          chartInstance.destroy();\n        }\n        \n        const ctx = chartContainerRef.current.getContext('2d');\n        if (!ctx) return;\n\n        // Configure chart options\n        const options = {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'top',\n              labels: {\n                color: theme.palette.text.primary,\n                font: {\n                  family: theme.typography.fontFamily,\n                }\n              }\n            },\n            title: {\n              display: true,\n              text: visualization.title,\n              color: theme.palette.text.primary,\n              font: {\n                family: theme.typography.fontFamily,\n                size: 16,\n                weight: 'bold'\n              }\n            },\n            tooltip: {\n              backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n              titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n              bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n              borderWidth: 1,\n              padding: 10\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: visualization.xAxis,\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: visualization.yAxis,\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }\n            }\n          }\n        };\n\n        // Generate appropriate data based on the chart type\n        let data;\n        \n        if (visualization.chartType === 'scatter') {\n          // For scatter charts, create paired x-y coordinates with realistic data\n          data = {\n            datasets: [{\n              label: visualization.config?.yAxis?.label || 'Value',\n              data: [\n                { x: 20, y: 45 },\n                { x: 25, y: 55 },\n                { x: 30, y: 65 },\n                { x: 35, y: 75 },\n                { x: 40, y: 70 },\n                { x: 45, y: 60 }\n              ],\n              backgroundColor: 'rgba(75, 192, 192, 0.8)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              pointRadius: 7,\n              pointHoverRadius: 9,\n            }]\n          };\n        } else if (visualization.chartType === 'pie') {\n          // For pie charts\n          const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n          data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.8)',\n                'rgba(54, 162, 235, 0.8)',\n                'rgba(255, 206, 86, 0.8)',\n                'rgba(75, 192, 192, 0.8)',\n                'rgba(153, 102, 255, 0.8)',\n                'rgba(255, 159, 64, 0.8)'\n              ],\n              borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n              borderWidth: 1\n            }]\n          };\n        } else {\n          // For bar and line charts\n          const labels = ['20', '25', '30', '35', '40', '45'];\n          data = {\n            labels: labels,\n            datasets: [{\n              label: visualization.config?.yAxis?.label || 'Value',\n              data: [65, 59, 80, 81, 56, 55],\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.8)',\n                'rgba(54, 162, 235, 0.8)',\n                'rgba(255, 206, 86, 0.8)',\n                'rgba(75, 192, 192, 0.8)',\n                'rgba(153, 102, 255, 0.8)',\n                'rgba(255, 159, 64, 0.8)'\n              ],\n              borderColor: visualization.chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n              borderWidth: 1,\n              tension: 0.1\n          }]\n        };\n        }\n        \n        // Create the chart based on the type\n        console.log('Creating new chart');\n        const newChart = new Chart(ctx, {\n          type: visualization.chartType || 'bar',\n          data: data,\n          options: options\n        });\n        \n        console.log('Chart created successfully');\n        setChartInstance(newChart);\n      }\n    }, [chartContainerRef, visualization, theme, chartInstance]);\n  };\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Don't clear previewCharts when component mounts/unmounts\n  // This will keep visualizations when navigating away and back\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n\n    // Restore saved previewCharts and selectedFile from sessionStorage if they exist\n    const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n    const savedPreviewFile = sessionStorage.getItem('previewFile');\n    \n    if (savedPreviewCharts) {\n      try {\n        const parsedCharts = JSON.parse(savedPreviewCharts);\n        setPreviewCharts(parsedCharts);\n        \n        if (savedPreviewFile) {\n          setPreviewFile(JSON.parse(savedPreviewFile));\n        }\n        \n        // Schedule rendering after component mounts\n      setTimeout(() => {\n          renderPreviewCharts(parsedCharts);\n      }, 300);\n      } catch (error) {\n        console.error('Error restoring saved charts:', error);\n    }\n    }\n  }, [location]);\n    \n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      \n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    if (!analysis?.visualizationSuggestions?.length) return null;\n\n  return (\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Recommended Visualizations\n        </Typography>\n        <Grid container spacing={2}>\n          {analysis.visualizationSuggestions.map((suggestion, index) => (\n            <Grid item xs={12} sm={6} md={3} key={index}>\n              <Paper\n                sx={{\n                  p: 2,\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4,\n                  },\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                  border: 1,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n                }}\n                onClick={() => {\n                  setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n                  setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n                  handleGenerateCharts();\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\n                    {suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1)} Chart\n                  </Typography>\n                  <Chip\n                    label={`${suggestion.confidence}% match`}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Box sx={{ height: 100, display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>\n                  {suggestion.type === 'bar' && <ChartIcon sx={{ fontSize: 50, color: '#1976d2' }} />}\n                  {suggestion.type === 'line' && <LineIcon sx={{ fontSize: 50, color: '#2e7d32' }} />}\n                  {suggestion.type === 'pie' && <PieIcon sx={{ fontSize: 50, color: '#ed6c02' }} />}\n                  {suggestion.type === 'scatter' && <ScatterIcon sx={{ fontSize: 50, color: '#9c27b0' }} />}\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {suggestion.description}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ py: 4 }}>\n      <PageHeader\n        title=\"Visualizations\"\n          subtitle=\"Create and manage your data visualizations\"\n          action={\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n              onClick={() => setOpenDialog(true)}\n          >\n            Create Visualization\n          </Button>\n        }\n      />\n\n        {renderRecommendedVisualizations()}\n        \n        {previewCharts.length > 0 ? (\n          <Box sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              justifyContent: 'space-between',\n              mb: 2\n            }}>\n              <Typography variant=\"h5\" component=\"h2\">\n                Chart Preview: {selectedXAxis} vs {selectedYAxis}\n              </Typography>\n              <Box>\n                <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                  Data from: {previewFile?.name}\n                </Typography>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={() => setOpenDialog(true)}\n                  sx={{ ml: 2 }}\n                >\n                  Create New Visualization\n                </Button>\n              </Box>\n            </Box>\n\n            {/* All Chart Types */}\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\n              All Chart Types\n            </Typography>\n            <Grid container spacing={3}>\n              {previewCharts.map((chart) => (\n                <Grid item xs={12} sm={6} key={chart.chartType}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                      <Chip \n                        label={`${chart.confidence}% match`} \n                        color={chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default'} \n                        size=\"small\"\n                        sx={{ fontWeight: 'bold', color: 'white', bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575' }}\n                      />\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.yAxis} by {chart.xAxis}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[chart.chartType] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        ) : (\n          <Box \n            sx={{ \n              mt: 4, \n              p: 4, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center',\n              backgroundColor: 'white',\n              borderRadius: 2,\n              boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\n              minHeight: '300px'\n            }}\n          >\n            <TimelineIcon sx={{ fontSize: 64, color: 'primary.light', mb: 2 }} />\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              No Visualizations Yet\n            </Typography>\n            <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\n              Create your first visualization to see it displayed here.\n            </Typography>\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={() => {\n                setOpenDialog(true);\n              }}\n            >\n              Create Visualization\n            </Button>\n          </Box>\n        )}\n      </Box>\n\n      {/* File Selection Dialog */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          Create Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 1, color: 'text.secondary' }}>\n            Choose a file to analyze and visualize:\n          </Typography>\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <List sx={{ \n              borderRadius: 1, \n              border: '1px solid',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)', \n              overflow: 'hidden',\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n            }}>\n              {files.map((file) => (\n                <ListItem\n                  key={file._id}\n                  button\n                  divider\n                  sx={{ \n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \n                    '&:hover': {\n                      bgcolor: theme.palette.mode === 'dark' \n                        ? 'rgba(255, 255, 255, 0.1)' \n                        : 'rgba(25, 118, 210, 0.08)'\n                    }\n                  }}\n                  onClick={() => handleFileSelect(file)}\n                >\n                  <ListItemIcon>\n                    <ChartIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={<Typography fontWeight=\"medium\">{file.name}</Typography>}\n                    secondary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                        <Chip \n                          size=\"small\" \n                          label={file.type.toUpperCase()} \n                          color={file.type === 'csv' ? 'success' : file.type === 'json' ? 'info' : 'primary'}\n                          sx={{ mr: 1, height: 20, fontSize: '0.7rem' }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {(file.size / 1024).toFixed(2)} KB\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* Axis Selection Dialog */}\n      <Dialog\n        open={axisSelectionOpen}\n        onClose={() => {\n          setAxisSelectionOpen(false);\n          setError(null);\n        }}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          py: 2, \n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Typography variant=\"h6\">\n            Select Data for Visualization\n          </Typography>\n          <Chip \n            label={selectedFile?.name || 'No file selected'} \n            size=\"small\" \n            color=\"default\"\n            sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\n          />\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Box sx={{ \n                mb: 3, \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)', \n                borderRadius: 1,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                border: 1,\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }}>\n                <Box>\n                  <Typography variant=\"h6\">Data Summary</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\n                  </Typography>\n                </Box>\n                <Chip \n                  label=\"Ready for visualization\" \n                  color=\"success\" \n                  icon={<CheckCircleIcon />} \n                  sx={{ fontWeight: 'medium' }}\n                />\n              </Box>\n              \n              <Typography variant=\"h6\" gutterBottom>\n                Select Data Axes\n              </Typography>\n              \n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    X-Axis (Categories)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \n                    borderRadius: 1, \n                    p: 1,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <select \n                      value={selectedXAxis}\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\n                      style={{ \n                        width: '100%', \n                        padding: '10px', \n                        fontSize: '16px',\n                        border: 'none',\n                        outline: 'none',\n                        backgroundColor: 'transparent',\n                        color: theme.palette.text.primary\n                      }}\n                    >\n                      <option value=\"\">Select X-Axis Column</option>\n                      {analysis?.columns?.map(column => (\n                        <option key={column} value={column}>{column}</option>\n                      ))}\n                    </select>\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    Y-Axis (Values)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \n                    borderRadius: 1, \n                    p: 1,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <select \n                      value={selectedYAxis}\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\n                      style={{ \n                        width: '100%', \n                        padding: '10px', \n                        fontSize: '16px',\n                        border: 'none',\n                        outline: 'none',\n                        backgroundColor: 'transparent',\n                        color: theme.palette.text.primary\n                      }}\n                    >\n                      <option value=\"\">Select Y-Axis Column</option>\n                      {analysis?.columns?.map(column => (\n                        <option key={column} value={column}>{column}</option>\n                      ))}\n                    </select>\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end', \n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setAxisSelectionOpen(false);\n              setError(null);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={!selectedXAxis || !selectedYAxis || loading}\n            onClick={handleGenerateCharts}\n          >\n            Generate Charts\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* View Visualization Dialog */}\n      <Dialog\n        open={openViewDialog}\n        onClose={handleCloseViewDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden',\n            bgcolor: 'background.paper',\n          }\n        }}\n      >\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\n          <Typography variant=\"h5\">\n            {currentVisualization?.name || 'View Visualization'}\n          </Typography>\n        </Box>\n        <DialogContent sx={{ p: 0 }}>\n          {currentVisualization && (\n            <Box>\n              <Box sx={{ height: 400, p: 3 }}>\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\n              </Box>\n              \n              <Box sx={{ \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5' \n              }}>\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\n                </Typography>\n                \n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n                  <Chip \n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\n                    color=\"primary\"\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\n                    sx={{ mr: 1 }}\n                  />\n                  <Chip \n                    label={`${currentVisualization.confidence || 90}% confidence`}\n                    color=\"success\"\n                  />\n                  <Box sx={{ flexGrow: 1 }} />\n                  <Button \n                    variant=\"outlined\" \n                    startIcon={<EditIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleEditVisualization(currentVisualization);\n                    }}\n                    sx={{ mr: 1 }}\n                  >\n                    Edit\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleDeleteVisualization(currentVisualization._id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n      </Dialog>\n      \n      {/* Edit Visualization Dialog - simplified */}\n      <Dialog\n        open={openEditDialog}\n        onClose={handleCloseEditDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\n          Edit Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3, mt: 2 }}>\n          {currentVisualization && (\n            <Box sx={{ pt: 1 }}>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={currentVisualization.name || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter a descriptive name\"\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\n                <textarea\n                  name=\"description\"\n                  value={currentVisualization.description || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe what insights this visualization provides\"\n                  rows={3}\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\n                    <Box \n                      key={type}\n                      onClick={() => setCurrentVisualization({\n                        ...currentVisualization,\n                        chartType: type\n                      })}\n                      sx={{ \n                        border: '2px solid',\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                        borderRadius: 2,\n                        p: 2,\n                        width: '110px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                        bgcolor: currentVisualization.chartType === type \n                          ? (theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)') \n                          : (theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent')\n                      }}\n                    >\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      <Typography variant=\"body2\">\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUpdateVisualization}\n            startIcon={<EditIcon />}\n          >\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={openDeleteDialog}\n        onClose={handleCancelDelete}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\n          Delete Visualization\n        </DialogTitle>\n        <DialogContent sx={{ mt: 2, p: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\n            <Typography variant=\"h6\">\n              Are you sure?\n            </Typography>\n          </Box>\n          <Typography>\n            This visualization will be permanently deleted. This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}