{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi;\n        setAnalysis({\n          rowCount: ((_analysisData$analysi = analysisData.analysis.summary) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart',\n            reasoning: 'Based on data structure',\n            confidence: 85\n          }, {\n            type: 'line',\n            description: 'Line Chart',\n            reasoning: 'Good for trends over time',\n            confidence: 75\n          }, {\n            type: 'pie',\n            description: 'Pie Chart',\n            reasoning: 'Good for showing proportions',\n            confidence: 65\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot',\n            reasoning: 'Good for showing correlations',\n            confidence: 60\n          }]\n        });\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedXAxis || !selectedYAxis) {\n      setError('Please select both X and Y axes');\n      return;\n    }\n    setShowChartOptions(true);\n  };\n  const handleCreateVisualization = async chartType => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Find suggestion matching the selected chart type\n      const selectedSuggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : 65\n      };\n\n      // Create a basic config from the selected file, axes and analysis\n      const config = {\n        xAxis: {\n          field: selectedXAxis,\n          label: selectedXAxis\n        },\n        yAxis: {\n          field: selectedYAxis,\n          label: selectedYAxis\n        },\n        title: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n          fileId: selectedFile._id,\n          chartType: chartType,\n          confidence: selectedSuggestion.confidence,\n          config: config\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Close dialog and refresh visualizations\n      handleCloseDialog();\n\n      // Refresh the visualizations list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    console.log('Rendering chart for visualization:', visualization);\n    if (!chartContainerRef.current) {\n      console.error('Chart container reference not available');\n      return;\n    }\n\n    // Destroy previous chart if exists\n    if (chartInstance) {\n      console.log('Destroying previous chart instance');\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) {\n      console.error('Could not get 2D context from canvas');\n      return;\n    }\n    console.log('Chart type:', visualization.chartType);\n    console.log('Chart config:', visualization.config);\n    try {\n      var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4, _visualization$config5, _visualization$config6, _visualization$config7, _visualization$config8, _visualization$config9;\n      // Generate mock data based on the chart type and config\n      const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n      const data = {\n        labels: labels,\n        datasets: [{\n          label: ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.yAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'Value',\n          data: [65, 59, 80, 81, 56, 55],\n          backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      };\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: visualization.chartType || 'bar',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            title: {\n              display: true,\n              text: ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : _visualization$config3.title) || visualization.name\n            },\n            subtitle: {\n              display: !!((_visualization$config4 = visualization.config) !== null && _visualization$config4 !== void 0 && _visualization$config4.subtitle),\n              text: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : _visualization$config5.subtitle) || ''\n            },\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: ((_visualization$config6 = visualization.config) === null || _visualization$config6 === void 0 ? void 0 : (_visualization$config7 = _visualization$config6.xAxis) === null || _visualization$config7 === void 0 ? void 0 : _visualization$config7.label) || 'Category'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: ((_visualization$config8 = visualization.config) === null || _visualization$config8 === void 0 ? void 0 : (_visualization$config9 = _visualization$config8.yAxis) === null || _visualization$config9 === void 0 ? void 0 : _visualization$config9.label) || 'Value'\n              },\n              beginAtZero: true\n            }\n          }\n        }\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n      alert('Failed to render chart: ' + error.message);\n    }\n  };\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [chartInstance]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: '#f5f5f5',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Visualizations\",\n      icon: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 15\n      }, this),\n      actions: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 24\n        }, this),\n        onClick: handleCreateClick,\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), visualizations.length === 0 && !loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        borderRadius: 2,\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\n        minHeight: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TimelineIcon, {\n        sx: {\n          fontSize: 64,\n          color: 'primary.light',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"No Visualizations Yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 3\n        },\n        children: \"Create your first visualization to see it displayed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 24\n        }, this),\n        onClick: handleCreateClick,\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 2\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading visualizations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 13\n      }, this) : visualizations.map(viz => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            transition: 'transform 0.2s, box-shadow 0.2s',\n            '&:hover': {\n              transform: 'translateY(-5px)',\n              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n              cursor: 'pointer'\n            }\n          },\n          onClick: () => handleViewVisualization(viz),\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: viz.name,\n            subheader: `Created: ${new Date(viz.createdAt).toLocaleDateString()}`,\n            action: /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${viz.confidence || 90}% match`,\n              color: \"primary\",\n              size: \"small\",\n              sx: {\n                fontWeight: 'bold'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              pt: 0,\n              height: 200,\n              position: 'relative',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: getVisualizationIcon(viz.chartType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              bgcolor: 'primary.main',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              mt: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 'bold',\n                mr: 1\n              },\n              children: [viz.chartType.charAt(0).toUpperCase() + viz.chartType.slice(1), \" Chart\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditVisualization(viz);\n                },\n                sx: {\n                  color: 'white',\n                  mr: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteVisualization(viz._id);\n                },\n                sx: {\n                  color: 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 17\n        }, this)\n      }, viz._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? 'rgba(25, 118, 210, 0.1)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 844,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            m: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 13\n        }, this), !selectedFile ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select a file to analyze and visualize:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              bgcolor: '#f5f5f5',\n              borderRadius: 2\n            },\n            children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              sx: {\n                mb: 1,\n                bgcolor: 'white',\n                borderRadius: 1,\n                boxShadow: '0 2px 5px rgba(0,0,0,0.05)',\n                '&:hover': {\n                  bgcolor: 'rgba(25, 118, 210, 0.08)'\n                }\n              },\n              onClick: () => handleFileSelect(file),\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 950,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: file.name,\n                secondary: `${file.type} - ${(file.size / 1024).toFixed(2)} KB`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 21\n              }, this)]\n            }, file._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 3,\n              p: 2,\n              bgcolor: 'primary.light',\n              color: 'white',\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(ChartIcon, {\n              sx: {\n                fontSize: 32,\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Analysis for \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 15\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              mt: 4,\n              mb: 4,\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              sx: {\n                mb: 3,\n                height: 8,\n                borderRadius: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"text.secondary\",\n              children: \"Analyzing data...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"We're examining your data to find the best visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 17\n          }, this) : analysis ? /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3,\n                p: 3,\n                bgcolor: '#f5f5f5',\n                borderRadius: 2,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Data Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 999,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [analysis.rowCount, \" rows analyzed across \", analysis.columns.length, \" columns\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"Ready for visualization\",\n                color: \"success\",\n                icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 19\n            }, this), !showChartOptions ? /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Select Data for Visualization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                sx: {\n                  mb: 4\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"X-Axis (Categories)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1019,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      border: '1px solid #ddd',\n                      borderRadius: 1,\n                      p: 1,\n                      bgcolor: 'white'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedXAxis,\n                      onChange: e => setSelectedXAxis(e.target.value),\n                      style: {\n                        width: '100%',\n                        padding: '10px',\n                        fontSize: '16px',\n                        border: 'none',\n                        outline: 'none'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select X-Axis Column\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1039,\n                        columnNumber: 31\n                      }, this), analysis.columns.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: column,\n                        children: column\n                      }, column, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1041,\n                        columnNumber: 33\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1028,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1022,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Y-Axis (Values)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      border: '1px solid #ddd',\n                      borderRadius: 1,\n                      p: 1,\n                      bgcolor: 'white'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: selectedYAxis,\n                      onChange: e => setSelectedYAxis(e.target.value),\n                      style: {\n                        width: '100%',\n                        padding: '10px',\n                        fontSize: '16px',\n                        border: 'none',\n                        outline: 'none'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Y-Axis Column\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1068,\n                        columnNumber: 31\n                      }, this), analysis.columns.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: column,\n                        children: column\n                      }, column, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1070,\n                        columnNumber: 33\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1057,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"large\",\n                  onClick: handleGenerateCharts,\n                  disabled: !selectedXAxis || !selectedYAxis,\n                  startIcon: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1083,\n                    columnNumber: 38\n                  }, this),\n                  sx: {\n                    px: 4\n                  },\n                  children: \"Generate Chart Options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  mb: 2\n                },\n                children: \"Available Chart Types\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: ['bar', 'line', 'pie', 'scatter'].map(chartType => {\n                  const recommendation = analysis.visualizationSuggestions.find(s => s.type === chartType);\n                  const confidence = recommendation ? recommendation.confidence : 60;\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      sx: {\n                        borderRadius: 2,\n                        overflow: 'hidden',\n                        transition: 'transform 0.2s',\n                        '&:hover': {\n                          transform: 'translateY(-5px)',\n                          boxShadow: '0 8px 16px rgba(0,0,0,0.1)'\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          p: 2,\n                          bgcolor: 'primary.light',\n                          color: 'white',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'space-between'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle1\",\n                          children: [chartType.charAt(0).toUpperCase() + chartType.slice(1), \" Chart\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1120,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `${confidence}%`,\n                          color: confidence > 80 ? 'success' : 'primary',\n                          size: \"small\",\n                          sx: {\n                            color: 'white',\n                            bgcolor: 'primary.dark'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1123,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1112,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          p: 3,\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center'\n                        },\n                        children: [getVisualizationIcon(chartType), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"text.secondary\",\n                          sx: {\n                            mt: 2,\n                            textAlign: 'center',\n                            minHeight: '60px'\n                          },\n                          children: [chartType === 'bar' && `Compare ${selectedYAxis} values across different ${selectedXAxis} categories`, chartType === 'line' && `Show ${selectedYAxis} trends and patterns over ${selectedXAxis}`, chartType === 'pie' && `Display proportion of ${selectedYAxis} distribution among ${selectedXAxis} categories`, chartType === 'scatter' && `Explore relationship between ${selectedXAxis} and ${selectedYAxis} variables`]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1139,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          onClick: () => handleCreateVisualization(chartType),\n                          sx: {\n                            mt: 2\n                          },\n                          fullWidth: true,\n                          children: [\"Create \", chartType.charAt(0).toUpperCase() + chartType.slice(1), \" Chart\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1150,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1131,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1103,\n                      columnNumber: 31\n                    }, this)\n                  }, chartType, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1102,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 4\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Recommended Charts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1166,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    p: 3,\n                    bgcolor: '#f5f5f5',\n                    borderRadius: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: \"primary\",\n                    gutterBottom: true,\n                    children: \"Based on your data structure, we recommend:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1174,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(List, {\n                    children: analysis.visualizationSuggestions.sort((a, b) => b.confidence - a.confidence).map((suggestion, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                      sx: {\n                        mb: 1,\n                        bgcolor: 'white',\n                        borderRadius: 1,\n                        border: index === 0 ? '2px solid' : '1px solid',\n                        borderColor: index === 0 ? 'primary.main' : '#ddd'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: [index === 0 && /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                          color: \"success\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1190,\n                          columnNumber: 53\n                        }, this), index !== 0 && getVisualizationIcon(suggestion.type)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1189,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: index === 0 ? 'subtitle1' : 'body1',\n                          children: [suggestion.description, index === 0 && ' (Best Match)']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1195,\n                          columnNumber: 39\n                        }, this),\n                        secondary: suggestion.reasoning\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1193,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `${suggestion.confidence}%`,\n                        color: suggestion.confidence > 80 ? 'success' : 'primary',\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1202,\n                        columnNumber: 35\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1182,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1178,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1169,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1165,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3\n        },\n        children: [selectedFile && /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 26\n          }, this),\n          onClick: () => {\n            if (showChartOptions) {\n              setShowChartOptions(false);\n            } else {\n              setSelectedFile(null);\n            }\n          },\n          sx: {\n            mr: 'auto'\n          },\n          children: showChartOptions ? 'Back to Axis Selection' : 'Back to File Selection'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 560,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"iMeRRFYMIzhdPPokWiq5qBixwGw=\", false, function () {\n  return [useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Visualizations","_s","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleCreateClick","handleCloseDialog","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","rowCount","summary","totalRows","columns","Object","keys","basicAnalysis","visualizationSuggestions","type","description","reasoning","confidence","handleGenerateCharts","handleCreateVisualization","chartType","selectedSuggestion","find","s","config","xAxis","field","label","yAxis","name","charAt","toUpperCase","slice","subtitle","Date","toLocaleDateString","method","headers","body","JSON","stringify","fileId","message","result","handleViewVisualization","viz","visualization","id","setTimeout","renderChart","alert","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","destroy","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","bar","scatter","line","pie","iconColor","color","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","length","variant","current","ctx","getContext","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","_visualization$config5","_visualization$config6","_visualization$config7","_visualization$config8","_visualization$config9","labels","datasets","backgroundColor","borderColor","borderWidth","newChart","options","responsive","maintainAspectRatio","plugins","display","text","legend","position","scales","x","y","beginAtZero","p","minHeight","icon","actions","startIcon","onClick","flexDirection","alignItems","justifyContent","borderRadius","boxShadow","mb","gutterBottom","container","spacing","map","sm","lg","height","transition","transform","cursor","subheader","createdAt","action","size","fontWeight","pt","bgcolor","mr","flexGrow","stopPropagation","open","onClose","maxWidth","fullWidth","PaperProps","overflow","py","px","ref","style","onChange","placeholder","padding","border","rows","flexWrap","gap","severity","m","button","primary","secondary","toFixed","textAlign","outline","column","disabled","recommendation","sort","a","b","suggestion","index","_c","$RefreshReg$"],"sources":["E:/git_projects/test/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Chip,\r\n  Divider,\r\n  Alert,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport {\r\n  BarChart as ChartIcon,\r\n  Add as AddIcon,\r\n  Timeline as TimelineIcon,\r\n  BubbleChart as ScatterIcon,\r\n  ShowChart as LineIcon,\r\n  PieChart as PieIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from '@mui/icons-material';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Visualizations() {\r\n  const location = useLocation();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [deleteTarget, setDeleteTarget] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [visualizations, setVisualizations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [currentVisualization, setCurrentVisualization] = useState(null);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const chartContainerRef = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const [selectedXAxis, setSelectedXAxis] = useState('');\r\n  const [selectedYAxis, setSelectedYAxis] = useState('');\r\n  const [showChartOptions, setShowChartOptions] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    fetchVisualizations();\r\n    \r\n    if (location.state?.openCreateDialog) {\r\n      setOpenDialog(true);\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n  }, [location]);\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const response = await fetch('/api/files');\r\n      const data = await response.json();\r\n      setFiles(data.files || []);\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n      setError('Failed to fetch files');\r\n    }\r\n  };\r\n\r\n  const fetchVisualizations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/visualizations');\r\n      const data = await response.json();\r\n      console.log('Fetched visualizations:', data);\r\n      setVisualizations(data.visualizations || []);\r\n    } catch (error) {\r\n      console.error('Error fetching visualizations:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setSelectedFile(null);\r\n    setAnalysis(null);\r\n  };\r\n\r\n  const handleFileSelect = async (file) => {\r\n    setSelectedFile(file);\r\n    setLoading(true);\r\n    setError(null);\r\n    setSelectedXAxis('');\r\n    setSelectedYAxis('');\r\n    setShowChartOptions(false);\r\n    \r\n    try {\r\n      console.log('Analyzing file with ID:', file._id);\r\n      const response = await fetch(`/api/files/${file._id}/analyze`);\r\n      console.log('Analysis response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Analysis error details:', errorData);\r\n        throw new Error(errorData.error || 'Analysis failed');\r\n      }\r\n      \r\n      const analysisData = await response.json();\r\n      console.log('Analysis result:', analysisData);\r\n      \r\n      // Check the structure of analysis data and adapt as needed\r\n      if (analysisData.success && analysisData.analysis) {\r\n        setAnalysis({\r\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\r\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\r\n          visualizationSuggestions: [\r\n            {\r\n              type: 'bar',\r\n              description: 'Bar Chart',\r\n              reasoning: 'Based on data structure',\r\n              confidence: 85\r\n            },\r\n            {\r\n              type: 'line',\r\n              description: 'Line Chart',\r\n              reasoning: 'Good for trends over time',\r\n              confidence: 75\r\n            },\r\n            {\r\n              type: 'pie',\r\n              description: 'Pie Chart',\r\n              reasoning: 'Good for showing proportions',\r\n              confidence: 65\r\n            },\r\n            {\r\n              type: 'scatter',\r\n              description: 'Scatter Plot',\r\n              reasoning: 'Good for showing correlations',\r\n              confidence: 60\r\n            }\r\n          ]\r\n        });\r\n      } else {\r\n        setAnalysis({\r\n          rowCount: 0,\r\n          columns: [],\r\n          visualizationSuggestions: []\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error analyzing file:', error);\r\n      setError('Failed to analyze file');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateCharts = () => {\r\n    if (!selectedXAxis || !selectedYAxis) {\r\n      setError('Please select both X and Y axes');\r\n      return;\r\n    }\r\n    \r\n    setShowChartOptions(true);\r\n  };\r\n\r\n  const handleCreateVisualization = async (chartType) => {\r\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\r\n      setError('Please select file and axes first');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Find suggestion matching the selected chart type\r\n      const selectedSuggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\r\n        type: chartType,\r\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : 65\r\n      };\r\n      \r\n      // Create a basic config from the selected file, axes and analysis\r\n      const config = {\r\n        xAxis: {\r\n          field: selectedXAxis,\r\n          label: selectedXAxis\r\n        },\r\n        yAxis: {\r\n          field: selectedYAxis,\r\n          label: selectedYAxis\r\n        },\r\n        title: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\r\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\r\n      };\r\n      \r\n      // Send request to create visualization\r\n      const response = await fetch('/api/visualizations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\r\n          description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\r\n          fileId: selectedFile._id,\r\n          chartType: chartType,\r\n          confidence: selectedSuggestion.confidence,\r\n          config: config\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to create visualization');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Visualization created:', result);\r\n      \r\n      // Close dialog and refresh visualizations\r\n      handleCloseDialog();\r\n      \r\n      // Refresh the visualizations list\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error creating visualization:', error);\r\n      setError('Failed to create visualization: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViewVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Visualization details:', data.visualization);\r\n      \r\n      // Fix id inconsistency by ensuring we have _id\r\n      if (data.visualization.id && !data.visualization._id) {\r\n        data.visualization._id = data.visualization.id;\r\n      }\r\n      \r\n      setCurrentVisualization(data.visualization);\r\n      setOpenViewDialog(true);\r\n      \r\n      // We need to render the chart after the dialog is open and DOM is ready\r\n      setTimeout(() => {\r\n        renderChart(data.visualization);\r\n      }, 300);\r\n    } catch (error) {\r\n      console.error('Error viewing visualization:', error);\r\n      alert('Failed to load visualization details');\r\n    }\r\n  };\r\n  \r\n  const handleEditVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCurrentVisualization(data.visualization);\r\n      setOpenEditDialog(true);\r\n    } catch (error) {\r\n      console.error('Error editing visualization:', error);\r\n      alert('Failed to load visualization for editing');\r\n    }\r\n  };\r\n  \r\n  const handleUpdateVisualization = async () => {\r\n    if (!currentVisualization) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: currentVisualization.name,\r\n          description: currentVisualization.description,\r\n          chartType: currentVisualization.chartType,\r\n          config: currentVisualization.config\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update visualization');\r\n      }\r\n      \r\n      // Close dialog and refresh visualizations\r\n      setOpenEditDialog(false);\r\n      setCurrentVisualization(null);\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error updating visualization:', error);\r\n      alert('Failed to update visualization');\r\n    }\r\n  };\r\n  \r\n  const handleCloseViewDialog = () => {\r\n    if (chartInstance) {\r\n      chartInstance.destroy();\r\n      setChartInstance(null);\r\n    }\r\n    setOpenViewDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleCloseEditDialog = () => {\r\n    setOpenEditDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentVisualization(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleDeleteVisualization = async (vizId) => {\r\n    setDeleteTarget(vizId);\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (!deleteTarget) {\r\n      console.error('No delete target set');\r\n      alert('Error: No visualization selected for deletion');\r\n      setOpenDeleteDialog(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Deleting visualization with ID:', deleteTarget);\r\n      \r\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      console.log('Delete response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\r\n        console.error('Delete error details:', errorData);\r\n        throw new Error(errorData.message || 'Failed to delete visualization');\r\n      }\r\n      \r\n      console.log('Visualization deleted successfully');\r\n      alert('Visualization deleted successfully');\r\n      \r\n      // Refresh the list\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error deleting visualization:', error);\r\n      alert(`Failed to delete visualization: ${error.message}`);\r\n    } finally {\r\n      setOpenDeleteDialog(false);\r\n      setDeleteTarget(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenDeleteDialog(false);\r\n    setDeleteTarget(null);\r\n  };\r\n\r\n  const getVisualizationIcon = (type) => {\r\n    const iconSize = { fontSize: 80, opacity: 0.8 };\r\n    const colors = {\r\n      bar: '#1976d2',    // blue\r\n      scatter: '#9c27b0', // purple\r\n      line: '#2e7d32',    // green\r\n      pie: '#ed6c02'      // orange\r\n    };\r\n    \r\n    const iconColor = { color: colors[type] || colors.bar };\r\n    \r\n    switch (type) {\r\n      case 'bar':\r\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'scatter':\r\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'line':\r\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'pie':\r\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      default:\r\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n    }\r\n  };\r\n\r\n  const renderPlaceholder = () => {\r\n    if (loading) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <LinearProgress />\r\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\r\n              Loading...\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    if (visualizations.length === 0) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const renderChart = (visualization) => {\r\n    console.log('Rendering chart for visualization:', visualization);\r\n    \r\n    if (!chartContainerRef.current) {\r\n      console.error('Chart container reference not available');\r\n      return;\r\n    }\r\n    \r\n    // Destroy previous chart if exists\r\n    if (chartInstance) {\r\n      console.log('Destroying previous chart instance');\r\n      chartInstance.destroy();\r\n    }\r\n    \r\n    const ctx = chartContainerRef.current.getContext('2d');\r\n    if (!ctx) {\r\n      console.error('Could not get 2D context from canvas');\r\n      return;\r\n    }\r\n    \r\n    console.log('Chart type:', visualization.chartType);\r\n    console.log('Chart config:', visualization.config);\r\n    \r\n    try {\r\n      // Generate mock data based on the chart type and config\r\n      const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\r\n      const data = {\r\n        labels: labels,\r\n        datasets: [{\r\n          label: visualization.config?.yAxis?.label || 'Value',\r\n          data: [65, 59, 80, 81, 56, 55],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n          ],\r\n          borderWidth: 1\r\n        }]\r\n      };\r\n      \r\n      // Create the chart based on the type\r\n      console.log('Creating new chart');\r\n      const newChart = new Chart(ctx, {\r\n        type: visualization.chartType || 'bar',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: visualization.config?.title || visualization.name\r\n            },\r\n            subtitle: {\r\n              display: !!visualization.config?.subtitle,\r\n              text: visualization.config?.subtitle || ''\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'top'\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.xAxis?.label || 'Category'\r\n              }\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.yAxis?.label || 'Value'\r\n              },\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      console.log('Chart created successfully');\r\n      setChartInstance(newChart);\r\n    } catch (error) {\r\n      console.error('Error creating chart:', error);\r\n      alert('Failed to render chart: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // Clean up chart instance on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [chartInstance]);\r\n\r\n  return (\r\n    <Box sx={{ p: 3, backgroundColor: '#f5f5f5', minHeight: '100vh' }}>\r\n      <PageHeader\r\n        title=\"Visualizations\"\r\n        icon={<ChartIcon />}\r\n        actions={\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateClick}\r\n          >\r\n            Create Visualization\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      {visualizations.length === 0 && !loading ? (\r\n        <Box \r\n          sx={{ \r\n            mt: 4, \r\n            p: 4, \r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            alignItems: 'center', \r\n            justifyContent: 'center',\r\n            backgroundColor: 'white',\r\n            borderRadius: 2,\r\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\r\n            minHeight: '300px'\r\n          }}\r\n        >\r\n          <TimelineIcon sx={{ fontSize: 64, color: 'primary.light', mb: 2 }} />\r\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n            No Visualizations Yet\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n            Create your first visualization to see it displayed here.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateClick}\r\n          >\r\n            Create Visualization\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <Grid container spacing={3} sx={{ mt: 2 }}>\r\n          {loading ? (\r\n            <Grid item xs={12}>\r\n              <Box sx={{ width: '100%', mt: 2 }}>\r\n                <LinearProgress />\r\n                <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\r\n                  Loading visualizations...\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          ) : (\r\n            visualizations.map((viz) => (\r\n              <Grid item xs={12} sm={6} lg={4} key={viz._id}>\r\n                <Card sx={{ \r\n                  height: '100%', \r\n                  display: 'flex', \r\n                  flexDirection: 'column',\r\n                  transition: 'transform 0.2s, box-shadow 0.2s',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-5px)',\r\n                    boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\r\n                    cursor: 'pointer'\r\n                  } \r\n                }} onClick={() => handleViewVisualization(viz)}>\r\n                  <CardHeader \r\n                    title={viz.name}\r\n                    subheader={`Created: ${new Date(viz.createdAt).toLocaleDateString()}`}\r\n                    action={\r\n                      <Chip \r\n                        label={`${viz.confidence || 90}% match`} \r\n                        color=\"primary\" \r\n                        size=\"small\"\r\n                        sx={{ fontWeight: 'bold' }}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Box sx={{ \r\n                    p: 2, \r\n                    pt: 0, \r\n                    height: 200, \r\n                    position: 'relative',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                  }}>\r\n                    {getVisualizationIcon(viz.chartType)}\r\n                  </Box>\r\n                  <Box sx={{ \r\n                    p: 2, \r\n                    bgcolor: 'primary.main', \r\n                    color: 'white',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    mt: 'auto'\r\n                  }}>\r\n                    <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mr: 1 }}>\r\n                      {viz.chartType.charAt(0).toUpperCase() + viz.chartType.slice(1)} Chart\r\n                    </Typography>\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    <Box sx={{ display: 'flex' }}>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEditVisualization(viz);\r\n                        }}\r\n                        sx={{ color: 'white', mr: 1 }}\r\n                      >\r\n                        <EditIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteVisualization(viz._id);\r\n                        }}\r\n                        sx={{ color: 'white' }}\r\n                      >\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n            ))\r\n          )}\r\n        </Grid>\r\n      )}\r\n\r\n      {/* View Visualization Dialog */}\r\n      <Dialog\r\n        open={openViewDialog}\r\n        onClose={handleCloseViewDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\r\n          <Typography variant=\"h5\">\r\n            {currentVisualization?.name || 'View Visualization'}\r\n          </Typography>\r\n        </Box>\r\n        <DialogContent sx={{ p: 0 }}>\r\n          {currentVisualization && (\r\n            <Box>\r\n              <Box sx={{ height: 400, p: 3 }}>\r\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\r\n              </Box>\r\n              \r\n              <Box sx={{ p: 3, bgcolor: '#f5f5f5' }}>\r\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\r\n                </Typography>\r\n                \r\n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n                  <Chip \r\n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\r\n                    color=\"primary\"\r\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Chip \r\n                    label={`${currentVisualization.confidence || 90}% confidence`}\r\n                    color=\"success\"\r\n                  />\r\n                  <Box sx={{ flexGrow: 1 }} />\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<EditIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleEditVisualization(currentVisualization);\r\n                    }}\r\n                    sx={{ mr: 1 }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"error\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleDeleteVisualization(currentVisualization._id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n      \r\n      {/* Edit Visualization Dialog - simplified */}\r\n      <Dialog\r\n        open={openEditDialog}\r\n        onClose={handleCloseEditDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Edit Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3, mt: 2 }}>\r\n          {currentVisualization && (\r\n            <Box sx={{ pt: 1 }}>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={currentVisualization.name || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter a descriptive name\"\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px'\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={currentVisualization.description || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe what insights this visualization provides\"\r\n                  rows={3}\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px'\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\r\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\r\n                    <Box \r\n                      key={type}\r\n                      onClick={() => setCurrentVisualization({\r\n                        ...currentVisualization,\r\n                        chartType: type\r\n                      })}\r\n                      sx={{ \r\n                        border: '2px solid',\r\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\r\n                        borderRadius: 2,\r\n                        p: 2,\r\n                        width: '110px',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        cursor: 'pointer',\r\n                        bgcolor: currentVisualization.chartType === type ? 'rgba(25, 118, 210, 0.1)' : 'transparent'\r\n                      }}\r\n                    >\r\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      <Typography variant=\"body2\">\r\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={handleUpdateVisualization}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCancelDelete}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\r\n          Delete Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ mt: 2, p: 3 }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\r\n            <Typography variant=\"h6\">\r\n              Are you sure?\r\n            </Typography>\r\n          </Box>\r\n          <Typography>\r\n            This visualization will be permanently deleted. This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Create Visualization Dialog */}\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Create Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 0 }}>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ m: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          {!selectedFile ? (\r\n            <Box sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Select a file to analyze and visualize:\r\n              </Typography>\r\n              <List sx={{ bgcolor: '#f5f5f5', borderRadius: 2 }}>\r\n                {files.map((file) => (\r\n                  <ListItem\r\n                    key={file._id}\r\n                    button\r\n                    sx={{ \r\n                      mb: 1, \r\n                      bgcolor: 'white', \r\n                      borderRadius: 1,\r\n                      boxShadow: '0 2px 5px rgba(0,0,0,0.05)',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(25, 118, 210, 0.08)'\r\n                      }\r\n                    }}\r\n                    onClick={() => handleFileSelect(file)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <ChartIcon color=\"primary\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={file.name}\r\n                      secondary={`${file.type} - ${(file.size / 1024).toFixed(2)} KB`}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ p: 3 }}>\r\n              <Box sx={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                mb: 3, \r\n                p: 2, \r\n                bgcolor: 'primary.light', \r\n                color: 'white',\r\n                borderRadius: 2\r\n              }}>\r\n                <ChartIcon sx={{ fontSize: 32, mr: 2 }} />\r\n                <Typography variant=\"h6\">\r\n                  Analysis for {selectedFile.name}\r\n                </Typography>\r\n              </Box>\r\n              \r\n              {loading ? (\r\n                <Box sx={{ width: '100%', mt: 4, mb: 4, textAlign: 'center' }}>\r\n                  <LinearProgress sx={{ mb: 3, height: 8, borderRadius: 4 }} />\r\n                  <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    Analyzing data...\r\n                  </Typography>\r\n                  <Typography color=\"text.secondary\">\r\n                    We're examining your data to find the best visualization\r\n                  </Typography>\r\n                </Box>\r\n              ) : analysis ? (\r\n                <Box>\r\n                  <Box sx={{ \r\n                    mb: 3, \r\n                    p: 3, \r\n                    bgcolor: '#f5f5f5', \r\n                    borderRadius: 2,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between'\r\n                  }}>\r\n                    <Box>\r\n                      <Typography variant=\"h6\">Data Summary</Typography>\r\n                      <Typography>\r\n                        {analysis.rowCount} rows analyzed across {analysis.columns.length} columns\r\n                      </Typography>\r\n                    </Box>\r\n                    <Chip \r\n                      label=\"Ready for visualization\" \r\n                      color=\"success\" \r\n                      icon={<CheckCircleIcon />} \r\n                    />\r\n                  </Box>\r\n\r\n                  {!showChartOptions ? (\r\n                    <Box>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Select Data for Visualization\r\n                      </Typography>\r\n                      \r\n                      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <Typography variant=\"subtitle1\" gutterBottom>\r\n                            X-Axis (Categories)\r\n                          </Typography>\r\n                          <Box sx={{ \r\n                            border: '1px solid #ddd', \r\n                            borderRadius: 1, \r\n                            p: 1,\r\n                            bgcolor: 'white' \r\n                          }}>\r\n                            <select \r\n                              value={selectedXAxis}\r\n                              onChange={(e) => setSelectedXAxis(e.target.value)}\r\n                              style={{ \r\n                                width: '100%', \r\n                                padding: '10px', \r\n                                fontSize: '16px',\r\n                                border: 'none',\r\n                                outline: 'none'\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select X-Axis Column</option>\r\n                              {analysis.columns.map(column => (\r\n                                <option key={column} value={column}>{column}</option>\r\n                              ))}\r\n                            </select>\r\n                          </Box>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} sm={6}>\r\n                          <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Y-Axis (Values)\r\n                          </Typography>\r\n                          <Box sx={{ \r\n                            border: '1px solid #ddd', \r\n                            borderRadius: 1, \r\n                            p: 1,\r\n                            bgcolor: 'white' \r\n                          }}>\r\n                            <select \r\n                              value={selectedYAxis}\r\n                              onChange={(e) => setSelectedYAxis(e.target.value)}\r\n                              style={{ \r\n                                width: '100%', \r\n                                padding: '10px', \r\n                                fontSize: '16px',\r\n                                border: 'none',\r\n                                outline: 'none'\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select Y-Axis Column</option>\r\n                              {analysis.columns.map(column => (\r\n                                <option key={column} value={column}>{column}</option>\r\n                              ))}\r\n                            </select>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                      \r\n                      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n                        <Button \r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                          onClick={handleGenerateCharts}\r\n                          disabled={!selectedXAxis || !selectedYAxis}\r\n                          startIcon={<ChartIcon />}\r\n                          sx={{ px: 4 }}\r\n                        >\r\n                          Generate Chart Options\r\n                        </Button>\r\n                      </Box>\r\n                    </Box>\r\n                  ) : (\r\n                    <Box>\r\n                      <Typography variant=\"h6\" gutterBottom sx={{ mb: 2 }}>\r\n                        Available Chart Types\r\n                      </Typography>\r\n                      \r\n                      <Grid container spacing={3}>\r\n                        {['bar', 'line', 'pie', 'scatter'].map(chartType => {\r\n                          const recommendation = analysis.visualizationSuggestions.find(s => s.type === chartType);\r\n                          const confidence = recommendation ? recommendation.confidence : 60;\r\n                          \r\n                          return (\r\n                            <Grid item xs={12} sm={6} key={chartType}>\r\n                              <Card sx={{ \r\n                                borderRadius: 2, \r\n                                overflow: 'hidden',\r\n                                transition: 'transform 0.2s',\r\n                                '&:hover': {\r\n                                  transform: 'translateY(-5px)',\r\n                                  boxShadow: '0 8px 16px rgba(0,0,0,0.1)'\r\n                                }\r\n                              }}>\r\n                                <Box sx={{ \r\n                                  p: 2, \r\n                                  bgcolor: 'primary.light', \r\n                                  color: 'white',\r\n                                  display: 'flex',\r\n                                  alignItems: 'center',\r\n                                  justifyContent: 'space-between'\r\n                                }}>\r\n                                  <Typography variant=\"subtitle1\">\r\n                                    {chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart\r\n                                  </Typography>\r\n                                  <Chip \r\n                                    label={`${confidence}%`}\r\n                                    color={confidence > 80 ? 'success' : 'primary'}\r\n                                    size=\"small\"\r\n                                    sx={{ color: 'white', bgcolor: 'primary.dark' }}\r\n                                  />\r\n                                </Box>\r\n                                \r\n                                <Box sx={{ \r\n                                  p: 3, \r\n                                  display: 'flex',\r\n                                  flexDirection: 'column',\r\n                                  alignItems: 'center'\r\n                                }}>\r\n                                  {getVisualizationIcon(chartType)}\r\n                                  \r\n                                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ \r\n                                    mt: 2, \r\n                                    textAlign: 'center',\r\n                                    minHeight: '60px'\r\n                                  }}>\r\n                                    {chartType === 'bar' && `Compare ${selectedYAxis} values across different ${selectedXAxis} categories`}\r\n                                    {chartType === 'line' && `Show ${selectedYAxis} trends and patterns over ${selectedXAxis}`}\r\n                                    {chartType === 'pie' && `Display proportion of ${selectedYAxis} distribution among ${selectedXAxis} categories`}\r\n                                    {chartType === 'scatter' && `Explore relationship between ${selectedXAxis} and ${selectedYAxis} variables`}\r\n                                  </Typography>\r\n                                  \r\n                                  <Button \r\n                                    variant=\"contained\"\r\n                                    onClick={() => handleCreateVisualization(chartType)}\r\n                                    sx={{ mt: 2 }}\r\n                                    fullWidth\r\n                                  >\r\n                                    Create {chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart\r\n                                  </Button>\r\n                                </Box>\r\n                              </Card>\r\n                            </Grid>\r\n                          );\r\n                        })}\r\n                      </Grid>\r\n                      \r\n                      <Box sx={{ mt: 4 }}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                          Recommended Charts\r\n                        </Typography>\r\n                        <Box sx={{ \r\n                          p: 3, \r\n                          bgcolor: '#f5f5f5', \r\n                          borderRadius: 2\r\n                        }}>\r\n                          <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom>\r\n                            Based on your data structure, we recommend:\r\n                          </Typography>\r\n                          \r\n                          <List>\r\n                            {analysis.visualizationSuggestions\r\n                              .sort((a, b) => b.confidence - a.confidence)\r\n                              .map((suggestion, index) => (\r\n                                <ListItem key={index} sx={{ \r\n                                  mb: 1,\r\n                                  bgcolor: 'white',\r\n                                  borderRadius: 1,\r\n                                  border: index === 0 ? '2px solid' : '1px solid',\r\n                                  borderColor: index === 0 ? 'primary.main' : '#ddd'\r\n                                }}>\r\n                                  <ListItemIcon>\r\n                                    {index === 0 && <CheckCircleIcon color=\"success\" />}\r\n                                    {index !== 0 && getVisualizationIcon(suggestion.type)}\r\n                                  </ListItemIcon>\r\n                                  <ListItemText \r\n                                    primary={\r\n                                      <Typography variant={index === 0 ? 'subtitle1' : 'body1'}>\r\n                                        {suggestion.description}\r\n                                        {index === 0 && ' (Best Match)'}\r\n                                      </Typography>\r\n                                    }\r\n                                    secondary={suggestion.reasoning}\r\n                                  />\r\n                                  <Chip \r\n                                    label={`${suggestion.confidence}%`}\r\n                                    color={suggestion.confidence > 80 ? 'success' : 'primary'}\r\n                                    size=\"small\"\r\n                                  />\r\n                                </ListItem>\r\n                              ))}\r\n                          </List>\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              ) : null}\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3 }}>\r\n          {selectedFile && (\r\n            <Button \r\n              startIcon={<ArrowBackIcon />}\r\n              onClick={() => {\r\n                if (showChartOptions) {\r\n                  setShowChartOptions(false);\r\n                } else {\r\n                  setSelectedFile(null);\r\n                }\r\n              }}\r\n              sx={{ mr: 'auto' }}\r\n            >\r\n              {showChartOptions ? 'Back to Axis Selection' : 'Back to File Selection'}\r\n            </Button>\r\n          )}\r\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}