{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Grid, Paper, Typography, Card, CardContent, CardHeader, IconButton, Tooltip, List, ListItem, ListItemText, ListItemIcon, Divider } from '@mui/material';\nimport { Description as FileIcon, BarChart as ChartIcon, Add as AddIcon, Refresh as RefreshIcon, InsertDriveFile as FileTypeIcon, ShowChart as LineChartIcon, PieChart as PieChartIcon, ScatterPlot as ScatterPlotIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [stats, setStats] = useState({\n    totalFiles: 0,\n    totalVisualizations: 0,\n    recentFiles: [],\n    recentVisualizations: []\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Function to fetch data\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // In a real app, you would fetch from the API\n        // For now, we'll use the testing_data as our sample data\n\n        // Simulate fetching dashboard data with testing_data info\n        const dashboardData = {\n          totalFiles: 8,\n          // We have 8 files in the testing_data folder\n          totalVisualizations: 4,\n          // Let's say we've created 4 visualizations\n          recentFiles: [{\n            id: 1,\n            name: 'student_scores.csv',\n            type: 'csv',\n            date: new Date().toLocaleDateString()\n          }, {\n            id: 2,\n            name: 'height_weight.json',\n            type: 'json',\n            date: new Date().toLocaleDateString()\n          }, {\n            id: 3,\n            name: 'car_performance.csv',\n            type: 'csv',\n            date: new Date().toLocaleDateString()\n          }, {\n            id: 4,\n            name: 'housing_prices.json',\n            type: 'json',\n            date: new Date().toLocaleDateString()\n          }],\n          recentVisualizations: [{\n            id: 1,\n            name: 'Student Performance Analysis',\n            type: 'bar',\n            date: new Date().toLocaleDateString()\n          }, {\n            id: 2,\n            name: 'Height vs Weight Correlation',\n            type: 'scatter',\n            date: new Date().toLocaleDateString()\n          }, {\n            id: 3,\n            name: 'Sales by Marketing Spend',\n            type: 'line',\n            date: new Date().toLocaleDateString()\n          }, {\n            id: 4,\n            name: 'Market Share Distribution',\n            type: 'pie',\n            date: new Date().toLocaleDateString()\n          }]\n        };\n        setStats(dashboardData);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleUploadClick = () => {\n    navigate('/files', {\n      state: {\n        openUploadDialog: true\n      }\n    });\n  };\n  const handleVisualizationClick = () => {\n    navigate('/visualizations', {\n      state: {\n        openCreateDialog: true\n      }\n    });\n  };\n  const handleRefresh = () => {\n    // Refresh stats\n    setLoading(true);\n    // In a real app you would re-fetch data from the server\n    setTimeout(() => setLoading(false), 800); // Simulate loading\n  };\n  const getChartIcon = type => {\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterPlotIcon, {\n          sx: {\n            color: '#9c27b0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineChartIcon, {\n          sx: {\n            color: '#2e7d32'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieChartIcon, {\n          sx: {\n            color: '#ed6c02'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getFileIcon = type => {\n    return /*#__PURE__*/_jsxDEV(FileTypeIcon, {\n      color: type === 'csv' ? 'primary' : 'secondary'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Helper function to format dates\n  const formatDate = dateString => {\n    if (!dateString) return 'Unknown date';\n    const date = new Date(dateString);\n    if (date.toString() === 'Invalid Date') return 'Unknown date';\n    try {\n      return date.toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    } catch (e) {\n      return 'Unknown date';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Dashboard\",\n      icon: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this),\n      actions: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Refresh\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleRefresh,\n          children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Total Files\",\n            avatar: /*#__PURE__*/_jsxDEV(FileIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"div\",\n              children: loading ? '...' : stats.totalFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: stats.totalFiles === 0 ? 'No files uploaded yet' : `${stats.totalFiles} files available`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Visualizations\",\n            avatar: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"div\",\n              children: loading ? '...' : stats.totalVisualizations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: stats.totalVisualizations === 0 ? 'No visualizations created yet' : `${stats.totalVisualizations} visualizations created`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Recent Activity\",\n            avatar: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"div\",\n              children: loading ? '...' : stats.recentFiles.length + stats.recentVisualizations.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: loading ? 'Loading activity...' : stats.recentFiles.length + stats.recentVisualizations.length === 0 ? 'No recent activity' : 'Recent file and visualization activity'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), stats.recentFiles.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Recent Files\",\n            avatar: /*#__PURE__*/_jsxDEV(FileIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: stats.recentFiles.map((file, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: getFileIcon(file.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: file.name,\n                  secondary: `Added ${formatDate(file.date)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), index < stats.recentFiles.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 62\n              }, this)]\n            }, file.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), stats.recentVisualizations.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Recent Visualizations\",\n            avatar: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: stats.recentVisualizations.map((viz, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: getChartIcon(viz.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: viz.name,\n                  secondary: `Created ${formatDate(viz.date)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), index < stats.recentVisualizations.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 71\n              }, this)]\n            }, viz.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Quick Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  height: '100%',\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4\n                  }\n                },\n                onClick: handleUploadClick,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    textAlign: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n                    sx: {\n                      fontSize: 40,\n                      mb: 1,\n                      color: 'primary.main'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"Upload File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Upload CSV, JSON, or text files\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  height: '100%',\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4\n                  }\n                },\n                onClick: handleVisualizationClick,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    textAlign: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ChartIcon, {\n                    sx: {\n                      fontSize: 40,\n                      mb: 1,\n                      color: 'primary.main'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"Create Visualization\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Create charts and graphs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"J11O3y1mvxdiZ21hcQYgD3+D1Xs=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Grid","Paper","Typography","Card","CardContent","CardHeader","IconButton","Tooltip","List","ListItem","ListItemText","ListItemIcon","Divider","Description","FileIcon","BarChart","ChartIcon","Add","AddIcon","Refresh","RefreshIcon","InsertDriveFile","FileTypeIcon","ShowChart","LineChartIcon","PieChart","PieChartIcon","ScatterPlot","ScatterPlotIcon","PageHeader","jsxDEV","_jsxDEV","Dashboard","_s","navigate","stats","setStats","totalFiles","totalVisualizations","recentFiles","recentVisualizations","loading","setLoading","fetchData","dashboardData","id","name","type","date","Date","toLocaleDateString","error","console","handleUploadClick","state","openUploadDialog","handleVisualizationClick","openCreateDialog","handleRefresh","setTimeout","getChartIcon","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","getFileIcon","formatDate","dateString","toString","undefined","year","month","day","e","p","children","title","icon","actions","onClick","container","spacing","mt","item","xs","md","avatar","variant","component","length","map","file","index","Fragment","primary","secondary","viz","gutterBottom","sm","height","cursor","transition","transform","boxShadow","textAlign","fontSize","mb","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  Tooltip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Divider,\r\n} from '@mui/material';\r\nimport {\r\n  Description as FileIcon,\r\n  BarChart as ChartIcon,\r\n  Add as AddIcon,\r\n  Refresh as RefreshIcon,\r\n  InsertDriveFile as FileTypeIcon,\r\n  ShowChart as LineChartIcon,\r\n  PieChart as PieChartIcon,\r\n  ScatterPlot as ScatterPlotIcon,\r\n} from '@mui/icons-material';\r\nimport PageHeader from '../components/common/PageHeader';\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const [stats, setStats] = useState({\r\n    totalFiles: 0,\r\n    totalVisualizations: 0,\r\n    recentFiles: [],\r\n    recentVisualizations: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch data\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // In a real app, you would fetch from the API\r\n        // For now, we'll use the testing_data as our sample data\r\n        \r\n        // Simulate fetching dashboard data with testing_data info\r\n        const dashboardData = {\r\n          totalFiles: 8, // We have 8 files in the testing_data folder\r\n          totalVisualizations: 4, // Let's say we've created 4 visualizations\r\n          recentFiles: [\r\n            { id: 1, name: 'student_scores.csv', type: 'csv', date: new Date().toLocaleDateString() },\r\n            { id: 2, name: 'height_weight.json', type: 'json', date: new Date().toLocaleDateString() },\r\n            { id: 3, name: 'car_performance.csv', type: 'csv', date: new Date().toLocaleDateString() },\r\n            { id: 4, name: 'housing_prices.json', type: 'json', date: new Date().toLocaleDateString() },\r\n          ],\r\n          recentVisualizations: [\r\n            { id: 1, name: 'Student Performance Analysis', type: 'bar', date: new Date().toLocaleDateString() },\r\n            { id: 2, name: 'Height vs Weight Correlation', type: 'scatter', date: new Date().toLocaleDateString() },\r\n            { id: 3, name: 'Sales by Marketing Spend', type: 'line', date: new Date().toLocaleDateString() },\r\n            { id: 4, name: 'Market Share Distribution', type: 'pie', date: new Date().toLocaleDateString() },\r\n          ]\r\n        };\r\n        \r\n        setStats(dashboardData);\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleUploadClick = () => {\r\n    navigate('/files', { state: { openUploadDialog: true } });\r\n  };\r\n\r\n  const handleVisualizationClick = () => {\r\n    navigate('/visualizations', { state: { openCreateDialog: true } });\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    // Refresh stats\r\n    setLoading(true);\r\n    // In a real app you would re-fetch data from the server\r\n    setTimeout(() => setLoading(false), 800); // Simulate loading\r\n  };\r\n\r\n  const getChartIcon = (type) => {\r\n    switch (type) {\r\n      case 'bar':\r\n        return <ChartIcon color=\"primary\" />;\r\n      case 'scatter':\r\n        return <ScatterPlotIcon sx={{ color: '#9c27b0' }} />;\r\n      case 'line':\r\n        return <LineChartIcon sx={{ color: '#2e7d32' }} />;\r\n      case 'pie':\r\n        return <PieChartIcon sx={{ color: '#ed6c02' }} />;\r\n      default:\r\n        return <ChartIcon color=\"primary\" />;\r\n    }\r\n  };\r\n\r\n  const getFileIcon = (type) => {\r\n    return <FileTypeIcon color={type === 'csv' ? 'primary' : 'secondary'} />;\r\n  };\r\n\r\n  // Helper function to format dates\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Unknown date';\r\n    \r\n    const date = new Date(dateString);\r\n    if (date.toString() === 'Invalid Date') return 'Unknown date';\r\n    \r\n    try {\r\n      return date.toLocaleDateString(undefined, {\r\n        year: 'numeric',\r\n        month: 'short', \r\n        day: 'numeric'\r\n      });\r\n    } catch (e) {\r\n      return 'Unknown date';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <PageHeader \r\n        title=\"Dashboard\" \r\n        icon={<ChartIcon />}\r\n        actions={\r\n          <Tooltip title=\"Refresh\">\r\n            <IconButton onClick={handleRefresh}>\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        }\r\n      />\r\n\r\n      <Grid container spacing={3} sx={{ mt: 1 }}>\r\n        {/* Quick Stats */}\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Total Files\"\r\n              avatar={<FileIcon />}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"h4\" component=\"div\">\r\n                {loading ? '...' : stats.totalFiles}\r\n              </Typography>\r\n              <Typography color=\"text.secondary\">\r\n                {stats.totalFiles === 0 ? 'No files uploaded yet' : `${stats.totalFiles} files available`}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Visualizations\"\r\n              avatar={<ChartIcon />}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"h4\" component=\"div\">\r\n                {loading ? '...' : stats.totalVisualizations}\r\n              </Typography>\r\n              <Typography color=\"text.secondary\">\r\n                {stats.totalVisualizations === 0 ? 'No visualizations created yet' : `${stats.totalVisualizations} visualizations created`}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Recent Activity\"\r\n              avatar={<AddIcon />}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"h4\" component=\"div\">\r\n                {loading ? '...' : (stats.recentFiles.length + stats.recentVisualizations.length)}\r\n              </Typography>\r\n              <Typography color=\"text.secondary\">\r\n                {loading ? 'Loading activity...' : \r\n                  (stats.recentFiles.length + stats.recentVisualizations.length === 0 ? \r\n                    'No recent activity' : 'Recent file and visualization activity')}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Recent Files */}\r\n        {stats.recentFiles.length > 0 && (\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardHeader\r\n                title=\"Recent Files\"\r\n                avatar={<FileIcon />}\r\n              />\r\n              <List>\r\n                {stats.recentFiles.map((file, index) => (\r\n                  <React.Fragment key={file.id}>\r\n                    <ListItem>\r\n                      <ListItemIcon>\r\n                        {getFileIcon(file.type)}\r\n                      </ListItemIcon>\r\n                      <ListItemText \r\n                        primary={file.name} \r\n                        secondary={`Added ${formatDate(file.date)}`} \r\n                      />\r\n                    </ListItem>\r\n                    {index < stats.recentFiles.length - 1 && <Divider />}\r\n                  </React.Fragment>\r\n                ))}\r\n              </List>\r\n            </Card>\r\n          </Grid>\r\n        )}\r\n\r\n        {/* Recent Visualizations */}\r\n        {stats.recentVisualizations.length > 0 && (\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardHeader\r\n                title=\"Recent Visualizations\"\r\n                avatar={<ChartIcon />}\r\n              />\r\n              <List>\r\n                {stats.recentVisualizations.map((viz, index) => (\r\n                  <React.Fragment key={viz.id}>\r\n                    <ListItem>\r\n                      <ListItemIcon>\r\n                        {getChartIcon(viz.type)}\r\n                      </ListItemIcon>\r\n                      <ListItemText \r\n                        primary={viz.name} \r\n                        secondary={`Created ${formatDate(viz.date)}`} \r\n                      />\r\n                    </ListItem>\r\n                    {index < stats.recentVisualizations.length - 1 && <Divider />}\r\n                  </React.Fragment>\r\n                ))}\r\n              </List>\r\n            </Card>\r\n          </Grid>\r\n        )}\r\n\r\n        {/* Quick Actions */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Quick Actions\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Card \r\n                  sx={{ \r\n                    height: '100%', \r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s, box-shadow 0.2s',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-4px)',\r\n                      boxShadow: 4,\r\n                    },\r\n                  }}\r\n                  onClick={handleUploadClick}\r\n                >\r\n                  <CardContent sx={{ textAlign: 'center' }}>\r\n                    <FileIcon sx={{ fontSize: 40, mb: 1, color: 'primary.main' }} />\r\n                    <Typography variant=\"h6\">Upload File</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Upload CSV, JSON, or text files\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <Card \r\n                  sx={{ \r\n                    height: '100%', \r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.2s, box-shadow 0.2s',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-4px)',\r\n                      boxShadow: 4,\r\n                    },\r\n                  }}\r\n                  onClick={handleVisualizationClick}\r\n                >\r\n                  <CardContent sx={{ textAlign: 'center' }}>\r\n                    <ChartIcon sx={{ fontSize: 40, mb: 1, color: 'primary.main' }} />\r\n                    <Typography variant=\"h6\">Create Visualization</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Create charts and graphs\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,OAAO,QACF,eAAe;AACtB,SACEC,WAAW,IAAIC,QAAQ,EACvBC,QAAQ,IAAIC,SAAS,EACrBC,GAAG,IAAIC,OAAO,EACdC,OAAO,IAAIC,WAAW,EACtBC,eAAe,IAAIC,YAAY,EAC/BC,SAAS,IAAIC,aAAa,EAC1BC,QAAQ,IAAIC,YAAY,EACxBC,WAAW,IAAIC,eAAe,QACzB,qBAAqB;AAC5B,OAAOC,UAAU,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGpC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGxC,QAAQ,CAAC;IACjCyC,UAAU,EAAE,CAAC;IACbC,mBAAmB,EAAE,CAAC;IACtBC,WAAW,EAAE,EAAE;IACfC,oBAAoB,EAAE;EACxB,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAM8C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF;QACA;;QAEA;QACA,MAAME,aAAa,GAAG;UACpBP,UAAU,EAAE,CAAC;UAAE;UACfC,mBAAmB,EAAE,CAAC;UAAE;UACxBC,WAAW,EAAE,CACX;YAAEM,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,oBAAoB;YAAEC,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC,EACzF;YAAEL,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,oBAAoB;YAAEC,IAAI,EAAE,MAAM;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC,EAC1F;YAAEL,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,qBAAqB;YAAEC,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC,EAC1F;YAAEL,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,qBAAqB;YAAEC,IAAI,EAAE,MAAM;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC,CAC5F;UACDV,oBAAoB,EAAE,CACpB;YAAEK,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,8BAA8B;YAAEC,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC,EACnG;YAAEL,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,8BAA8B;YAAEC,IAAI,EAAE,SAAS;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC,EACvG;YAAEL,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,0BAA0B;YAAEC,IAAI,EAAE,MAAM;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC,EAChG;YAAEL,EAAE,EAAE,CAAC;YAAEC,IAAI,EAAE,2BAA2B;YAAEC,IAAI,EAAE,KAAK;YAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAAE,CAAC;QAEpG,CAAC;QAEDd,QAAQ,CAACQ,aAAa,CAAC;MACzB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9BnB,QAAQ,CAAC,QAAQ,EAAE;MAAEoB,KAAK,EAAE;QAAEC,gBAAgB,EAAE;MAAK;IAAE,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;IACrCtB,QAAQ,CAAC,iBAAiB,EAAE;MAAEoB,KAAK,EAAE;QAAEG,gBAAgB,EAAE;MAAK;IAAE,CAAC,CAAC;EACpE,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACAhB,UAAU,CAAC,IAAI,CAAC;IAChB;IACAiB,UAAU,CAAC,MAAMjB,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMkB,YAAY,GAAIb,IAAI,IAAK;IAC7B,QAAQA,IAAI;MACV,KAAK,KAAK;QACR,oBAAOhB,OAAA,CAACf,SAAS;UAAC6C,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtC,KAAK,SAAS;QACZ,oBAAOlC,OAAA,CAACH,eAAe;UAACsC,EAAE,EAAE;YAAEL,KAAK,EAAE;UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtD,KAAK,MAAM;QACT,oBAAOlC,OAAA,CAACP,aAAa;UAAC0C,EAAE,EAAE;YAAEL,KAAK,EAAE;UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACpD,KAAK,KAAK;QACR,oBAAOlC,OAAA,CAACL,YAAY;UAACwC,EAAE,EAAE;YAAEL,KAAK,EAAE;UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACnD;QACE,oBAAOlC,OAAA,CAACf,SAAS;UAAC6C,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACxC;EACF,CAAC;EAED,MAAME,WAAW,GAAIpB,IAAI,IAAK;IAC5B,oBAAOhB,OAAA,CAACT,YAAY;MAACuC,KAAK,EAAEd,IAAI,KAAK,KAAK,GAAG,SAAS,GAAG;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E,CAAC;;EAED;EACA,MAAMG,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,cAAc;IAEtC,MAAMrB,IAAI,GAAG,IAAIC,IAAI,CAACoB,UAAU,CAAC;IACjC,IAAIrB,IAAI,CAACsB,QAAQ,CAAC,CAAC,KAAK,cAAc,EAAE,OAAO,cAAc;IAE7D,IAAI;MACF,OAAOtB,IAAI,CAACE,kBAAkB,CAACqB,SAAS,EAAE;QACxCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE;MACP,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,OAAO,cAAc;IACvB;EACF,CAAC;EAED,oBACE5C,OAAA,CAAChC,GAAG;IAACmE,EAAE,EAAE;MAAEU,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChB9C,OAAA,CAACF,UAAU;MACTiD,KAAK,EAAC,WAAW;MACjBC,IAAI,eAAEhD,OAAA,CAACf,SAAS;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACpBe,OAAO,eACLjD,OAAA,CAACxB,OAAO;QAACuE,KAAK,EAAC,SAAS;QAAAD,QAAA,eACtB9C,OAAA,CAACzB,UAAU;UAAC2E,OAAO,EAAEvB,aAAc;UAAAmB,QAAA,eACjC9C,OAAA,CAACX,WAAW;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IACV;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEFlC,OAAA,CAAC/B,IAAI;MAACkF,SAAS;MAACC,OAAO,EAAE,CAAE;MAACjB,EAAE,EAAE;QAAEkB,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,gBAExC9C,OAAA,CAAC/B,IAAI;QAACqF,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAV,QAAA,eACvB9C,OAAA,CAAC5B,IAAI;UAAA0E,QAAA,gBACH9C,OAAA,CAAC1B,UAAU;YACTyE,KAAK,EAAC,aAAa;YACnBU,MAAM,eAAEzD,OAAA,CAACjB,QAAQ;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACFlC,OAAA,CAAC3B,WAAW;YAAAyE,QAAA,gBACV9C,OAAA,CAAC7B,UAAU;cAACuF,OAAO,EAAC,IAAI;cAACC,SAAS,EAAC,KAAK;cAAAb,QAAA,EACrCpC,OAAO,GAAG,KAAK,GAAGN,KAAK,CAACE;YAAU;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACblC,OAAA,CAAC7B,UAAU;cAAC2D,KAAK,EAAC,gBAAgB;cAAAgB,QAAA,EAC/B1C,KAAK,CAACE,UAAU,KAAK,CAAC,GAAG,uBAAuB,GAAG,GAAGF,KAAK,CAACE,UAAU;YAAkB;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEPlC,OAAA,CAAC/B,IAAI;QAACqF,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAV,QAAA,eACvB9C,OAAA,CAAC5B,IAAI;UAAA0E,QAAA,gBACH9C,OAAA,CAAC1B,UAAU;YACTyE,KAAK,EAAC,gBAAgB;YACtBU,MAAM,eAAEzD,OAAA,CAACf,SAAS;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACFlC,OAAA,CAAC3B,WAAW;YAAAyE,QAAA,gBACV9C,OAAA,CAAC7B,UAAU;cAACuF,OAAO,EAAC,IAAI;cAACC,SAAS,EAAC,KAAK;cAAAb,QAAA,EACrCpC,OAAO,GAAG,KAAK,GAAGN,KAAK,CAACG;YAAmB;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACblC,OAAA,CAAC7B,UAAU;cAAC2D,KAAK,EAAC,gBAAgB;cAAAgB,QAAA,EAC/B1C,KAAK,CAACG,mBAAmB,KAAK,CAAC,GAAG,+BAA+B,GAAG,GAAGH,KAAK,CAACG,mBAAmB;YAAyB;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEPlC,OAAA,CAAC/B,IAAI;QAACqF,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAV,QAAA,eACvB9C,OAAA,CAAC5B,IAAI;UAAA0E,QAAA,gBACH9C,OAAA,CAAC1B,UAAU;YACTyE,KAAK,EAAC,iBAAiB;YACvBU,MAAM,eAAEzD,OAAA,CAACb,OAAO;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACFlC,OAAA,CAAC3B,WAAW;YAAAyE,QAAA,gBACV9C,OAAA,CAAC7B,UAAU;cAACuF,OAAO,EAAC,IAAI;cAACC,SAAS,EAAC,KAAK;cAAAb,QAAA,EACrCpC,OAAO,GAAG,KAAK,GAAIN,KAAK,CAACI,WAAW,CAACoD,MAAM,GAAGxD,KAAK,CAACK,oBAAoB,CAACmD;YAAO;cAAA7B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE,CAAC,eACblC,OAAA,CAAC7B,UAAU;cAAC2D,KAAK,EAAC,gBAAgB;cAAAgB,QAAA,EAC/BpC,OAAO,GAAG,qBAAqB,GAC7BN,KAAK,CAACI,WAAW,CAACoD,MAAM,GAAGxD,KAAK,CAACK,oBAAoB,CAACmD,MAAM,KAAK,CAAC,GACjE,oBAAoB,GAAG;YAAyC;cAAA7B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGN9B,KAAK,CAACI,WAAW,CAACoD,MAAM,GAAG,CAAC,iBAC3B5D,OAAA,CAAC/B,IAAI;QAACqF,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAV,QAAA,eACvB9C,OAAA,CAAC5B,IAAI;UAAA0E,QAAA,gBACH9C,OAAA,CAAC1B,UAAU;YACTyE,KAAK,EAAC,cAAc;YACpBU,MAAM,eAAEzD,OAAA,CAACjB,QAAQ;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACFlC,OAAA,CAACvB,IAAI;YAAAqE,QAAA,EACF1C,KAAK,CAACI,WAAW,CAACqD,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC/D,OAAA,CAACpC,KAAK,CAACoG,QAAQ;cAAAlB,QAAA,gBACb9C,OAAA,CAACtB,QAAQ;gBAAAoE,QAAA,gBACP9C,OAAA,CAACpB,YAAY;kBAAAkE,QAAA,EACVV,WAAW,CAAC0B,IAAI,CAAC9C,IAAI;gBAAC;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC,eACflC,OAAA,CAACrB,YAAY;kBACXsF,OAAO,EAAEH,IAAI,CAAC/C,IAAK;kBACnBmD,SAAS,EAAE,SAAS7B,UAAU,CAACyB,IAAI,CAAC7C,IAAI,CAAC;gBAAG;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC,EACV6B,KAAK,GAAG3D,KAAK,CAACI,WAAW,CAACoD,MAAM,GAAG,CAAC,iBAAI5D,OAAA,CAACnB,OAAO;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,GAVjC4B,IAAI,CAAChD,EAAE;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWZ,CACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACP,EAGA9B,KAAK,CAACK,oBAAoB,CAACmD,MAAM,GAAG,CAAC,iBACpC5D,OAAA,CAAC/B,IAAI;QAACqF,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAV,QAAA,eACvB9C,OAAA,CAAC5B,IAAI;UAAA0E,QAAA,gBACH9C,OAAA,CAAC1B,UAAU;YACTyE,KAAK,EAAC,uBAAuB;YAC7BU,MAAM,eAAEzD,OAAA,CAACf,SAAS;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACFlC,OAAA,CAACvB,IAAI;YAAAqE,QAAA,EACF1C,KAAK,CAACK,oBAAoB,CAACoD,GAAG,CAAC,CAACM,GAAG,EAAEJ,KAAK,kBACzC/D,OAAA,CAACpC,KAAK,CAACoG,QAAQ;cAAAlB,QAAA,gBACb9C,OAAA,CAACtB,QAAQ;gBAAAoE,QAAA,gBACP9C,OAAA,CAACpB,YAAY;kBAAAkE,QAAA,EACVjB,YAAY,CAACsC,GAAG,CAACnD,IAAI;gBAAC;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC,eACflC,OAAA,CAACrB,YAAY;kBACXsF,OAAO,EAAEE,GAAG,CAACpD,IAAK;kBAClBmD,SAAS,EAAE,WAAW7B,UAAU,CAAC8B,GAAG,CAAClD,IAAI,CAAC;gBAAG;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC,EACV6B,KAAK,GAAG3D,KAAK,CAACK,oBAAoB,CAACmD,MAAM,GAAG,CAAC,iBAAI5D,OAAA,CAACnB,OAAO;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,GAV1CiC,GAAG,CAACrD,EAAE;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWX,CACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACP,eAGDlC,OAAA,CAAC/B,IAAI;QAACqF,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAT,QAAA,eAChB9C,OAAA,CAAC9B,KAAK;UAACiE,EAAE,EAAE;YAAEU,CAAC,EAAE;UAAE,CAAE;UAAAC,QAAA,gBAClB9C,OAAA,CAAC7B,UAAU;YAACuF,OAAO,EAAC,IAAI;YAACU,YAAY;YAAAtB,QAAA,EAAC;UAEtC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACblC,OAAA,CAAC/B,IAAI;YAACkF,SAAS;YAACC,OAAO,EAAE,CAAE;YAAAN,QAAA,gBACzB9C,OAAA,CAAC/B,IAAI;cAACqF,IAAI;cAACC,EAAE,EAAE,EAAG;cAACc,EAAE,EAAE,CAAE;cAACb,EAAE,EAAE,CAAE;cAAAV,QAAA,eAC9B9C,OAAA,CAAC5B,IAAI;gBACH+D,EAAE,EAAE;kBACFmC,MAAM,EAAE,MAAM;kBACdC,MAAM,EAAE,SAAS;kBACjBC,UAAU,EAAE,iCAAiC;kBAC7C,SAAS,EAAE;oBACTC,SAAS,EAAE,kBAAkB;oBAC7BC,SAAS,EAAE;kBACb;gBACF,CAAE;gBACFxB,OAAO,EAAE5B,iBAAkB;gBAAAwB,QAAA,eAE3B9C,OAAA,CAAC3B,WAAW;kBAAC8D,EAAE,EAAE;oBAAEwC,SAAS,EAAE;kBAAS,CAAE;kBAAA7B,QAAA,gBACvC9C,OAAA,CAACjB,QAAQ;oBAACoD,EAAE,EAAE;sBAAEyC,QAAQ,EAAE,EAAE;sBAAEC,EAAE,EAAE,CAAC;sBAAE/C,KAAK,EAAE;oBAAe;kBAAE;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAChElC,OAAA,CAAC7B,UAAU;oBAACuF,OAAO,EAAC,IAAI;oBAAAZ,QAAA,EAAC;kBAAW;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACjDlC,OAAA,CAAC7B,UAAU;oBAACuF,OAAO,EAAC,OAAO;oBAAC5B,KAAK,EAAC,gBAAgB;oBAAAgB,QAAA,EAAC;kBAEnD;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACPlC,OAAA,CAAC/B,IAAI;cAACqF,IAAI;cAACC,EAAE,EAAE,EAAG;cAACc,EAAE,EAAE,CAAE;cAACb,EAAE,EAAE,CAAE;cAAAV,QAAA,eAC9B9C,OAAA,CAAC5B,IAAI;gBACH+D,EAAE,EAAE;kBACFmC,MAAM,EAAE,MAAM;kBACdC,MAAM,EAAE,SAAS;kBACjBC,UAAU,EAAE,iCAAiC;kBAC7C,SAAS,EAAE;oBACTC,SAAS,EAAE,kBAAkB;oBAC7BC,SAAS,EAAE;kBACb;gBACF,CAAE;gBACFxB,OAAO,EAAEzB,wBAAyB;gBAAAqB,QAAA,eAElC9C,OAAA,CAAC3B,WAAW;kBAAC8D,EAAE,EAAE;oBAAEwC,SAAS,EAAE;kBAAS,CAAE;kBAAA7B,QAAA,gBACvC9C,OAAA,CAACf,SAAS;oBAACkD,EAAE,EAAE;sBAAEyC,QAAQ,EAAE,EAAE;sBAAEC,EAAE,EAAE,CAAC;sBAAE/C,KAAK,EAAE;oBAAe;kBAAE;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACjElC,OAAA,CAAC7B,UAAU;oBAACuF,OAAO,EAAC,IAAI;oBAAAZ,QAAA,EAAC;kBAAoB;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eAC1DlC,OAAA,CAAC7B,UAAU;oBAACuF,OAAO,EAAC,OAAO;oBAAC5B,KAAK,EAAC,gBAAgB;oBAAAgB,QAAA,EAAC;kBAEnD;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChC,EAAA,CAzRQD,SAAS;EAAA,QACClC,WAAW;AAAA;AAAA+G,EAAA,GADrB7E,SAAS;AA2RlB,eAAeA,SAAS;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}