{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress, Paper, Container, Select, MenuItem } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  var _analysis$columns;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  const [fileNotFound, setFileNotFound] = useState(false);\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    // Clear existing preview charts when selecting a new file\n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi, _analysisData$analysi2;\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n\n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n\n        // Find correlations between numeric columns\n        const correlations = ((_analysisData$analysi = analysisData.analysis.advancedAnalysis) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.correlations) || {};\n\n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n\n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          line: {\n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          pie: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          scatter: {\n            x: numericColumns[0] || defaultXAxis,\n            y: numericColumns[1] || numericColumns[0] || defaultYAxis\n          }\n        };\n\n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        setAnalysis({\n          rowCount: ((_analysisData$analysi2 = analysisData.analysis.summary) === null || _analysisData$analysi2 === void 0 ? void 0 : _analysisData$analysi2.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart - Good for comparing values across categories',\n            reasoning: 'Based on data structure',\n            confidence: 85,\n            xAxis: recommendedAxes.bar.x,\n            yAxis: recommendedAxes.bar.y\n          }, {\n            type: 'line',\n            description: 'Line Chart - Best for showing trends over time or continuous data',\n            reasoning: 'Good for trends over time',\n            confidence: 75,\n            xAxis: recommendedAxes.line.x,\n            yAxis: recommendedAxes.line.y\n          }, {\n            type: 'pie',\n            description: 'Pie Chart - Excellent for showing proportions of a whole',\n            reasoning: 'Good for showing proportions',\n            confidence: 65,\n            xAxis: recommendedAxes.pie.x,\n            yAxis: recommendedAxes.pie.y\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot - Ideal for showing correlation between variables',\n            reasoning: 'Good for showing correlations',\n            confidence: 60,\n            xAxis: recommendedAxes.scatter.x,\n            yAxis: recommendedAxes.scatter.y\n          }]\n        });\n\n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n\n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n\n    // Close the file selection dialog\n    setOpenDialog(false);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Custom Chart: ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile,\n        isAIRecommended: false\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(prevCharts => {\n      // Maintain existing AI-recommended charts if any\n      const aiCharts = prevCharts.filter(chart => chart.isAIRecommended);\n      return [...aiCharts, ...previewData];\n    });\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n\n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      const chartKey = chart.isAIRecommended ? chart.chartType : `custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`;\n\n      // Schedule creation of chart instance after DOM update\n      setTimeout(() => {\n        if (chartPreviewRefs.current[chartKey]) {\n          createChartInstance(chartKey, chart, newInstances);\n        }\n      }, 100);\n    });\n\n    // Don't automatically update existing charts - this was causing duplicate canvas issues\n\n    setChartPreviewInstances(newInstances);\n  };\n  const createChartInstance = async (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n      delete instancesObject[chartKey];\n    }\n\n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n\n    // Clear any existing Chart instances attached to this canvas\n    const existingChart = Chart.getChart(canvas);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Attempt to fetch real data if possible\n    let chartData = {\n      labels: ['Loading...'],\n      datasets: [{\n        label: chart.yAxis || 'Value',\n        data: [0],\n        backgroundColor: theme.palette.primary.main\n      }]\n    };\n    try {\n      // Fetch chart data from backend\n      if (chart.fileId && chart.xAxis && chart.yAxis) {\n        const response = await fetch(`/api/data/chart?fileId=${chart.fileId}&xAxis=${chart.xAxis}&yAxis=${chart.yAxis}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.success && data.chartData) {\n            // Format the data based on chart type\n            const backgroundColor = ['#1976d2',\n            // Blue (Primary)\n            '#9c27b0',\n            // Purple\n            '#2e7d32',\n            // Green\n            '#ed6c02',\n            // Orange\n            '#d32f2f',\n            // Red\n            '#0288d1',\n            // Light Blue\n            '#388e3c',\n            // Light Green\n            '#f57c00',\n            // Deep Orange\n            '#512da8',\n            // Deep Purple\n            '#00796b' // Teal\n            ];\n\n            // Process data based on chart type\n            if (chart.chartType === 'pie') {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: backgroundColor,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n                  borderWidth: 1\n                }]\n              };\n            } else {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: chart.chartType === 'bar' ? backgroundColor : backgroundColor[0],\n                  borderColor: chart.chartType === 'line' || chart.chartType === 'scatter' ? backgroundColor[0] : undefined,\n                  borderWidth: chart.chartType === 'line' ? 2 : 1,\n                  pointBackgroundColor: chart.chartType === 'scatter' || chart.chartType === 'line' ? backgroundColor[0] : undefined,\n                  pointRadius: chart.chartType === 'scatter' ? 5 : chart.chartType === 'line' ? 3 : 0,\n                  fill: chart.chartType === 'line' ? false : undefined\n                }]\n              };\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n      // Use default data if real data fetch fails\n      chartData = {\n        labels: ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'],\n        datasets: [{\n          label: chart.yAxis || 'Value',\n          data: [65, 59, 80, 81, 56],\n          backgroundColor: [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.success.main, theme.palette.warning.main, theme.palette.info.main]\n        }]\n      };\n    }\n\n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000\n      },\n      plugins: {\n        legend: {\n          position: chart.chartType === 'pie' ? 'right' : 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: chart.chartType === 'pie' ? undefined : {\n        x: {\n          title: {\n            display: true,\n            text: chart.xAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: chart.yAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          beginAtZero: true\n        }\n      }\n    };\n    try {\n      // Create the chart instance\n      const chartInstance = new Chart(ctx, {\n        type: chart.chartType,\n        data: chartData,\n        options: options\n      });\n\n      // Store the instance\n      instancesObject[chartKey] = chartInstance;\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n  const handleSaveChart = async chart => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n\n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n\n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        console.log(\"Chart image saved locally\");\n\n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n\n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully to your account!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4;\n    if (!chartContainerRef.current || !visualization) return;\n\n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.xAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : (_visualization$config4 = _visualization$config3.yAxis) === null || _visualization$config4 === void 0 ? void 0 : _visualization$config4.label) || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    try {\n      if (chartType === 'scatter') {\n        var _visualization$config5, _visualization$config6;\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : (_visualization$config6 = _visualization$config5.yAxis) === null || _visualization$config6 === void 0 ? void 0 : _visualization$config6.label) || visualization.yAxis || 'Value',\n            data: [{\n              x: 20,\n              y: 45\n            }, {\n              x: 25,\n              y: 55\n            }, {\n              x: 30,\n              y: 65\n            }, {\n              x: 35,\n              y: 75\n            }, {\n              x: 40,\n              y: 70\n            }, {\n              x: 45,\n              y: 60\n            }],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9\n          }]\n        };\n      } else if (chartType === 'pie') {\n        var _visualization$config7, _visualization$config8;\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config7 = visualization.config) === null || _visualization$config7 === void 0 ? void 0 : (_visualization$config8 = _visualization$config7.yAxis) === null || _visualization$config8 === void 0 ? void 0 : _visualization$config8.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        var _visualization$config9, _visualization$config10;\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: ((_visualization$config9 = visualization.config) === null || _visualization$config9 === void 0 ? void 0 : (_visualization$config10 = _visualization$config9.yAxis) === null || _visualization$config10 === void 0 ? void 0 : _visualization$config10.label) || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)'],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    } else {\n      // Clear storage when there are no preview charts\n      sessionStorage.removeItem('previewCharts');\n      sessionStorage.removeItem('previewFile');\n    }\n  }, [previewCharts, previewFile]);\n\n  // Restore saved charts and check file validity\n  useEffect(() => {\n    const restoreAndValidateCharts = async () => {\n      const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n      const savedPreviewFile = sessionStorage.getItem('previewFile');\n      if (savedPreviewCharts && savedPreviewFile) {\n        try {\n          const parsedFile = JSON.parse(savedPreviewFile);\n          const parsedCharts = JSON.parse(savedPreviewCharts);\n\n          // Check if the file still exists\n          const response = await fetch(`/api/files/${parsedFile._id}`);\n          if (!response.ok) {\n            // File doesn't exist anymore, but still show visualizations with warning\n            console.log('Saved file no longer exists, showing warning');\n            setPreviewFile(parsedFile);\n            setPreviewCharts(parsedCharts);\n            setFileNotFound(true);\n          } else {\n            // File exists, restore visualizations\n            setPreviewFile(parsedFile);\n            setPreviewCharts(parsedCharts);\n            setFileNotFound(false);\n          }\n\n          // Schedule rendering after component mounts\n          setTimeout(() => {\n            renderPreviewCharts(parsedCharts);\n          }, 300);\n        } catch (error) {\n          console.error('Error restoring saved charts:', error);\n          // Clear invalid data\n          sessionStorage.removeItem('previewCharts');\n          sessionStorage.removeItem('previewFile');\n        }\n      }\n    };\n    restoreAndValidateCharts();\n  }, []);\n\n  // Update UI to show file not found warning\n  useEffect(() => {\n    const validateExistingPreviewFile = async () => {\n      // Check if the preview file still exists\n      if (previewFile && previewFile._id) {\n        try {\n          const response = await fetch(`/api/files/${previewFile._id}`);\n          if (!response.ok) {\n            // File doesn't exist anymore, show warning but keep visualizations\n            console.log('Preview file no longer exists, showing warning');\n            setFileNotFound(true);\n          } else {\n            setFileNotFound(false);\n          }\n        } catch (error) {\n          console.error('Error checking file existence:', error);\n          setFileNotFound(true);\n        }\n      }\n    };\n    if (previewFile) {\n      validateExistingPreviewFile();\n    } else {\n      setFileNotFound(false);\n    }\n  }, [previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    var _analysis$visualizati;\n    if (!(analysis !== null && analysis !== void 0 && (_analysis$visualizati = analysis.visualizationSuggestions) !== null && _analysis$visualizati !== void 0 && _analysis$visualizati.length)) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Recommended Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: analysis.visualizationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              },\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            onClick: () => {\n              setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n              setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n              handleGenerateCharts();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  flexGrow: 1\n                },\n                children: [suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1), \" Chart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${suggestion.confidence}% match`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 1\n              },\n              children: [suggestion.type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#1976d2'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 49\n              }, this), suggestion.type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#2e7d32'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 50\n              }, this), suggestion.type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#ed6c02'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 49\n              }, this), suggestion.type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#9c27b0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 7\n    }, this);\n  };\n\n  // New function to clear all visualizations\n  const handleClearVisualizations = () => {\n    // Clean up chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    setPreviewFile(null);\n\n    // Also clear from session storage\n    sessionStorage.removeItem('previewCharts');\n    sessionStorage.removeItem('previewFile');\n\n    // Show a brief confirmation\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Visualizations\",\n        subtitle: \"Create and manage your data visualizations\",\n        action: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 30\n            }, this),\n            onClick: handleClearVisualizations,\n            children: \"New Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1203,\n              columnNumber: 28\n            }, this),\n            onClick: () => setOpenDialog(true),\n            children: \"Create Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1215,\n        columnNumber: 11\n      }, this), fileNotFound && previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        sx: {\n          mb: 3\n        },\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleClearVisualizations,\n          children: \"Clear Visualizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 15\n        }, this),\n        children: [\"The file \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: previewFile === null || previewFile === void 0 ? void 0 : previewFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 22\n        }, this), \" used to generate these visualizations has been deleted. You can still view the charts, but you won't be able to update them.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1222,\n        columnNumber: 11\n      }, this), !fileNotFound && previewCharts.length > 0 && previewFile && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mb: 3\n          },\n          action: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            size: \"small\",\n            onClick: handleClearVisualizations,\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 17\n          }, this),\n          children: [\"Showing visualizations for file: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: previewFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1255,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            color: \"primary\",\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"AI Recommended Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [\"Based on your data structure, here are the most effective visualizations for \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => chart.isAIRecommended).map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1303,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${chart.confidence}% match`,\n                  color: chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default',\n                  size: \"small\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: 'white',\n                    bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1306,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1295,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: chart.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1313,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[chart.chartType] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1317,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1323,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 19\n            }, this)\n          }, chart.chartType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 28\n            }, this),\n            onClick: () => {\n              setOpenDialog(true);\n              setAxisSelectionOpen(true);\n            },\n            children: \"Create Custom Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Custom Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: [chart.yAxis, \" by \", chart.xAxis]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1394,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1398,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1397,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1404,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1403,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1372,\n              columnNumber: 19\n            }, this)\n          }, `custom-${chart.chartType}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 11\n      }, this), previewCharts.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          width: '100%',\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            width: 80,\n            height: 80,\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: \"No visualizations yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          align: \"center\",\n          sx: {\n            maxWidth: 400,\n            mb: 4\n          },\n          children: \"Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1447,\n            columnNumber: 26\n          }, this),\n          onClick: handleCreateClick,\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 11\n      }, this), visualizations.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3\n          },\n          children: \"Saved Visualizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: visualizations.map(viz => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: viz.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1482,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1474,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: viz.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1486,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`viz-${viz._id}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1490,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1489,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleViewVisualization(viz),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1496,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1495,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1464,\n              columnNumber: 19\n            }, this)\n          }, viz._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1463,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1457,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: axisSelectionOpen ? 'Create Custom Visualization' : 'Create Visualization'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            mt: 1,\n            color: 'text.secondary'\n          },\n          children: axisSelectionOpen ? 'Choose a file and configure custom chart settings:' : 'Choose a file to analyze and visualize:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 11\n        }, this), !axisSelectionOpen && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"When you select a file, our AI will automatically generate the best visualizations based on your data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1543,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1542,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            p: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1551,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Analyzing your data and generating recommendations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1550,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            overflow: 'hidden',\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => {\n              if (axisSelectionOpen) {\n                // If in custom chart mode, just select the file but don't auto-generate\n                setSelectedFile(file);\n              } else {\n                // Otherwise, trigger AI analysis\n                handleFileSelect(file);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1588,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1587,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"medium\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1591,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: file.type.split('/')[1].toUpperCase(),\n                  color: file.type.includes('csv') ? 'success' : file.type.includes('json') ? 'info' : 'primary',\n                  sx: {\n                    mr: 1,\n                    height: 20,\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1594,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(file.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1600,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1593,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1590,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1565,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1618,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1611,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select Data for Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'No file selected',\n          size: \"small\",\n          color: \"default\",\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1664,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1671,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1670,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1688,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1686,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1695,\n                columnNumber: 25\n              }, this),\n              sx: {\n                fontWeight: 'medium'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1692,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1675,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1700,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1706,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 0,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    height: '56px',\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select X-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1746,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1750,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1716,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1709,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1705,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1757,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 0,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    height: '56px',\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select Y-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1797,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1801,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1767,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1760,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1756,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1704,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1662,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1818,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1827,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1625,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden',\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1852,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1860,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1859,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1867,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1868,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1873,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1879,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1883,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1886,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1884,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1898,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1895,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1872,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1863,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1858,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1856,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1838,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1927,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1934,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1935,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1933,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1954,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1955,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1953,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1974,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)' : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1998,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1999,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2000,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2001,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2002,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1977,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1975,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1973,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1932,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1930,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2013,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2019,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2016,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2012,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1914,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2038,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2043,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2044,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2042,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2048,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2041,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2053,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2056,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2052,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2027,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1184,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"N8cW42ZoPsnWsgi88Y62VlhMY5Q=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","Paper","Container","Select","MenuItem","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizations","_s","_analysis$columns","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","fileNotFound","setFileNotFound","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","_analysisData$analysi2","columnTypes","Object","keys","basicAnalysis","forEach","column","type","dateColumns","filter","col","numericColumns","categoricalColumns","correlations","advancedAnalysis","defaultXAxis","defaultYAxis","recommendedAxes","bar","x","y","line","pie","scatter","length","correlationPairs","entries","sort","a","b","Math","abs","bestCorrelationPair","split","rowCount","summary","totalRows","columns","visualizationSuggestions","description","reasoning","confidence","xAxis","yAxis","generateAIRecommendedCharts","previewData","chartType","push","name","charAt","toUpperCase","slice","fileId","isAIRecommended","setTimeout","renderPreviewCharts","handleCreateClick","handleCloseDialog","handleGenerateCharts","suggestion","find","s","prevCharts","aiCharts","chart","charts","values","instance","destroy","newInstances","chartKey","current","createChartInstance","instancesObject","canvas","existingChart","getChart","ctx","getContext","chartData","labels","datasets","label","backgroundColor","palette","primary","main","borderColor","mode","borderWidth","undefined","pointBackgroundColor","pointRadius","fill","secondary","warning","info","options","responsive","maintainAspectRatio","animation","duration","plugins","legend","position","color","text","font","size","tooltip","titleColor","bodyColor","scales","display","ticks","grid","beginAtZero","handleSaveChart","canvasRef","imageUrl","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","alert","saveToServer","confirm","config","field","subtitle","Date","toLocaleDateString","method","headers","JSON","stringify","isAIGenerated","message","result","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","variant","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","family","typography","fontFamily","weight","padding","_visualization$config5","_visualization$config6","pointHoverRadius","_visualization$config7","_visualization$config8","_visualization$config9","_visualization$config10","tension","newChart","sessionStorage","setItem","removeItem","restoreAndValidateCharts","savedPreviewCharts","getItem","savedPreviewFile","parsedFile","parse","parsedCharts","validateExistingPreviewFile","renderRecommendedVisualizations","_analysis$visualizati","mb","gutterBottom","container","spacing","map","index","sm","md","p","cursor","transition","transform","boxShadow","bgcolor","border","onClick","alignItems","flexGrow","height","justifyContent","handleClearVisualizations","maxWidth","py","action","gap","startIcon","severity","borderRadius","mr","component","paragraph","backgroundImage","flexDirection","overflow","fontWeight","px","ref","el","style","fullWidth","open","onClose","PaperProps","borderBottom","button","divider","includes","toFixed","borderTop","icon","onChange","displayEmpty","MenuProps","disabled","pt","placeholder","rows","flexWrap","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Divider,\n  Alert,\n  IconButton,\n  useTheme,\n  CircularProgress,\n  Paper,\n  Container,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport {\n  BarChart as ChartIcon,\n  Add as AddIcon,\n  Timeline as TimelineIcon,\n  BubbleChart as ScatterIcon,\n  ShowChart as LineIcon,\n  PieChart as PieIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\n\nfunction Visualizations() {\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  const [fileNotFound, setFileNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = async (file) => {\n    // Clear existing preview charts when selecting a new file\n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    \n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    \n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      \n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n      \n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n        \n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n        \n        // Find correlations between numeric columns\n        const correlations = analysisData.analysis.advancedAnalysis?.correlations || {};\n        \n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n        \n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          line: { \n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          pie: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          scatter: { \n            x: numericColumns[0] || defaultXAxis, \n            y: numericColumns[1] || numericColumns[0] || defaultYAxis \n          }\n        };\n        \n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        \n        setAnalysis({\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [\n            {\n              type: 'bar',\n              description: 'Bar Chart - Good for comparing values across categories',\n              reasoning: 'Based on data structure',\n              confidence: 85,\n              xAxis: recommendedAxes.bar.x,\n              yAxis: recommendedAxes.bar.y\n            },\n            {\n              type: 'line',\n              description: 'Line Chart - Best for showing trends over time or continuous data',\n              reasoning: 'Good for trends over time',\n              confidence: 75,\n              xAxis: recommendedAxes.line.x,\n              yAxis: recommendedAxes.line.y\n            },\n            {\n              type: 'pie',\n              description: 'Pie Chart - Excellent for showing proportions of a whole',\n              reasoning: 'Good for showing proportions',\n              confidence: 65,\n              xAxis: recommendedAxes.pie.x,\n              yAxis: recommendedAxes.pie.y\n            },\n            {\n              type: 'scatter',\n              description: 'Scatter Plot - Ideal for showing correlation between variables',\n              reasoning: 'Good for showing correlations',\n              confidence: 60,\n              xAxis: recommendedAxes.scatter.x,\n              yAxis: recommendedAxes.scatter.y\n            }\n          ]\n        });\n        \n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n    \n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      \n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    \n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n    \n    // Close the file selection dialog\n    setOpenDialog(false);\n    \n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n    \n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n    \n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      \n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Custom Chart: ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile,\n        isAIRecommended: false\n      });\n    });\n    \n    setPreviewFile(selectedFile);\n    setPreviewCharts(prevCharts => {\n      // Maintain existing AI-recommended charts if any\n      const aiCharts = prevCharts.filter(chart => chart.isAIRecommended);\n      return [...aiCharts, ...previewData];\n    });\n    \n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n\n  const renderPreviewCharts = (charts) => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    \n    const newInstances = {};\n    \n    // Create chart instances for each chart type\n    charts.forEach(chart => {\n      const chartKey = chart.isAIRecommended ? \n        chart.chartType : \n        `custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`;\n      \n      // Schedule creation of chart instance after DOM update\n      setTimeout(() => {\n        if (chartPreviewRefs.current[chartKey]) {\n          createChartInstance(chartKey, chart, newInstances);\n        }\n      }, 100);\n    });\n    \n    // Don't automatically update existing charts - this was causing duplicate canvas issues\n    \n    setChartPreviewInstances(newInstances);\n  };\n  \n  const createChartInstance = async (chartKey, chart, instancesObject) => {\n    // Destroy existing chart if any\n    if (instancesObject[chartKey]) {\n      instancesObject[chartKey].destroy();\n      delete instancesObject[chartKey];\n    }\n    \n    // Get the canvas element\n    const canvas = chartPreviewRefs.current[chartKey];\n    if (!canvas) return;\n    \n    // Clear any existing Chart instances attached to this canvas\n    const existingChart = Chart.getChart(canvas);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    // Attempt to fetch real data if possible\n    let chartData = {\n      labels: ['Loading...'],\n      datasets: [{\n        label: chart.yAxis || 'Value',\n        data: [0],\n        backgroundColor: theme.palette.primary.main\n      }]\n    };\n    \n    try {\n      // Fetch chart data from backend\n      if (chart.fileId && chart.xAxis && chart.yAxis) {\n        const response = await fetch(\n          `/api/data/chart?fileId=${chart.fileId}&xAxis=${chart.xAxis}&yAxis=${chart.yAxis}`\n        );\n        \n        if (response.ok) {\n          const data = await response.json();\n          \n          if (data.success && data.chartData) {\n            // Format the data based on chart type\n            const backgroundColor = [\n              '#1976d2', // Blue (Primary)\n              '#9c27b0', // Purple\n              '#2e7d32', // Green\n              '#ed6c02', // Orange\n              '#d32f2f', // Red\n              '#0288d1', // Light Blue\n              '#388e3c', // Light Green\n              '#f57c00', // Deep Orange\n              '#512da8', // Deep Purple\n              '#00796b', // Teal\n            ];\n            \n            // Process data based on chart type\n            if (chart.chartType === 'pie') {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: backgroundColor,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n                  borderWidth: 1\n                }]\n              };\n            } else {\n              chartData = {\n                labels: data.chartData.labels,\n                datasets: [{\n                  label: chart.yAxis,\n                  data: data.chartData.values,\n                  backgroundColor: chart.chartType === 'bar' ? backgroundColor : backgroundColor[0],\n                  borderColor: chart.chartType === 'line' || chart.chartType === 'scatter' ? backgroundColor[0] : undefined,\n                  borderWidth: chart.chartType === 'line' ? 2 : 1,\n                  pointBackgroundColor: chart.chartType === 'scatter' || chart.chartType === 'line' ? backgroundColor[0] : undefined,\n                  pointRadius: chart.chartType === 'scatter' ? 5 : chart.chartType === 'line' ? 3 : 0,\n                  fill: chart.chartType === 'line' ? false : undefined\n                }]\n              };\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n      // Use default data if real data fetch fails\n      chartData = {\n        labels: ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'],\n        datasets: [{\n          label: chart.yAxis || 'Value',\n          data: [65, 59, 80, 81, 56],\n          backgroundColor: [\n            theme.palette.primary.main,\n            theme.palette.secondary.main,\n            theme.palette.success.main,\n            theme.palette.warning.main,\n            theme.palette.info.main,\n          ]\n        }]\n      };\n    }\n    \n    // Configure the chart type and options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 1000,\n      },\n      plugins: {\n        legend: {\n          position: chart.chartType === 'pie' ? 'right' : 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1\n        }\n      },\n      scales: chart.chartType === 'pie' ? undefined : {\n        x: {\n          title: {\n            display: true,\n            text: chart.xAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: chart.yAxis,\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          },\n          beginAtZero: true\n        }\n      }\n    };\n\n    try {\n      // Create the chart instance\n      const chartInstance = new Chart(ctx, {\n        type: chart.chartType,\n        data: chartData,\n        options: options\n      });\n      \n      // Store the instance\n      instancesObject[chartKey] = chartInstance;\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  const handleSaveChart = async (chart) => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n        \n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n        \n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        \n        console.log(\"Chart image saved locally\");\n        \n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n      \n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n      \n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      \n      const result = await response.json();\n      console.log('Visualization created:', result);\n      \n      // Show success message\n      alert('Visualization saved successfully to your account!');\n      \n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n      \n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      \n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n      \n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  \n  const handleEditVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  \n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    \n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n      \n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  \n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteVisualization = async (vizId) => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      \n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Delete response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      \n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n      \n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n\n  const getVisualizationIcon = (type) => {\n    const iconSize = { fontSize: 80, opacity: 0.8 };\n    const colors = {\n      bar: '#1976d2',    // blue\n      scatter: '#9c27b0', // purple\n      line: '#2e7d32',    // green\n      pie: '#ed6c02'      // orange\n    };\n    \n    const iconColor = { color: colors[type] || colors.bar };\n    \n    switch (type) {\n      case 'bar':\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'scatter':\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'line':\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'pie':\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\n      default:\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (loading) {\n      return (\n        <Grid item xs={12}>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <LinearProgress />\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\n              Loading...\n            </Typography>\n          </Box>\n        </Grid>\n      );\n    }\n    \n    if (visualizations.length === 0) {\n      return (\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\n          </Typography>\n        </Grid>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderChart = (visualization) => {\n    if (!chartContainerRef.current || !visualization) return;\n    \n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n    \n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) return;\n\n    // Configure chart options\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n          labels: {\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily,\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: visualization.title || visualization.name || 'Chart',\n          color: theme.palette.text.primary,\n          font: {\n            family: theme.typography.fontFamily,\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        tooltip: {\n          backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n          titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n          borderWidth: 1,\n          padding: 10\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: visualization.xAxis || visualization.config?.xAxis?.label || 'X Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: visualization.yAxis || visualization.config?.yAxis?.label || 'Y Axis',\n            color: theme.palette.text.primary\n          },\n          ticks: {\n            color: theme.palette.text.secondary\n          },\n          grid: {\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    };\n\n    // Default data for different chart types\n    let data;\n    const chartType = visualization.chartType || 'bar';\n    \n    try {\n      if (chartType === 'scatter') {\n        // For scatter charts, create paired x-y coordinates with realistic data\n        data = {\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [\n              { x: 20, y: 45 },\n              { x: 25, y: 55 },\n              { x: 30, y: 65 },\n              { x: 35, y: 75 },\n              { x: 40, y: 70 },\n              { x: 45, y: 60 }\n            ],\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9,\n          }]\n        };\n      } else if (chartType === 'pie') {\n        // For pie charts\n        const labels = ['20-25', '25-30', '30-35', '35-40', '40-45', '45-50'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      } else {\n        // For bar and line charts\n        const labels = ['20', '25', '30', '35', '40', '45'];\n        data = {\n          labels: labels,\n          datasets: [{\n            label: visualization.config?.yAxis?.label || visualization.yAxis || 'Value',\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)',\n              'rgba(153, 102, 255, 0.8)',\n              'rgba(255, 159, 64, 0.8)'\n            ],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1,\n            tension: 0.1\n          }]\n        };\n      }\n      \n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      \n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Save previewCharts to sessionStorage whenever they change\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      sessionStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      \n      if (previewFile) {\n        sessionStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    } else {\n      // Clear storage when there are no preview charts\n      sessionStorage.removeItem('previewCharts');\n      sessionStorage.removeItem('previewFile');\n    }\n  }, [previewCharts, previewFile]);\n  \n  // Restore saved charts and check file validity\n  useEffect(() => {\n    const restoreAndValidateCharts = async () => {\n      const savedPreviewCharts = sessionStorage.getItem('previewCharts');\n      const savedPreviewFile = sessionStorage.getItem('previewFile');\n      \n      if (savedPreviewCharts && savedPreviewFile) {\n        try {\n          const parsedFile = JSON.parse(savedPreviewFile);\n          const parsedCharts = JSON.parse(savedPreviewCharts);\n          \n          // Check if the file still exists\n          const response = await fetch(`/api/files/${parsedFile._id}`);\n          if (!response.ok) {\n            // File doesn't exist anymore, but still show visualizations with warning\n            console.log('Saved file no longer exists, showing warning');\n            setPreviewFile(parsedFile);\n            setPreviewCharts(parsedCharts);\n            setFileNotFound(true);\n          } else {\n            // File exists, restore visualizations\n            setPreviewFile(parsedFile);\n            setPreviewCharts(parsedCharts);\n            setFileNotFound(false);\n          }\n          \n          // Schedule rendering after component mounts\n          setTimeout(() => {\n            renderPreviewCharts(parsedCharts);\n          }, 300);\n        } catch (error) {\n          console.error('Error restoring saved charts:', error);\n          // Clear invalid data\n          sessionStorage.removeItem('previewCharts');\n          sessionStorage.removeItem('previewFile');\n        }\n      }\n    };\n    \n    restoreAndValidateCharts();\n  }, []);\n\n  // Update UI to show file not found warning\n  useEffect(() => {\n    const validateExistingPreviewFile = async () => {\n      // Check if the preview file still exists\n      if (previewFile && previewFile._id) {\n        try {\n          const response = await fetch(`/api/files/${previewFile._id}`);\n          if (!response.ok) {\n            // File doesn't exist anymore, show warning but keep visualizations\n            console.log('Preview file no longer exists, showing warning');\n            setFileNotFound(true);\n          } else {\n            setFileNotFound(false);\n          }\n        } catch (error) {\n          console.error('Error checking file existence:', error);\n          setFileNotFound(true);\n        }\n      }\n    };\n    \n    if (previewFile) {\n      validateExistingPreviewFile();\n    } else {\n      setFileNotFound(false);\n    }\n  }, [previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    if (!analysis?.visualizationSuggestions?.length) return null;\n\n  return (\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Recommended Visualizations\n        </Typography>\n        <Grid container spacing={2}>\n          {analysis.visualizationSuggestions.map((suggestion, index) => (\n            <Grid item xs={12} sm={6} md={3} key={index}>\n              <Paper\n                sx={{\n                  p: 2,\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4,\n                  },\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                  border: 1,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n                }}\n                onClick={() => {\n                  setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n                  setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n                  handleGenerateCharts();\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\n                    {suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1)} Chart\n                  </Typography>\n                  <Chip\n                    label={`${suggestion.confidence}% match`}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Box sx={{ height: 100, display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>\n                  {suggestion.type === 'bar' && <ChartIcon sx={{ fontSize: 50, color: '#1976d2' }} />}\n                  {suggestion.type === 'line' && <LineIcon sx={{ fontSize: 50, color: '#2e7d32' }} />}\n                  {suggestion.type === 'pie' && <PieIcon sx={{ fontSize: 50, color: '#ed6c02' }} />}\n                  {suggestion.type === 'scatter' && <ScatterIcon sx={{ fontSize: 50, color: '#9c27b0' }} />}\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {suggestion.description}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  // New function to clear all visualizations\n  const handleClearVisualizations = () => {\n    // Clean up chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    \n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    setPreviewFile(null);\n    \n    // Also clear from session storage\n    sessionStorage.removeItem('previewCharts');\n    sessionStorage.removeItem('previewFile');\n    \n    // Show a brief confirmation\n    setError(null);\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ py: 4 }}>\n        <PageHeader\n          title=\"Visualizations\"\n          subtitle=\"Create and manage your data visualizations\"\n          action={\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              {previewCharts.length > 0 && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={handleClearVisualizations}\n                >\n                  New Visualization\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                onClick={() => setOpenDialog(true)}\n              >\n                Create Visualization\n              </Button>\n            </Box>\n          }\n        />\n\n        {loading && <LinearProgress sx={{ mb: 2 }} />}\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Show file not found message when appropriate */}\n        {fileNotFound && previewCharts.length > 0 && (\n          <Alert \n            severity=\"warning\" \n            sx={{ mb: 3 }}\n            action={\n              <Button\n                color=\"inherit\"\n                size=\"small\"\n                onClick={handleClearVisualizations}\n              >\n                Clear Visualizations\n              </Button>\n            }\n          >\n            The file <strong>{previewFile?.name}</strong> used to generate these visualizations has been deleted.\n            You can still view the charts, but you won't be able to update them.\n          </Alert>\n        )}\n        \n        {!fileNotFound && previewCharts.length > 0 && previewFile && (\n          <Box>\n            <Alert \n              severity=\"info\" \n              sx={{ mb: 3 }}\n              action={\n                <Button\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={handleClearVisualizations}\n                >\n                  Clear All\n                </Button>\n              }\n            >\n              Showing visualizations for file: <strong>{previewFile.name}</strong>\n            </Alert>\n          </Box>\n        )}\n\n        {/* AI Recommended Visualizations Section */}\n        {previewCharts.filter(chart => chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <CheckCircleIcon color=\"primary\" sx={{ mr: 1 }} />\n              <Typography variant=\"h5\" component=\"h2\">\n                AI Recommended Visualizations\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n              Based on your data structure, here are the most effective visualizations for {previewFile?.name}\n            </Typography>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => chart.isAIRecommended).map((chart) => (\n                <Grid item xs={12} sm={6} key={chart.chartType}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                      <Chip \n                        label={`${chart.confidence}% match`} \n                        color={chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default'} \n                        size=\"small\"\n                        sx={{ fontWeight: 'bold', color: 'white', bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575' }}\n                      />\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[chart.chartType] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n            \n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n              <Button \n                variant=\"outlined\" \n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  setOpenDialog(true);\n                  setAxisSelectionOpen(true);\n                }}\n              >\n                Create Custom Chart\n              </Button>\n            </Box>\n          </Paper>\n        )}\n        \n        {/* Custom Visualizations Section */}\n        {previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <Typography variant=\"h5\" component=\"h2\">\n                Custom Visualizations\n              </Typography>\n            </Box>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => (\n                <Grid item xs={12} sm={6} key={`custom-${chart.chartType}-${index}`}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.yAxis} by {chart.xAxis}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        )}\n\n        {/* Placeholder when no visualizations are available */}\n        {previewCharts.length === 0 && !loading && (\n          <Box \n            sx={{ \n              mt: 4, \n              p: 4, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center',\n              height: '100%',\n              width: '100%',\n              borderRadius: 2,\n              bgcolor: 'background.paper',\n              backgroundImage: 'none',\n              boxShadow: 1\n            }}\n          >\n            <ChartIcon sx={{ width: 80, height: 80, color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)', mb: 2 }} />\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              No visualizations yet\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ maxWidth: 400, mb: 4 }}>\n              Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<AddIcon />}\n              onClick={handleCreateClick}\n            >\n              Create Visualization\n            </Button>\n          </Box>\n        )}\n\n        {/* Saved Visualizations Section */}\n        {visualizations.length > 0 && (\n          <Box sx={{ mt: 6 }}>\n            <Typography variant=\"h5\" sx={{ mb: 3 }}>\n              Saved Visualizations\n            </Typography>\n            <Grid container spacing={3}>\n              {visualizations.map((viz) => (\n                <Grid item xs={12} sm={6} key={viz._id}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {viz.name}\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {viz.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`viz-${viz._id}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleViewVisualization(viz)}\n                      >\n                        View\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        )}\n      </Box>\n\n      {/* File Selection Dialog */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          {axisSelectionOpen ? 'Create Custom Visualization' : 'Create Visualization'}\n        </DialogTitle>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 1, color: 'text.secondary' }}>\n            {axisSelectionOpen \n              ? 'Choose a file and configure custom chart settings:' \n              : 'Choose a file to analyze and visualize:'}\n          </Typography>\n          \n          {!axisSelectionOpen && (\n            <Alert severity=\"info\" sx={{ mb: 3 }}>\n              <Typography variant=\"body2\">\n                When you select a file, our AI will automatically generate the best visualizations based on your data.\n              </Typography>\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n              <CircularProgress sx={{ mb: 2 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Analyzing your data and generating recommendations...\n              </Typography>\n            </Box>\n          ) : (\n            <List sx={{ \n              borderRadius: 1, \n              border: '1px solid',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)', \n              overflow: 'hidden',\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n            }}>\n              {files.map((file) => (\n                <ListItem\n                  key={file._id}\n                  button\n                  divider\n                  sx={{ \n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \n                    '&:hover': {\n                      bgcolor: theme.palette.mode === 'dark' \n                        ? 'rgba(255, 255, 255, 0.1)' \n                        : 'rgba(25, 118, 210, 0.08)'\n                    }\n                  }}\n                  onClick={() => {\n                    if (axisSelectionOpen) {\n                      // If in custom chart mode, just select the file but don't auto-generate\n                      setSelectedFile(file);\n                    } else {\n                      // Otherwise, trigger AI analysis\n                      handleFileSelect(file);\n                    }\n                  }}\n                >\n                  <ListItemIcon>\n                    <ChartIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={<Typography fontWeight=\"medium\">{file.name}</Typography>}\n                    secondary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                        <Chip \n                          size=\"small\" \n                          label={file.type.split('/')[1].toUpperCase()} \n                          color={file.type.includes('csv') ? 'success' : file.type.includes('json') ? 'info' : 'primary'}\n                          sx={{ mr: 1, height: 20, fontSize: '0.7rem' }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {(file.size / 1024).toFixed(2)} KB\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* Axis Selection Dialog */}\n      <Dialog\n        open={axisSelectionOpen}\n        onClose={() => {\n          setAxisSelectionOpen(false);\n          setError(null);\n        }}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          py: 2, \n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Typography variant=\"h6\">\n            Select Data for Visualization\n          </Typography>\n          <Chip \n            label={selectedFile?.name || 'No file selected'} \n            size=\"small\" \n            color=\"default\"\n            sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\n          />\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Box sx={{ \n                mb: 3, \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)', \n                borderRadius: 1,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                border: 1,\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }}>\n                <Box>\n                  <Typography variant=\"h6\">Data Summary</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\n                  </Typography>\n                </Box>\n                <Chip \n                  label=\"Ready for visualization\" \n                  color=\"success\" \n                  icon={<CheckCircleIcon />} \n                  sx={{ fontWeight: 'medium' }}\n                />\n              </Box>\n              \n              <Typography variant=\"h6\" gutterBottom>\n                Select Data Axes\n              </Typography>\n              \n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    X-Axis (Categories)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \n                    borderRadius: 1, \n                    p: 0,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedXAxis}\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        height: '56px',\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select X-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    Y-Axis (Values)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                    borderRadius: 1,\n                    p: 0,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedYAxis}\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        height: '56px',\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        Select Y-Axis Column\n                      </MenuItem>\n                      {analysis?.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                    </Select>\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end', \n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setAxisSelectionOpen(false);\n              setError(null);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={!selectedXAxis || !selectedYAxis || loading}\n            onClick={handleGenerateCharts}\n          >\n            Generate Charts\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* View Visualization Dialog */}\n      <Dialog\n        open={openViewDialog}\n        onClose={handleCloseViewDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden',\n            bgcolor: 'background.paper',\n          }\n        }}\n      >\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\n          <Typography variant=\"h5\">\n            {currentVisualization?.name || 'View Visualization'}\n          </Typography>\n        </Box>\n        <DialogContent sx={{ p: 0 }}>\n          {currentVisualization && (\n            <Box>\n              <Box sx={{ height: 400, p: 3 }}>\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\n              </Box>\n              \n              <Box sx={{ \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5' \n              }}>\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\n                </Typography>\n                \n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n                  <Chip \n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\n                    color=\"primary\"\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\n                    sx={{ mr: 1 }}\n                  />\n                  <Chip \n                    label={`${currentVisualization.confidence || 90}% confidence`}\n                    color=\"success\"\n                  />\n                  <Box sx={{ flexGrow: 1 }} />\n                  <Button \n                    variant=\"outlined\" \n                    startIcon={<EditIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleEditVisualization(currentVisualization);\n                    }}\n                    sx={{ mr: 1 }}\n                  >\n                    Edit\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleDeleteVisualization(currentVisualization._id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n      </Dialog>\n      \n      {/* Edit Visualization Dialog - simplified */}\n      <Dialog\n        open={openEditDialog}\n        onClose={handleCloseEditDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\n          Edit Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3, mt: 2 }}>\n          {currentVisualization && (\n            <Box sx={{ pt: 1 }}>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={currentVisualization.name || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter a descriptive name\"\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\n                <textarea\n                  name=\"description\"\n                  value={currentVisualization.description || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe what insights this visualization provides\"\n                  rows={3}\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\n                    <Box \n                      key={type}\n                      onClick={() => setCurrentVisualization({\n                        ...currentVisualization,\n                        chartType: type\n                      })}\n                      sx={{ \n                        border: '2px solid',\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                        borderRadius: 2,\n                        p: 2,\n                        width: '110px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                        bgcolor: currentVisualization.chartType === type \n                          ? (theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)') \n                          : (theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent')\n                      }}\n                    >\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      <Typography variant=\"body2\">\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUpdateVisualization}\n            startIcon={<EditIcon />}\n          >\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={openDeleteDialog}\n        onClose={handleCancelDelete}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\n          Delete Visualization\n        </DialogTitle>\n        <DialogContent sx={{ mt: 2, p: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\n            <Typography variant=\"h6\">\n              Are you sure?\n            </Typography>\n          </Box>\n          <Typography>\n            This visualization will be permanently deleted. This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}