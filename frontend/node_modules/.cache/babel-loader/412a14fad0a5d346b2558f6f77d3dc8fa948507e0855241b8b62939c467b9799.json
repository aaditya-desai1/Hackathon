{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\test\\\\frontend\\\\src\\\\pages\\\\FileManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Paper, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Snackbar, Alert } from '@mui/material';\nimport FileUploader from '../components/file/FileUploader';\nimport FileList from '../components/file/FileList';\nimport FileViewer from '../components/file/FileViewer';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingState from '../components/common/LoadingState';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileManager() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileData, setFileData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showUploader, setShowUploader] = useState(false);\n  const [deleteConfirm, setDeleteConfirm] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  useEffect(() => {\n    // Load files from localStorage on component mount\n    const savedFiles = localStorage.getItem('files');\n    if (savedFiles) {\n      try {\n        setFiles(JSON.parse(savedFiles));\n      } catch (error) {\n        console.error('Error loading files from localStorage:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    // Save files to localStorage whenever files state changes\n    if (files.length > 0) {\n      localStorage.setItem('files', JSON.stringify(files));\n    }\n  }, [files]);\n\n  // When a file is selected, load its data\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData(selectedFile);\n    } else {\n      setFileData(null);\n    }\n  }, [selectedFile]);\n  const loadFileData = async file => {\n    setLoading(true);\n    try {\n      // In a real app, this would be a fetch to an API\n      // For this demo, we'll simulate reading the file\n      const reader = new FileReader();\n      reader.onload = event => {\n        try {\n          // Try to parse as JSON\n          if (file.type === 'application/json') {\n            const data = JSON.parse(event.target.result);\n            setFileData(data);\n          } else if (file.type === 'text/csv') {\n            // Basic CSV parsing for demo purposes\n            const csvData = parseCSV(event.target.result);\n            setFileData(csvData);\n          } else {\n            // Just set as string for text files\n            setFileData(event.target.result);\n          }\n        } catch (error) {\n          console.error('Error parsing file data:', error);\n          setFileData(event.target.result);\n        }\n        setLoading(false);\n      };\n      reader.onerror = () => {\n        setNotification({\n          open: true,\n          message: 'Error reading file',\n          severity: 'error'\n        });\n        setLoading(false);\n      };\n      if (file.type === 'text/csv' || file.type === 'application/json' || file.type.includes('text/')) {\n        reader.readAsText(file);\n      } else {\n        // For non-text files, just display file info\n        setFileData(`Binary file: ${file.name}`);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error loading file data:', error);\n      setLoading(false);\n    }\n  };\n\n  // Basic CSV parser for demo\n  const parseCSV = csvString => {\n    const lines = csvString.split('\\n');\n    const headers = lines[0].split(',').map(header => header.trim());\n    return lines.slice(1).filter(line => line.trim() !== '').map(line => {\n      const values = line.split(',').map(value => value.trim());\n      const row = {};\n      headers.forEach((header, index) => {\n        row[header] = values[index] || '';\n      });\n      return row;\n    });\n  };\n  const handleFileUpload = async formData => {\n    try {\n      setLoading(true);\n      const file = formData.get('file');\n\n      // Check if file already exists\n      const fileExists = files.some(f => f.name === file.name);\n      if (fileExists) {\n        throw new Error('A file with this name already exists');\n      }\n\n      // In a real app, this would be an API call\n      // For this demo, just add the file to our state\n      setFiles(prevFiles => [...prevFiles, file]);\n      setNotification({\n        open: true,\n        message: 'File uploaded successfully',\n        severity: 'success'\n      });\n      setShowUploader(false);\n      setSelectedFile(file);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n  };\n  const handleDeleteFile = file => {\n    setDeleteConfirm(file);\n  };\n  const confirmDeleteFile = () => {\n    if (deleteConfirm) {\n      // Remove the file from the files array\n      setFiles(prevFiles => prevFiles.filter(f => f.name !== deleteConfirm.name || f.lastModified !== deleteConfirm.lastModified));\n\n      // If the deleted file was selected, clear the selection\n      if (selectedFile && selectedFile.name === deleteConfirm.name) {\n        setSelectedFile(null);\n      }\n      setNotification({\n        open: true,\n        message: 'File deleted successfully',\n        severity: 'success'\n      });\n      setDeleteConfirm(null);\n    }\n  };\n  const handleFileDownload = file => {\n    const url = URL.createObjectURL(file);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = file.name;\n    document.body.appendChild(a);\n    a.click();\n    URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  };\n  const handleCloseNotification = () => {\n    setNotification({\n      ...notification,\n      open: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"File Manager\",\n      icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }, this),\n      actions: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 24\n        }, this),\n        onClick: () => setShowUploader(true),\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(FileList, {\n          files: files,\n          onFileSelect: handleFileSelect,\n          onFileDelete: handleDeleteFile,\n          onFileDownload: handleFileDownload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        lg: 9,\n        children: loading ? /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          sx: {\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(LoadingState, {\n            text: \"Loading file data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FileViewer, {\n          file: selectedFile,\n          data: fileData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showUploader,\n      onClose: () => setShowUploader(false),\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          sx: {\n            mb: 2\n          },\n          children: \"Select a file to upload. Supported formats: CSV, JSON, and text files.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n          onUpload: handleFileUpload,\n          allowedTypes: ['text/csv', 'application/json', 'text/plain']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: Boolean(deleteConfirm),\n      onClose: () => setDeleteConfirm(null),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [\"Are you sure you want to delete the file \\\"\", deleteConfirm === null || deleteConfirm === void 0 ? void 0 : deleteConfirm.name, \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteConfirm(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDeleteFile,\n          color: \"error\",\n          autoFocus: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseNotification,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseNotification,\n        severity: notification.severity,\n        variant: \"filled\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(FileManager, \"b9Yx22dZCYl4nLURqPvGRYiLMgY=\");\n_c = FileManager;\nexport default FileManager;\nvar _c;\n$RefreshReg$(_c, \"FileManager\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Paper","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Snackbar","Alert","FileUploader","FileList","FileViewer","PageHeader","LoadingState","UploadFileIcon","DescriptionIcon","jsxDEV","_jsxDEV","FileManager","_s","files","setFiles","selectedFile","setSelectedFile","fileData","setFileData","loading","setLoading","showUploader","setShowUploader","deleteConfirm","setDeleteConfirm","notification","setNotification","open","message","severity","savedFiles","localStorage","getItem","JSON","parse","error","console","length","setItem","stringify","loadFileData","file","reader","FileReader","onload","event","type","data","target","result","csvData","parseCSV","onerror","includes","readAsText","name","csvString","lines","split","headers","map","header","trim","slice","filter","line","values","value","row","forEach","index","handleFileUpload","formData","get","fileExists","some","f","Error","prevFiles","success","handleFileSelect","handleDeleteFile","confirmDeleteFile","lastModified","handleFileDownload","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","handleCloseNotification","sx","p","children","title","icon","fileName","_jsxFileName","lineNumber","columnNumber","actions","variant","startIcon","onClick","container","spacing","mt","item","xs","md","lg","onFileSelect","onFileDelete","onFileDownload","text","onClose","fullWidth","maxWidth","mb","onUpload","allowedTypes","Boolean","color","autoFocus","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["E:/git_projects/test/frontend/src/pages/FileManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\nimport FileUploader from '../components/file/FileUploader';\r\nimport FileList from '../components/file/FileList';\r\nimport FileViewer from '../components/file/FileViewer';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport LoadingState from '../components/common/LoadingState';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\n\r\nfunction FileManager() {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileData, setFileData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showUploader, setShowUploader] = useState(false);\r\n  const [deleteConfirm, setDeleteConfirm] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n\r\n  useEffect(() => {\r\n    // Load files from localStorage on component mount\r\n    const savedFiles = localStorage.getItem('files');\r\n    if (savedFiles) {\r\n      try {\r\n        setFiles(JSON.parse(savedFiles));\r\n      } catch (error) {\r\n        console.error('Error loading files from localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Save files to localStorage whenever files state changes\r\n    if (files.length > 0) {\r\n      localStorage.setItem('files', JSON.stringify(files));\r\n    }\r\n  }, [files]);\r\n\r\n  // When a file is selected, load its data\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      loadFileData(selectedFile);\r\n    } else {\r\n      setFileData(null);\r\n    }\r\n  }, [selectedFile]);\r\n\r\n  const loadFileData = async (file) => {\r\n    setLoading(true);\r\n    try {\r\n      // In a real app, this would be a fetch to an API\r\n      // For this demo, we'll simulate reading the file\r\n      const reader = new FileReader();\r\n      \r\n      reader.onload = (event) => {\r\n        try {\r\n          // Try to parse as JSON\r\n          if (file.type === 'application/json') {\r\n            const data = JSON.parse(event.target.result);\r\n            setFileData(data);\r\n          } else if (file.type === 'text/csv') {\r\n            // Basic CSV parsing for demo purposes\r\n            const csvData = parseCSV(event.target.result);\r\n            setFileData(csvData);\r\n          } else {\r\n            // Just set as string for text files\r\n            setFileData(event.target.result);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing file data:', error);\r\n          setFileData(event.target.result);\r\n        }\r\n        setLoading(false);\r\n      };\r\n\r\n      reader.onerror = () => {\r\n        setNotification({\r\n          open: true,\r\n          message: 'Error reading file',\r\n          severity: 'error'\r\n        });\r\n        setLoading(false);\r\n      };\r\n\r\n      if (file.type === 'text/csv' || file.type === 'application/json' || file.type.includes('text/')) {\r\n        reader.readAsText(file);\r\n      } else {\r\n        // For non-text files, just display file info\r\n        setFileData(`Binary file: ${file.name}`);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading file data:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Basic CSV parser for demo\r\n  const parseCSV = (csvString) => {\r\n    const lines = csvString.split('\\n');\r\n    const headers = lines[0].split(',').map(header => header.trim());\r\n    \r\n    return lines.slice(1).filter(line => line.trim() !== '').map(line => {\r\n      const values = line.split(',').map(value => value.trim());\r\n      const row = {};\r\n      headers.forEach((header, index) => {\r\n        row[header] = values[index] || '';\r\n      });\r\n      return row;\r\n    });\r\n  };\r\n\r\n  const handleFileUpload = async (formData) => {\r\n    try {\r\n      setLoading(true);\r\n      const file = formData.get('file');\r\n      \r\n      // Check if file already exists\r\n      const fileExists = files.some(f => f.name === file.name);\r\n      if (fileExists) {\r\n        throw new Error('A file with this name already exists');\r\n      }\r\n\r\n      // In a real app, this would be an API call\r\n      // For this demo, just add the file to our state\r\n      setFiles(prevFiles => [...prevFiles, file]);\r\n      setNotification({\r\n        open: true,\r\n        message: 'File uploaded successfully',\r\n        severity: 'success'\r\n      });\r\n      \r\n      setShowUploader(false);\r\n      setSelectedFile(file);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (file) => {\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleDeleteFile = (file) => {\r\n    setDeleteConfirm(file);\r\n  };\r\n\r\n  const confirmDeleteFile = () => {\r\n    if (deleteConfirm) {\r\n      // Remove the file from the files array\r\n      setFiles(prevFiles => prevFiles.filter(f => \r\n        f.name !== deleteConfirm.name || f.lastModified !== deleteConfirm.lastModified\r\n      ));\r\n      \r\n      // If the deleted file was selected, clear the selection\r\n      if (selectedFile && selectedFile.name === deleteConfirm.name) {\r\n        setSelectedFile(null);\r\n      }\r\n      \r\n      setNotification({\r\n        open: true,\r\n        message: 'File deleted successfully',\r\n        severity: 'success'\r\n      });\r\n      \r\n      setDeleteConfirm(null);\r\n    }\r\n  };\r\n\r\n  const handleFileDownload = (file) => {\r\n    const url = URL.createObjectURL(file);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = file.name;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification({ ...notification, open: false });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <PageHeader \r\n        title=\"File Manager\" \r\n        icon={<DescriptionIcon />}\r\n        actions={\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<UploadFileIcon />}\r\n            onClick={() => setShowUploader(true)}\r\n          >\r\n            Upload File\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <Grid container spacing={3} sx={{ mt: 1 }}>\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <FileList \r\n            files={files}\r\n            onFileSelect={handleFileSelect}\r\n            onFileDelete={handleDeleteFile}\r\n            onFileDownload={handleFileDownload}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={8} lg={9}>\r\n          {loading ? (\r\n            <Paper variant=\"outlined\" sx={{ p: 4 }}>\r\n              <LoadingState text=\"Loading file data...\" />\r\n            </Paper>\r\n          ) : (\r\n            <FileViewer file={selectedFile} data={fileData} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* File Upload Dialog */}\r\n      <Dialog \r\n        open={showUploader} \r\n        onClose={() => setShowUploader(false)}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle>Upload File</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText sx={{ mb: 2 }}>\r\n            Select a file to upload. Supported formats: CSV, JSON, and text files.\r\n          </DialogContentText>\r\n          <FileUploader \r\n            onUpload={handleFileUpload}\r\n            allowedTypes={['text/csv', 'application/json', 'text/plain']}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={Boolean(deleteConfirm)}\r\n        onClose={() => setDeleteConfirm(null)}\r\n      >\r\n        <DialogTitle>Confirm Delete</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to delete the file \"{deleteConfirm?.name}\"? This action cannot be undone.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDeleteConfirm(null)}>Cancel</Button>\r\n          <Button onClick={confirmDeleteFile} color=\"error\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Notifications */}\r\n      <Snackbar \r\n        open={notification.open} \r\n        autoHideDuration={6000} \r\n        onClose={handleCloseNotification}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseNotification} \r\n          severity={notification.severity}\r\n          variant=\"filled\"\r\n        >\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FileManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}