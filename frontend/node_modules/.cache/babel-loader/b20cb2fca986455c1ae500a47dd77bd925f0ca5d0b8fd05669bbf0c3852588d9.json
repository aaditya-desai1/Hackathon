{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\DataVizPro\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress, Paper, Container, Select, MenuItem } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport { Chart, registerables } from 'chart.js/auto';\n\n// Register all chart components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nfunction Visualizations() {\n  _s();\n  var _analysis$columns;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  const [fileNotFound, setFileNotFound] = useState(false);\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    // Clear existing preview charts when selecting a new file\n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi, _analysisData$analysi2;\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n\n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n\n        // Find correlations between numeric columns\n        const correlations = ((_analysisData$analysi = analysisData.analysis.advancedAnalysis) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.correlations) || {};\n\n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n\n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          line: {\n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          pie: {\n            x: categoricalColumns[0] || defaultXAxis,\n            y: numericColumns[0] || defaultYAxis\n          },\n          scatter: {\n            x: numericColumns[0] || defaultXAxis,\n            y: numericColumns[1] || numericColumns[0] || defaultYAxis\n          }\n        };\n\n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        setAnalysis({\n          rowCount: ((_analysisData$analysi2 = analysisData.analysis.summary) === null || _analysisData$analysi2 === void 0 ? void 0 : _analysisData$analysi2.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart - Good for comparing values across categories',\n            reasoning: 'Based on data structure',\n            confidence: 85,\n            xAxis: recommendedAxes.bar.x,\n            yAxis: recommendedAxes.bar.y\n          }, {\n            type: 'line',\n            description: 'Line Chart - Best for showing trends over time or continuous data',\n            reasoning: 'Good for trends over time',\n            confidence: 75,\n            xAxis: recommendedAxes.line.x,\n            yAxis: recommendedAxes.line.y\n          }, {\n            type: 'pie',\n            description: 'Pie Chart - Excellent for showing proportions of a whole',\n            reasoning: 'Good for showing proportions',\n            confidence: 65,\n            xAxis: recommendedAxes.pie.x,\n            yAxis: recommendedAxes.pie.y\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot - Ideal for showing correlation between variables',\n            reasoning: 'Good for showing correlations',\n            confidence: 60,\n            xAxis: recommendedAxes.scatter.x,\n            yAxis: recommendedAxes.scatter.y\n          }]\n        });\n\n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n\n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n\n    // Close the file selection dialog\n    setOpenDialog(false);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const handleCreateClick = () => {\n    if (previewFile) {\n      // If we already have a selected file from AI recommendations, use it\n      setSelectedFile(previewFile);\n      // Skip file selection dialog and directly open axis selection\n      setAxisSelectionOpen(true);\n\n      // Make sure analysis data is available - we need to fetch it if it's missing\n      if (!analysis || !analysis.columns || analysis.columns.length === 0) {\n        console.log('Analysis data not available, fetching it now...');\n        setLoading(true);\n\n        // Fetch analysis data for the file\n        fetch(`/api/files/${previewFile._id}/analyze`).then(response => {\n          if (!response.ok) {\n            throw new Error('Failed to analyze file');\n          }\n          return response.json();\n        }).then(analysisData => {\n          console.log('Analysis fetched:', analysisData);\n          if (analysisData.success && analysisData.analysis) {\n            var _analysisData$analysi3;\n            // Extract column types from analysis\n            const columnTypes = {};\n            Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n              columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n            });\n\n            // Set the analysis data\n            setAnalysis({\n              rowCount: ((_analysisData$analysi3 = analysisData.analysis.summary) === null || _analysisData$analysi3 === void 0 ? void 0 : _analysisData$analysi3.totalRows) || 0,\n              columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n              columnTypes: columnTypes,\n              visualizationSuggestions: []\n            });\n            setError(null);\n          } else {\n            throw new Error('Invalid analysis data');\n          }\n        }).catch(err => {\n          console.error('Error fetching analysis:', err);\n          setError('Failed to analyze file. Please try again.');\n        }).finally(() => {\n          setLoading(false);\n        });\n      }\n    } else {\n      // If no file is selected yet, show the file selection dialog\n      setOpenDialog(true);\n      setSelectedXAxis('');\n      setSelectedYAxis('');\n      setAxisSelectionOpen(false);\n    }\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Custom Chart: ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile,\n        isAIRecommended: false\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(prevCharts => {\n      // Maintain existing AI-recommended charts if any\n      const aiCharts = prevCharts.filter(chart => chart.isAIRecommended);\n      return [...aiCharts, ...previewData];\n    });\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    console.log('Rendering preview charts:', charts.length);\n\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) {\n        try {\n          console.log('Destroying existing chart instance');\n          instance.destroy();\n        } catch (err) {\n          console.error('Error destroying chart:', err);\n        }\n      }\n    });\n\n    // Clear the instances state\n    setChartPreviewInstances({});\n    const newInstances = {};\n\n    // Create chart instances for each chart type\n    charts.forEach((chart, index) => {\n      // Generate a consistent key for each chart\n      const chartKey = chart.isAIRecommended ? `ai-${chart.chartType}` : `custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`;\n      console.log(`Setting up chart: ${chartKey}`);\n\n      // Schedule creation of chart instance after DOM update\n      setTimeout(() => {\n        if (chartPreviewRefs.current[chartKey]) {\n          console.log(`Creating chart instance for ${chartKey}`);\n          createChartInstance(chartKey, chart, newInstances);\n        } else {\n          console.warn(`Canvas reference not found for ${chartKey}`);\n        }\n      }, 1000); // Increased timeout to ensure DOM is ready\n    });\n\n    // Update state after all chart instances are created\n    setTimeout(() => {\n      setChartPreviewInstances(newInstances);\n    }, 1500);\n  };\n  const createChartInstance = async (chartKey, chart, instancesObject) => {\n    try {\n      // Destroy existing chart if any\n      if (instancesObject[chartKey]) {\n        instancesObject[chartKey].destroy();\n        delete instancesObject[chartKey];\n      }\n\n      // Get the canvas element\n      const canvas = chartPreviewRefs.current[chartKey];\n      if (!canvas) {\n        console.error(`Canvas element not found for ${chartKey}`);\n        return;\n      }\n\n      // Clear any existing Chart instances attached to this canvas\n      let existingChart;\n      try {\n        existingChart = Chart.getChart(canvas);\n        if (existingChart) {\n          existingChart.destroy();\n        }\n      } catch (err) {\n        console.log(`No existing chart found for canvas ${chartKey} or error destroying it:`, err);\n      }\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        console.error(`Could not get 2d context for canvas ${chartKey}`);\n        return;\n      }\n\n      // Set up mock data for charts - dynamically generate realistic data based on column names\n      let chartData;\n      let stockSymbols = ['AAPL', 'GOOGL', 'MSFT', 'AMZN', 'META', 'TSLA', 'NFLX'];\n      let dateLabels = ['2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'];\n\n      // Map specific column names to appropriate data\n      const isStockData = chart.xAxis === 'stock_symbol' || chart.xAxis.includes('stock') || chart.yAxis.includes('trading_volume');\n      const isTimeSeriesData = chart.xAxis.includes('date') || chart.xAxis.includes('month') || chart.xAxis.includes('time');\n      let xAxisLabels = [];\n\n      // Generate appropriate X-axis labels based on column name\n      if (isStockData && chart.xAxis === 'stock_symbol') {\n        // Use stock symbols for x-axis\n        xAxisLabels = stockSymbols.slice(0, 5);\n      } else if (isTimeSeriesData) {\n        // Use dates for time series data\n        xAxisLabels = dateLabels;\n      } else if (chart.xAxis.includes('category') || chart.xAxis.includes('type')) {\n        // For category columns\n        xAxisLabels = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E'];\n      } else if (chart.xAxis.includes('region') || chart.xAxis.includes('location')) {\n        // For regional data\n        xAxisLabels = ['North', 'South', 'East', 'West', 'Central'];\n      } else {\n        // Generic labels as fallback\n        xAxisLabels = [`${chart.xAxis} 1`, `${chart.xAxis} 2`, `${chart.xAxis} 3`, `${chart.xAxis} 4`, `${chart.xAxis} 5`];\n      }\n\n      // Generate appropriate Y-axis data based on column name\n      let yAxisData = [];\n      if (chart.yAxis.includes('volume') || chart.yAxis.includes('amount')) {\n        // Volume-type data is usually high numbers\n        yAxisData = [12543, 8754, 15876, 9432, 7654, 11324];\n      } else if (chart.yAxis.includes('price') || chart.yAxis.includes('cost')) {\n        // Price-type data\n        yAxisData = [154.23, 187.56, 143.89, 172.45, 168.33, 192.78];\n      } else if (chart.yAxis.includes('percent') || chart.yAxis.includes('rate')) {\n        // Percentage data\n        yAxisData = [4.5, 3.2, 5.7, 2.8, 6.1, 3.9];\n      } else {\n        // Generic numeric data as fallback\n        yAxisData = [65, 59, 80, 81, 56, 55];\n      }\n\n      // Ensure we have the right number of data points\n      yAxisData = yAxisData.slice(0, xAxisLabels.length);\n      if (chart.chartType === 'scatter') {\n        // Scatter chart data - create x-y coordinate pairs\n        const scatterData = [];\n\n        // Generate scatter plot data points\n        for (let i = 0; i < Math.min(xAxisLabels.length, yAxisData.length); i++) {\n          // For scatter, we need numeric x values\n          scatterData.push({\n            x: (i + 1) * 10,\n            y: yAxisData[i]\n          });\n        }\n        chartData = {\n          datasets: [{\n            label: chart.yAxis || 'Value',\n            data: scatterData,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 6,\n            pointHoverRadius: 8\n          }]\n        };\n      } else if (chart.chartType === 'pie') {\n        // Pie chart data\n        chartData = {\n          labels: xAxisLabels,\n          datasets: [{\n            data: yAxisData,\n            backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else if (chart.chartType === 'line') {\n        // Line chart data\n        chartData = {\n          labels: isTimeSeriesData ? dateLabels : xAxisLabels,\n          datasets: [{\n            label: chart.yAxis || 'Value',\n            data: yAxisData,\n            fill: false,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            tension: 0.1\n          }]\n        };\n      } else {\n        // Bar chart (default)\n        chartData = {\n          labels: xAxisLabels,\n          datasets: [{\n            label: chart.yAxis || 'Value',\n            data: yAxisData,\n            backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n            borderWidth: 1\n          }]\n        };\n      }\n\n      // Configure the chart type and options\n      const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 1000\n        },\n        plugins: {\n          legend: {\n            position: chart.chartType === 'pie' ? 'right' : 'top',\n            labels: {\n              color: theme.palette.text.primary,\n              font: {\n                size: 12\n              }\n            }\n          },\n          tooltip: {\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n            titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n            borderWidth: 1\n          }\n        },\n        scales: chart.chartType === 'pie' ? undefined : {\n          x: {\n            title: {\n              display: true,\n              text: chart.xAxis,\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: chart.yAxis,\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            beginAtZero: true\n          }\n        }\n      };\n      console.log(`Creating chart: ${chartKey}, type: ${chart.chartType}`);\n\n      // Create the chart instance\n      const chartInstance = new Chart(ctx, {\n        type: chart.chartType,\n        data: chartData,\n        options: options\n      });\n      console.log(`Chart created successfully: ${chartKey}`);\n\n      // Store the instance\n      instancesObject[chartKey] = chartInstance;\n    } catch (error) {\n      console.error(`Error creating chart ${chartKey}:`, error);\n    }\n  };\n  const handleSaveChart = async chart => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n\n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n\n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        console.log(\"Chart image saved locally\");\n\n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n\n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully to your account!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    try {\n      var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4, _visualization$config5, _visualization$config6, _visualization$config7, _visualization$config8;\n      if (!chartContainerRef.current || !visualization) {\n        console.error('Chart container ref or visualization is missing');\n        return;\n      }\n\n      // Destroy previous chart instance if it exists\n      if (chartInstance) {\n        try {\n          console.log('Destroying previous chart instance');\n          chartInstance.destroy();\n        } catch (err) {\n          console.error('Error destroying previous chart:', err);\n        }\n      }\n      const ctx = chartContainerRef.current.getContext('2d');\n      if (!ctx) {\n        console.error('Could not get 2d context for chart container');\n        return;\n      }\n\n      // Configure chart options\n      const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: visualization.chartType === 'pie' ? 'right' : 'top',\n            labels: {\n              color: theme.palette.text.primary,\n              font: {\n                family: theme.typography.fontFamily\n              }\n            }\n          },\n          title: {\n            display: true,\n            text: visualization.title || visualization.name || 'Chart',\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily,\n              size: 16,\n              weight: 'bold'\n            }\n          },\n          tooltip: {\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n            titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n            borderWidth: 1,\n            padding: 10\n          }\n        },\n        scales: visualization.chartType === 'pie' ? undefined : {\n          x: {\n            title: {\n              display: true,\n              text: visualization.xAxis || ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.xAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'X Axis',\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: visualization.yAxis || ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : (_visualization$config4 = _visualization$config3.yAxis) === null || _visualization$config4 === void 0 ? void 0 : _visualization$config4.label) || 'Y Axis',\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            beginAtZero: true\n          }\n        }\n      };\n\n      // Setup data based on column names and chart type\n      let data;\n      const chartType = visualization.chartType || 'bar';\n      const xAxis = visualization.xAxis || ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : (_visualization$config6 = _visualization$config5.xAxis) === null || _visualization$config6 === void 0 ? void 0 : _visualization$config6.field) || '';\n      const yAxis = visualization.yAxis || ((_visualization$config7 = visualization.config) === null || _visualization$config7 === void 0 ? void 0 : (_visualization$config8 = _visualization$config7.yAxis) === null || _visualization$config8 === void 0 ? void 0 : _visualization$config8.field) || '';\n\n      // Stock symbols and date labels for realistic data\n      let stockSymbols = ['AAPL', 'GOOGL', 'MSFT', 'AMZN', 'META', 'TSLA', 'NFLX'];\n      let dateLabels = ['2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'];\n\n      // Map specific column names to appropriate data\n      const isStockData = xAxis === 'stock_symbol' || xAxis.includes('stock') || yAxis.includes('trading_volume');\n      const isTimeSeriesData = xAxis.includes('date') || xAxis.includes('month') || xAxis.includes('time');\n      let xAxisLabels = [];\n\n      // Generate appropriate X-axis labels based on column name\n      if (isStockData && xAxis === 'stock_symbol') {\n        // Use stock symbols for x-axis\n        xAxisLabels = stockSymbols.slice(0, 5);\n      } else if (isTimeSeriesData) {\n        // Use dates for time series data\n        xAxisLabels = dateLabels;\n      } else if (xAxis.includes('category') || xAxis.includes('type')) {\n        // For category columns\n        xAxisLabels = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E'];\n      } else if (xAxis.includes('region') || xAxis.includes('location')) {\n        // For regional data\n        xAxisLabels = ['North', 'South', 'East', 'West', 'Central'];\n      } else {\n        // Generic labels as fallback\n        xAxisLabels = [`${xAxis} 1`, `${xAxis} 2`, `${xAxis} 3`, `${xAxis} 4`, `${xAxis} 5`];\n      }\n\n      // Generate appropriate Y-axis data based on column name\n      let yAxisData = [];\n      if (yAxis.includes('volume') || yAxis.includes('amount')) {\n        // Volume-type data is usually high numbers\n        yAxisData = [12543, 8754, 15876, 9432, 7654, 11324];\n      } else if (yAxis.includes('price') || yAxis.includes('cost')) {\n        // Price-type data\n        yAxisData = [154.23, 187.56, 143.89, 172.45, 168.33, 192.78];\n      } else if (yAxis.includes('percent') || yAxis.includes('rate')) {\n        // Percentage data\n        yAxisData = [4.5, 3.2, 5.7, 2.8, 6.1, 3.9];\n      } else {\n        // Generic numeric data as fallback\n        yAxisData = [65, 59, 80, 81, 56, 55];\n      }\n\n      // Ensure we have the right number of data points\n      yAxisData = yAxisData.slice(0, xAxisLabels.length);\n      if (chartType === 'scatter') {\n        // For scatter charts, create paired x-y coordinates with realistic data\n        const scatterData = [];\n\n        // Generate scatter plot data points\n        for (let i = 0; i < Math.min(xAxisLabels.length, yAxisData.length); i++) {\n          // For scatter, we need numeric x values\n          scatterData.push({\n            x: (i + 1) * 10,\n            y: yAxisData[i]\n          });\n        }\n        data = {\n          datasets: [{\n            label: yAxis || 'Value',\n            data: scatterData,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9\n          }]\n        };\n      } else if (chartType === 'pie') {\n        // For pie charts\n        data = {\n          labels: xAxisLabels,\n          datasets: [{\n            label: yAxis || 'Value',\n            data: yAxisData,\n            backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      } else if (chartType === 'line') {\n        // For line charts - use proper time series data if available\n        data = {\n          labels: isTimeSeriesData ? dateLabels : xAxisLabels,\n          datasets: [{\n            label: yAxis || 'Value',\n            data: yAxisData,\n            fill: false,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            tension: 0.1\n          }]\n        };\n      } else {\n        // For bar charts (default)\n        data = {\n          labels: xAxisLabels,\n          datasets: [{\n            label: yAxis || 'Value',\n            data: yAxisData,\n            backgroundColor: ['rgba(255, 99, 132, 0.7)', 'rgba(54, 162, 235, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)'],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n      }\n\n      // Create the chart based on the type\n      console.log('Creating new chart of type:', chartType);\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Save visualization data to localStorage (more persistent than sessionStorage)\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      localStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      if (previewFile) {\n        localStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n\n  // Restore saved charts and check file validity\n  useEffect(() => {\n    const restoreAndValidateCharts = async () => {\n      // Only restore charts if we don't already have any loaded\n      if (previewCharts.length === 0) {\n        const savedPreviewCharts = localStorage.getItem('previewCharts');\n        const savedPreviewFile = localStorage.getItem('previewFile');\n        console.log('Checking for saved charts to restore:', {\n          haveCharts: Boolean(savedPreviewCharts),\n          haveFile: Boolean(savedPreviewFile)\n        });\n        if (savedPreviewCharts && savedPreviewFile) {\n          try {\n            const parsedFile = JSON.parse(savedPreviewFile);\n            const parsedCharts = JSON.parse(savedPreviewCharts);\n            console.log('Restoring charts from localStorage:', {\n              fileName: parsedFile.name,\n              chartCount: parsedCharts.length\n            });\n\n            // Check if the file still exists\n            const response = await fetch(`/api/files/${parsedFile._id}`);\n            if (!response.ok) {\n              // File doesn't exist anymore, but still show visualizations with warning\n              console.log('Saved file no longer exists, showing warning');\n              setPreviewFile(parsedFile);\n              setPreviewCharts(parsedCharts);\n              setFileNotFound(true);\n            } else {\n              // File exists, restore visualizations\n              console.log('File exists, restoring visualizations');\n              setPreviewFile(parsedFile);\n              setPreviewCharts(parsedCharts);\n              setFileNotFound(false);\n            }\n\n            // Schedule rendering after component mounts\n            setTimeout(() => {\n              console.log('Rendering restored charts...');\n              renderPreviewCharts(parsedCharts);\n            }, 300);\n          } catch (error) {\n            console.error('Error restoring saved charts:', error);\n            // Clear invalid data\n            localStorage.removeItem('previewCharts');\n            localStorage.removeItem('previewFile');\n          }\n        }\n      } else {\n        console.log('Already have charts loaded, not restoring from localStorage', {\n          currentChartCount: previewCharts.length\n        });\n      }\n    };\n    restoreAndValidateCharts();\n  }, [previewCharts.length]);\n\n  // Update UI to show file not found warning\n  useEffect(() => {\n    const validateExistingPreviewFile = async () => {\n      // Check if the preview file still exists\n      if (previewFile && previewFile._id) {\n        try {\n          const response = await fetch(`/api/files/${previewFile._id}`);\n          if (!response.ok) {\n            // File doesn't exist anymore, show warning but keep visualizations\n            console.log('Preview file no longer exists, showing warning');\n            setFileNotFound(true);\n          } else {\n            setFileNotFound(false);\n          }\n        } catch (error) {\n          console.error('Error checking file existence:', error);\n          setFileNotFound(true);\n        }\n      }\n    };\n    if (previewFile) {\n      validateExistingPreviewFile();\n    } else {\n      setFileNotFound(false);\n    }\n  }, [previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    var _analysis$visualizati;\n    if (!(analysis !== null && analysis !== void 0 && (_analysis$visualizati = analysis.visualizationSuggestions) !== null && _analysis$visualizati !== void 0 && _analysis$visualizati.length)) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Recommended Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: analysis.visualizationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              },\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            onClick: () => {\n              setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n              setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n              handleGenerateCharts();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  flexGrow: 1\n                },\n                children: [suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1), \" Chart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${suggestion.confidence}% match`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1370,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 1\n              },\n              children: [suggestion.type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#1976d2'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1378,\n                columnNumber: 49\n              }, this), suggestion.type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#2e7d32'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1379,\n                columnNumber: 50\n              }, this), suggestion.type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#ed6c02'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1380,\n                columnNumber: 49\n              }, this), suggestion.type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                sx: {\n                  fontSize: 50,\n                  color: '#9c27b0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1381,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 7\n    }, this);\n  };\n\n  // New function to clear all visualizations\n  const handleClearVisualizations = () => {\n    // Clean up chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    setPreviewFile(null);\n\n    // Also clear from localStorage\n    localStorage.removeItem('previewCharts');\n    localStorage.removeItem('previewFile');\n\n    // Show a brief confirmation\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Visualizations\",\n        subtitle: \"Create and manage your data visualizations\",\n        action: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1426,\n              columnNumber: 30\n            }, this),\n            onClick: () => {\n              handleClearVisualizations();\n              // After clearing, open the file selection dialog\n              setOpenDialog(true);\n              setSelectedXAxis('');\n              setSelectedYAxis('');\n              setAxisSelectionOpen(false);\n            },\n            children: \"New Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 28\n            }, this),\n            onClick: () => setOpenDialog(true),\n            children: \"Create Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1453,\n        columnNumber: 11\n      }, this), fileNotFound && previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        sx: {\n          mb: 3\n        },\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: handleClearVisualizations,\n          children: \"Clear Visualizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 15\n        }, this),\n        children: [\"The file \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: previewFile === null || previewFile === void 0 ? void 0 : previewFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 22\n        }, this), \" used to generate these visualizations has been deleted. You can still view the charts, but you won't be able to update them.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1460,\n        columnNumber: 11\n      }, this), !fileNotFound && previewCharts.length > 0 && previewFile && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mb: 3\n          },\n          action: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            size: \"small\",\n            onClick: handleClearVisualizations,\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1484,\n            columnNumber: 17\n          }, this),\n          children: [\"Showing visualizations for file: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: previewFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1493,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            color: \"primary\",\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"AI Recommended Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [\"Based on your data structure, here are the most effective visualizations for \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => chart.isAIRecommended).map((chart, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1541,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${chart.confidence}% match`,\n                  color: chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default',\n                  size: \"small\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: 'white',\n                    bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1544,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1533,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: chart.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1551,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`ai-${chart.chartType}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  },\n                  id: `chart-ai-${chart.chartType}-${index}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1555,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1554,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  disabled: fileNotFound,\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1562,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1561,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1523,\n              columnNumber: 19\n            }, this)\n          }, `ai-${chart.chartType}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1522,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1580,\n              columnNumber: 28\n            }, this),\n            onClick: () => {\n              if (previewFile) {\n                // If we already have a file selected, skip file selection and go straight to axis selection\n                setSelectedFile(previewFile);\n                setAxisSelectionOpen(true);\n              } else {\n                // Otherwise show file selection first\n                setOpenDialog(true);\n                setAxisSelectionOpen(true);\n              }\n            },\n            children: \"Create Custom Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1577,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1576,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 11\n      }, this), previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4,\n          p: 3,\n          bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n          borderRadius: 2,\n          boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n          border: 1,\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Custom Visualizations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1611,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: [chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1), \" Chart\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1637,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1629,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: [chart.yAxis, \" by \", chart.xAxis]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1641,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  },\n                  id: `chart-custom-${chart.chartType}-${index}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1645,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1644,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleSaveChart(chart),\n                  disabled: fileNotFound,\n                  children: \"Save Visualization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1652,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1651,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1619,\n              columnNumber: 19\n            }, this)\n          }, `custom-${chart.chartType}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1618,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1616,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1601,\n        columnNumber: 11\n      }, this), previewCharts.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          width: '100%',\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            width: 80,\n            height: 80,\n            color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1686,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: \"No visualizations yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1687,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          align: \"center\",\n          sx: {\n            maxWidth: 400,\n            mb: 4\n          },\n          children: \"Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1690,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1696,\n            columnNumber: 26\n          }, this),\n          onClick: handleCreateClick,\n          children: \"Create Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1693,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 11\n      }, this), visualizations.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mb: 3\n          },\n          children: \"Saved Visualizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1707,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: visualizations.map(viz => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                bgcolor: 'background.paper',\n                backgroundImage: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                borderRadius: 2,\n                overflow: 'hidden'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: 'primary.main',\n                  color: 'white',\n                  p: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  children: viz.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1731,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1723,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  px: 2,\n                  py: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)'\n                },\n                children: viz.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1735,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  height: 250,\n                  position: 'relative',\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: el => chartPreviewRefs.current[`viz-${viz._id}`] = el,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1739,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1738,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  mt: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  onClick: () => handleViewVisualization(viz),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1745,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1744,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1713,\n              columnNumber: 19\n            }, this)\n          }, viz._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1712,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1710,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1706,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: axisSelectionOpen ? 'Create Custom Visualization' : 'Create Visualization'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1779,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          sx: {\n            mt: 1,\n            color: 'text.secondary'\n          },\n          children: axisSelectionOpen ? 'Choose a file and configure custom chart settings:' : 'Choose a file to analyze and visualize:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1784,\n          columnNumber: 11\n        }, this), !axisSelectionOpen && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"When you select a file, our AI will automatically generate the best visualizations based on your data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1792,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1791,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            p: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1800,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Analyzing your data and generating recommendations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1801,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1799,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            overflow: 'hidden',\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            sx: {\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => {\n              if (axisSelectionOpen) {\n                // If in custom chart mode, just select the file but don't auto-generate\n                setSelectedFile(file);\n              } else {\n                // Otherwise, trigger AI analysis\n                handleFileSelect(file);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1837,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1836,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"medium\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1840,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: file.type.split('/')[1].toUpperCase(),\n                  color: file.type.includes('csv') ? 'success' : file.type.includes('json') ? 'info' : 'primary',\n                  sx: {\n                    mr: 1,\n                    height: 20,\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1843,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [(file.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1849,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1842,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1839,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1814,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1806,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1777,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1867,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1860,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1762,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Custom Chart - Select Columns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1901,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'No file selected',\n          size: \"small\",\n          color: \"default\",\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1904,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1892,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1913,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1920,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1919,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              border: 1,\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1936,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1937,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1935,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1944,\n                columnNumber: 25\n              }, this),\n              sx: {\n                fontWeight: 'medium'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1941,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1924,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1949,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1955,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 0,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  disabled: loading || !analysis || !analysis.columns || analysis.columns.length === 0,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    height: '56px',\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: loading ? 'Loading columns...' : 'Select X-Axis Column'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1996,\n                    columnNumber: 23\n                  }, this), analysis && analysis.columns && analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2000,\n                    columnNumber: 25\n                  }, this)), (!analysis || !analysis.columns || analysis.columns.length === 0) && !loading && /*#__PURE__*/_jsxDEV(MenuItem, {\n                    disabled: true,\n                    children: \"No columns available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2003,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1965,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1958,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1954,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                color: \"text.secondary\",\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2010,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  borderRadius: 1,\n                  p: 0,\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  displayEmpty: true,\n                  fullWidth: true,\n                  disabled: loading || !analysis || !analysis.columns || analysis.columns.length === 0,\n                  MenuProps: {\n                    PaperProps: {\n                      sx: {\n                        bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                        color: theme.palette.text.primary\n                      }\n                    }\n                  },\n                  sx: {\n                    height: '56px',\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'transparent'\n                    },\n                    '& .MuiSelect-icon': {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    disabled: true,\n                    children: loading ? 'Loading columns...' : 'Select Y-Axis Column'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2051,\n                    columnNumber: 23\n                  }, this), analysis && analysis.columns && analysis.columns.map(column => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2055,\n                    columnNumber: 25\n                  }, this)), (!analysis || !analysis.columns || analysis.columns.length === 0) && !loading && /*#__PURE__*/_jsxDEV(MenuItem, {\n                    disabled: true,\n                    children: \"No columns available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2058,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2020,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2013,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2009,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1953,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1911,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2075,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2084,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2067,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1874,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden',\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2143,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2155,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2095,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                color: theme.palette.mode === 'dark' ? 'white' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)' : theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2255,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2256,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2257,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2258,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2259,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2234,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2276,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper',\n          backgroundImage: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1415,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"N8cW42ZoPsnWsgi88Y62VlhMY5Q=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","Paper","Container","Select","MenuItem","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","registerables","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Visualizations","_s","_analysis$columns","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","fileNotFound","setFileNotFound","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","_analysisData$analysi2","columnTypes","Object","keys","basicAnalysis","forEach","column","type","dateColumns","filter","col","numericColumns","categoricalColumns","correlations","advancedAnalysis","defaultXAxis","defaultYAxis","recommendedAxes","bar","x","y","line","pie","scatter","length","correlationPairs","entries","sort","a","b","Math","abs","bestCorrelationPair","split","rowCount","summary","totalRows","columns","visualizationSuggestions","description","reasoning","confidence","xAxis","yAxis","generateAIRecommendedCharts","previewData","chartType","push","name","charAt","toUpperCase","slice","fileId","isAIRecommended","setTimeout","renderPreviewCharts","handleCreateClick","then","_analysisData$analysi3","catch","err","finally","handleCloseDialog","handleGenerateCharts","suggestion","find","s","prevCharts","aiCharts","chart","charts","values","instance","destroy","newInstances","index","chartKey","current","createChartInstance","warn","instancesObject","canvas","existingChart","getChart","ctx","getContext","chartData","stockSymbols","dateLabels","isStockData","includes","isTimeSeriesData","xAxisLabels","yAxisData","scatterData","i","min","datasets","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","labels","borderWidth","fill","tension","options","responsive","maintainAspectRatio","animation","duration","plugins","legend","position","color","palette","text","primary","font","size","tooltip","mode","titleColor","bodyColor","scales","undefined","display","ticks","secondary","grid","beginAtZero","handleSaveChart","canvasRef","imageUrl","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","alert","saveToServer","confirm","config","field","subtitle","Date","toLocaleDateString","method","headers","JSON","stringify","isAIGenerated","message","result","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","variant","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","_visualization$config5","_visualization$config6","_visualization$config7","_visualization$config8","family","typography","fontFamily","weight","padding","newChart","localStorage","setItem","restoreAndValidateCharts","savedPreviewCharts","getItem","savedPreviewFile","haveCharts","Boolean","haveFile","parsedFile","parse","parsedCharts","chartCount","removeItem","currentChartCount","validateExistingPreviewFile","renderRecommendedVisualizations","_analysis$visualizati","mb","gutterBottom","container","spacing","map","sm","md","p","cursor","transition","transform","boxShadow","bgcolor","border","onClick","alignItems","flexGrow","height","justifyContent","handleClearVisualizations","maxWidth","py","action","gap","startIcon","severity","borderRadius","mr","component","paragraph","backgroundImage","flexDirection","overflow","fontWeight","px","ref","el","style","fullWidth","disabled","open","onClose","PaperProps","borderBottom","button","divider","toFixed","borderTop","icon","onChange","displayEmpty","MenuProps","pt","placeholder","rows","flexWrap","_c","$RefreshReg$"],"sources":["E:/git_projects/DataVizPro/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Divider,\n  Alert,\n  IconButton,\n  useTheme,\n  CircularProgress,\n  Paper,\n  Container,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport {\n  BarChart as ChartIcon,\n  Add as AddIcon,\n  Timeline as TimelineIcon,\n  BubbleChart as ScatterIcon,\n  ShowChart as LineIcon,\n  PieChart as PieIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport { Chart, registerables } from 'chart.js/auto';\n\n// Register all chart components\nChart.register(...registerables);\n\nfunction Visualizations() {\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  const [fileNotFound, setFileNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchFiles();\n    fetchVisualizations();\n    \n    if (location.state?.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = async (file) => {\n    // Clear existing preview charts when selecting a new file\n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    \n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    \n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      \n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n      \n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        // Extract column types from analysis\n        const columnTypes = {};\n        Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n          columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n        });\n        \n        // Find best columns for different chart types\n        const dateColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'date');\n        const numericColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'number');\n        const categoricalColumns = Object.keys(columnTypes).filter(col => columnTypes[col] === 'string');\n        \n        // Find correlations between numeric columns\n        const correlations = analysisData.analysis.advancedAnalysis?.correlations || {};\n        \n        // Default axes if can't determine from analysis\n        let defaultXAxis = Object.keys(analysisData.analysis.basicAnalysis || {})[0];\n        let defaultYAxis = numericColumns[0] || Object.keys(analysisData.analysis.basicAnalysis || {})[1];\n        \n        // Create axes recommendations based on data types\n        let recommendedAxes = {\n          bar: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          line: { \n            x: dateColumns[0] || categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          pie: { \n            x: categoricalColumns[0] || defaultXAxis, \n            y: numericColumns[0] || defaultYAxis \n          },\n          scatter: { \n            x: numericColumns[0] || defaultXAxis, \n            y: numericColumns[1] || numericColumns[0] || defaultYAxis \n          }\n        };\n        \n        // Find highest correlation pair for scatter plot\n        if (Object.keys(correlations).length > 0) {\n          const correlationPairs = Object.entries(correlations);\n          if (correlationPairs.length > 0) {\n            correlationPairs.sort((a, b) => Math.abs(b[1]) - Math.abs(a[1]));\n            const bestCorrelationPair = correlationPairs[0][0].split('_');\n            recommendedAxes.scatter.x = bestCorrelationPair[0];\n            recommendedAxes.scatter.y = bestCorrelationPair[1];\n          }\n        }\n        \n        setAnalysis({\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          columnTypes: columnTypes,\n          visualizationSuggestions: [\n            {\n              type: 'bar',\n              description: 'Bar Chart - Good for comparing values across categories',\n              reasoning: 'Based on data structure',\n              confidence: 85,\n              xAxis: recommendedAxes.bar.x,\n              yAxis: recommendedAxes.bar.y\n            },\n            {\n              type: 'line',\n              description: 'Line Chart - Best for showing trends over time or continuous data',\n              reasoning: 'Good for trends over time',\n              confidence: 75,\n              xAxis: recommendedAxes.line.x,\n              yAxis: recommendedAxes.line.y\n            },\n            {\n              type: 'pie',\n              description: 'Pie Chart - Excellent for showing proportions of a whole',\n              reasoning: 'Good for showing proportions',\n              confidence: 65,\n              xAxis: recommendedAxes.pie.x,\n              yAxis: recommendedAxes.pie.y\n            },\n            {\n              type: 'scatter',\n              description: 'Scatter Plot - Ideal for showing correlation between variables',\n              reasoning: 'Good for showing correlations',\n              confidence: 60,\n              xAxis: recommendedAxes.scatter.x,\n              yAxis: recommendedAxes.scatter.y\n            }\n          ]\n        });\n        \n        // Automatically generate AI recommended visualizations\n        generateAIRecommendedCharts(file, recommendedAxes, analysisData.analysis);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // New function to automatically generate AI recommended charts\n  const generateAIRecommendedCharts = (file, recommendedAxes, analysisData) => {\n    // Create preview charts for all chart types with AI-recommended axes\n    const previewData = [];\n    \n    // Create AI recommendations for different chart types\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const xAxis = recommendedAxes[chartType].x;\n      const yAxis = recommendedAxes[chartType].y;\n      \n      if (xAxis && yAxis) {\n        previewData.push({\n          chartType,\n          name: `${file.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n          description: `AI Recommended: ${yAxis} by ${xAxis}`,\n          fileId: file._id,\n          confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          file: file,\n          isAIRecommended: true\n        });\n      }\n    });\n    \n    setPreviewFile(file);\n    setPreviewCharts(previewData);\n    \n    // Close the file selection dialog\n    setOpenDialog(false);\n    \n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n\n  const handleCreateClick = () => {\n    if (previewFile) {\n      // If we already have a selected file from AI recommendations, use it\n      setSelectedFile(previewFile);\n      // Skip file selection dialog and directly open axis selection\n      setAxisSelectionOpen(true);\n      \n      // Make sure analysis data is available - we need to fetch it if it's missing\n      if (!analysis || !analysis.columns || analysis.columns.length === 0) {\n        console.log('Analysis data not available, fetching it now...');\n        setLoading(true);\n        \n        // Fetch analysis data for the file\n        fetch(`/api/files/${previewFile._id}/analyze`)\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Failed to analyze file');\n            }\n            return response.json();\n          })\n          .then(analysisData => {\n            console.log('Analysis fetched:', analysisData);\n            \n            if (analysisData.success && analysisData.analysis) {\n              // Extract column types from analysis\n              const columnTypes = {};\n              Object.keys(analysisData.analysis.basicAnalysis || {}).forEach(column => {\n                columnTypes[column] = analysisData.analysis.basicAnalysis[column].type;\n              });\n              \n              // Set the analysis data\n              setAnalysis({\n                rowCount: analysisData.analysis.summary?.totalRows || 0,\n                columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n                columnTypes: columnTypes,\n                visualizationSuggestions: []\n              });\n              \n              setError(null);\n            } else {\n              throw new Error('Invalid analysis data');\n            }\n          })\n          .catch(err => {\n            console.error('Error fetching analysis:', err);\n            setError('Failed to analyze file. Please try again.');\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      }\n    } else {\n      // If no file is selected yet, show the file selection dialog\n      setOpenDialog(true);\n      setSelectedXAxis('');\n      setSelectedYAxis('');\n      setAxisSelectionOpen(false);\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n    \n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n    \n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : chartType === 'pie' ? 65 : 60\n      };\n      \n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Custom Chart: ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile,\n        isAIRecommended: false\n      });\n    });\n    \n    setPreviewFile(selectedFile);\n    setPreviewCharts(prevCharts => {\n      // Maintain existing AI-recommended charts if any\n      const aiCharts = prevCharts.filter(chart => chart.isAIRecommended);\n      return [...aiCharts, ...previewData];\n    });\n    \n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n\n  const renderPreviewCharts = (charts) => {\n    console.log('Rendering preview charts:', charts.length);\n    \n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) {\n        try {\n          console.log('Destroying existing chart instance');\n          instance.destroy();\n        } catch (err) {\n          console.error('Error destroying chart:', err);\n        }\n      }\n    });\n    \n    // Clear the instances state\n    setChartPreviewInstances({});\n    \n    const newInstances = {};\n    \n    // Create chart instances for each chart type\n    charts.forEach((chart, index) => {\n      // Generate a consistent key for each chart\n      const chartKey = chart.isAIRecommended ? \n        `ai-${chart.chartType}` : \n        `custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`;\n      \n      console.log(`Setting up chart: ${chartKey}`);\n      \n      // Schedule creation of chart instance after DOM update\n      setTimeout(() => {\n        if (chartPreviewRefs.current[chartKey]) {\n          console.log(`Creating chart instance for ${chartKey}`);\n          createChartInstance(chartKey, chart, newInstances);\n        } else {\n          console.warn(`Canvas reference not found for ${chartKey}`);\n        }\n      }, 1000); // Increased timeout to ensure DOM is ready\n    });\n    \n    // Update state after all chart instances are created\n    setTimeout(() => {\n      setChartPreviewInstances(newInstances);\n    }, 1500);\n  };\n  \n  const createChartInstance = async (chartKey, chart, instancesObject) => {\n    try {\n      // Destroy existing chart if any\n      if (instancesObject[chartKey]) {\n        instancesObject[chartKey].destroy();\n        delete instancesObject[chartKey];\n      }\n      \n      // Get the canvas element\n      const canvas = chartPreviewRefs.current[chartKey];\n      if (!canvas) {\n        console.error(`Canvas element not found for ${chartKey}`);\n        return;\n      }\n      \n      // Clear any existing Chart instances attached to this canvas\n      let existingChart;\n      try {\n        existingChart = Chart.getChart(canvas);\n        if (existingChart) {\n          existingChart.destroy();\n        }\n      } catch (err) {\n        console.log(`No existing chart found for canvas ${chartKey} or error destroying it:`, err);\n      }\n      \n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        console.error(`Could not get 2d context for canvas ${chartKey}`);\n        return;\n      }\n      \n      // Set up mock data for charts - dynamically generate realistic data based on column names\n      let chartData;\n      let stockSymbols = ['AAPL', 'GOOGL', 'MSFT', 'AMZN', 'META', 'TSLA', 'NFLX'];\n      let dateLabels = ['2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'];\n      \n      // Map specific column names to appropriate data\n      const isStockData = chart.xAxis === 'stock_symbol' || chart.xAxis.includes('stock') || chart.yAxis.includes('trading_volume');\n      const isTimeSeriesData = chart.xAxis.includes('date') || chart.xAxis.includes('month') || chart.xAxis.includes('time');\n      \n      let xAxisLabels = [];\n      \n      // Generate appropriate X-axis labels based on column name\n      if (isStockData && chart.xAxis === 'stock_symbol') {\n        // Use stock symbols for x-axis\n        xAxisLabels = stockSymbols.slice(0, 5);\n      } else if (isTimeSeriesData) {\n        // Use dates for time series data\n        xAxisLabels = dateLabels;\n      } else if (chart.xAxis.includes('category') || chart.xAxis.includes('type')) {\n        // For category columns\n        xAxisLabels = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E'];\n      } else if (chart.xAxis.includes('region') || chart.xAxis.includes('location')) {\n        // For regional data\n        xAxisLabels = ['North', 'South', 'East', 'West', 'Central'];\n      } else {\n        // Generic labels as fallback\n        xAxisLabels = [`${chart.xAxis} 1`, `${chart.xAxis} 2`, `${chart.xAxis} 3`, `${chart.xAxis} 4`, `${chart.xAxis} 5`];\n      }\n      \n      // Generate appropriate Y-axis data based on column name\n      let yAxisData = [];\n      \n      if (chart.yAxis.includes('volume') || chart.yAxis.includes('amount')) {\n        // Volume-type data is usually high numbers\n        yAxisData = [12543, 8754, 15876, 9432, 7654, 11324];\n      } else if (chart.yAxis.includes('price') || chart.yAxis.includes('cost')) {\n        // Price-type data\n        yAxisData = [154.23, 187.56, 143.89, 172.45, 168.33, 192.78];\n      } else if (chart.yAxis.includes('percent') || chart.yAxis.includes('rate')) {\n        // Percentage data\n        yAxisData = [4.5, 3.2, 5.7, 2.8, 6.1, 3.9];\n      } else {\n        // Generic numeric data as fallback\n        yAxisData = [65, 59, 80, 81, 56, 55];\n      }\n      \n      // Ensure we have the right number of data points\n      yAxisData = yAxisData.slice(0, xAxisLabels.length);\n      \n      if (chart.chartType === 'scatter') {\n        // Scatter chart data - create x-y coordinate pairs\n        const scatterData = [];\n        \n        // Generate scatter plot data points\n        for (let i = 0; i < Math.min(xAxisLabels.length, yAxisData.length); i++) {\n          // For scatter, we need numeric x values\n          scatterData.push({\n            x: (i + 1) * 10,\n            y: yAxisData[i]\n          });\n        }\n        \n        chartData = {\n          datasets: [{\n            label: chart.yAxis || 'Value',\n            data: scatterData,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 6,\n            pointHoverRadius: 8\n          }]\n        };\n      } else if (chart.chartType === 'pie') {\n        // Pie chart data\n        chartData = {\n          labels: xAxisLabels,\n          datasets: [{\n            data: yAxisData,\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.7)',\n              'rgba(54, 162, 235, 0.7)',\n              'rgba(255, 206, 86, 0.7)',\n              'rgba(75, 192, 192, 0.7)',\n              'rgba(153, 102, 255, 0.7)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      } else if (chart.chartType === 'line') {\n        // Line chart data\n        chartData = {\n          labels: isTimeSeriesData ? dateLabels : xAxisLabels,\n          datasets: [{\n            label: chart.yAxis || 'Value',\n            data: yAxisData,\n            fill: false,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            tension: 0.1\n          }]\n        };\n      } else {\n        // Bar chart (default)\n        chartData = {\n          labels: xAxisLabels,\n          datasets: [{\n            label: chart.yAxis || 'Value',\n            data: yAxisData,\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.7)',\n              'rgba(54, 162, 235, 0.7)',\n              'rgba(255, 206, 86, 0.7)',\n              'rgba(75, 192, 192, 0.7)',\n              'rgba(153, 102, 255, 0.7)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      }\n      \n      // Configure the chart type and options\n      const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 1000,\n        },\n        plugins: {\n          legend: {\n            position: chart.chartType === 'pie' ? 'right' : 'top',\n            labels: {\n              color: theme.palette.text.primary,\n              font: {\n                size: 12\n              }\n            }\n          },\n          tooltip: {\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n            titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n            borderWidth: 1\n          }\n        },\n        scales: chart.chartType === 'pie' ? undefined : {\n          x: {\n            title: {\n              display: true,\n              text: chart.xAxis,\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: chart.yAxis,\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            beginAtZero: true\n          }\n        }\n      };\n\n      console.log(`Creating chart: ${chartKey}, type: ${chart.chartType}`);\n      \n      // Create the chart instance\n      const chartInstance = new Chart(ctx, {\n        type: chart.chartType,\n        data: chartData,\n        options: options\n      });\n      \n      console.log(`Chart created successfully: ${chartKey}`);\n      \n      // Store the instance\n      instancesObject[chartKey] = chartInstance;\n    } catch (error) {\n      console.error(`Error creating chart ${chartKey}:`, error);\n    }\n  };\n\n  const handleSaveChart = async (chart) => {\n    try {\n      // Save the chart as an image\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (canvasRef) {\n        // Get the image data URL\n        const imageUrl = canvasRef.toDataURL(\"image/png\");\n        \n        // Create a temporary link element to download the image\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = imageUrl;\n        downloadLink.download = `${chart.name}.png`;\n        \n        // Append to body, click, and remove\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        \n        console.log(\"Chart image saved locally\");\n        \n        // Success message\n        alert(\"Chart saved to your downloads folder\");\n      }\n      \n      // Ask if the user wants to save to the server as well\n      const saveToServer = window.confirm(\"Do you also want to save this visualization to your account?\");\n      if (!saveToServer) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n      \n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      \n      const result = await response.json();\n      console.log('Visualization created:', result);\n      \n      // Show success message\n      alert('Visualization saved successfully to your account!');\n      \n      // Refresh visualizations\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n      \n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      \n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n      \n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  \n  const handleEditVisualization = async (viz) => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      \n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  \n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    \n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n      \n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  \n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteVisualization = async (vizId) => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      \n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Delete response status:', response.status);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      \n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n      \n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n\n  const getVisualizationIcon = (type) => {\n    const iconSize = { fontSize: 80, opacity: 0.8 };\n    const colors = {\n      bar: '#1976d2',    // blue\n      scatter: '#9c27b0', // purple\n      line: '#2e7d32',    // green\n      pie: '#ed6c02'      // orange\n    };\n    \n    const iconColor = { color: colors[type] || colors.bar };\n    \n    switch (type) {\n      case 'bar':\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'scatter':\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'line':\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\n      case 'pie':\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\n      default:\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (loading) {\n      return (\n        <Grid item xs={12}>\n          <Box sx={{ width: '100%', mt: 2 }}>\n            <LinearProgress />\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\n              Loading...\n            </Typography>\n          </Box>\n        </Grid>\n      );\n    }\n    \n    if (visualizations.length === 0) {\n      return (\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\n          </Typography>\n        </Grid>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderChart = (visualization) => {\n    try {\n      if (!chartContainerRef.current || !visualization) {\n        console.error('Chart container ref or visualization is missing');\n        return;\n      }\n      \n      // Destroy previous chart instance if it exists\n      if (chartInstance) {\n        try {\n          console.log('Destroying previous chart instance');\n          chartInstance.destroy();\n        } catch (err) {\n          console.error('Error destroying previous chart:', err);\n        }\n      }\n      \n      const ctx = chartContainerRef.current.getContext('2d');\n      if (!ctx) {\n        console.error('Could not get 2d context for chart container');\n        return;\n      }\n\n      // Configure chart options\n      const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: visualization.chartType === 'pie' ? 'right' : 'top',\n            labels: {\n              color: theme.palette.text.primary,\n              font: {\n                family: theme.typography.fontFamily,\n              }\n            }\n          },\n          title: {\n            display: true,\n            text: visualization.title || visualization.name || 'Chart',\n            color: theme.palette.text.primary,\n            font: {\n              family: theme.typography.fontFamily,\n              size: 16,\n              weight: 'bold'\n            }\n          },\n          tooltip: {\n            backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.8)' : 'rgba(255,255,255,0.9)',\n            titleColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            bodyColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.9)' : 'rgba(0,0,0,0.9)',\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.1)',\n            borderWidth: 1,\n            padding: 10\n          }\n        },\n        scales: visualization.chartType === 'pie' ? undefined : {\n          x: {\n            title: {\n              display: true,\n              text: visualization.xAxis || visualization.config?.xAxis?.label || 'X Axis',\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: visualization.yAxis || visualization.config?.yAxis?.label || 'Y Axis',\n              color: theme.palette.text.primary\n            },\n            ticks: {\n              color: theme.palette.text.secondary\n            },\n            grid: {\n              color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n            },\n            beginAtZero: true\n          }\n        }\n      };\n\n      // Setup data based on column names and chart type\n      let data;\n      const chartType = visualization.chartType || 'bar';\n      const xAxis = visualization.xAxis || visualization.config?.xAxis?.field || '';\n      const yAxis = visualization.yAxis || visualization.config?.yAxis?.field || '';\n      \n      // Stock symbols and date labels for realistic data\n      let stockSymbols = ['AAPL', 'GOOGL', 'MSFT', 'AMZN', 'META', 'TSLA', 'NFLX'];\n      let dateLabels = ['2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'];\n      \n      // Map specific column names to appropriate data\n      const isStockData = xAxis === 'stock_symbol' || xAxis.includes('stock') || yAxis.includes('trading_volume');\n      const isTimeSeriesData = xAxis.includes('date') || xAxis.includes('month') || xAxis.includes('time');\n      \n      let xAxisLabels = [];\n      \n      // Generate appropriate X-axis labels based on column name\n      if (isStockData && xAxis === 'stock_symbol') {\n        // Use stock symbols for x-axis\n        xAxisLabels = stockSymbols.slice(0, 5);\n      } else if (isTimeSeriesData) {\n        // Use dates for time series data\n        xAxisLabels = dateLabels;\n      } else if (xAxis.includes('category') || xAxis.includes('type')) {\n        // For category columns\n        xAxisLabels = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E'];\n      } else if (xAxis.includes('region') || xAxis.includes('location')) {\n        // For regional data\n        xAxisLabels = ['North', 'South', 'East', 'West', 'Central'];\n      } else {\n        // Generic labels as fallback\n        xAxisLabels = [`${xAxis} 1`, `${xAxis} 2`, `${xAxis} 3`, `${xAxis} 4`, `${xAxis} 5`];\n      }\n      \n      // Generate appropriate Y-axis data based on column name\n      let yAxisData = [];\n      \n      if (yAxis.includes('volume') || yAxis.includes('amount')) {\n        // Volume-type data is usually high numbers\n        yAxisData = [12543, 8754, 15876, 9432, 7654, 11324];\n      } else if (yAxis.includes('price') || yAxis.includes('cost')) {\n        // Price-type data\n        yAxisData = [154.23, 187.56, 143.89, 172.45, 168.33, 192.78];\n      } else if (yAxis.includes('percent') || yAxis.includes('rate')) {\n        // Percentage data\n        yAxisData = [4.5, 3.2, 5.7, 2.8, 6.1, 3.9];\n      } else {\n        // Generic numeric data as fallback\n        yAxisData = [65, 59, 80, 81, 56, 55];\n      }\n      \n      // Ensure we have the right number of data points\n      yAxisData = yAxisData.slice(0, xAxisLabels.length);\n      \n      if (chartType === 'scatter') {\n        // For scatter charts, create paired x-y coordinates with realistic data\n        const scatterData = [];\n        \n        // Generate scatter plot data points\n        for (let i = 0; i < Math.min(xAxisLabels.length, yAxisData.length); i++) {\n          // For scatter, we need numeric x values\n          scatterData.push({\n            x: (i + 1) * 10,\n            y: yAxisData[i]\n          });\n        }\n        \n        data = {\n          datasets: [{\n            label: yAxis || 'Value',\n            data: scatterData,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 7,\n            pointHoverRadius: 9,\n          }]\n        };\n      } else if (chartType === 'pie') {\n        // For pie charts\n        data = {\n          labels: xAxisLabels,\n          datasets: [{\n            label: yAxis || 'Value',\n            data: yAxisData,\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.7)',\n              'rgba(54, 162, 235, 0.7)',\n              'rgba(255, 206, 86, 0.7)',\n              'rgba(75, 192, 192, 0.7)',\n              'rgba(153, 102, 255, 0.7)',\n              'rgba(255, 159, 64, 0.7)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      } else if (chartType === 'line') {\n        // For line charts - use proper time series data if available\n        data = {\n          labels: isTimeSeriesData ? dateLabels : xAxisLabels,\n          datasets: [{\n            label: yAxis || 'Value',\n            data: yAxisData,\n            fill: false,\n            backgroundColor: 'rgba(75, 192, 192, 0.7)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            tension: 0.1\n          }]\n        };\n      } else {\n        // For bar charts (default)\n        data = {\n          labels: xAxisLabels,\n          datasets: [{\n            label: yAxis || 'Value',\n            data: yAxisData,\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.7)',\n              'rgba(54, 162, 235, 0.7)',\n              'rgba(255, 206, 86, 0.7)',\n              'rgba(75, 192, 192, 0.7)',\n              'rgba(153, 102, 255, 0.7)',\n              'rgba(255, 159, 64, 0.7)'\n            ],\n            borderColor: chartType === 'line' ? 'rgba(75, 192, 192, 1)' : [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n          }]\n        };\n      }\n      \n      // Create the chart based on the type\n      console.log('Creating new chart of type:', chartType);\n      const newChart = new Chart(ctx, {\n        type: chartType,\n        data: data,\n        options: options\n      });\n      \n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  };\n\n  // Add a separate useEffect to render the chart when visualization changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      // Use setTimeout to ensure the dialog is fully rendered\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n  }, [currentVisualization, openViewDialog, theme]);\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Save visualization data to localStorage (more persistent than sessionStorage)\n  useEffect(() => {\n    if (previewCharts.length > 0) {\n      localStorage.setItem('previewCharts', JSON.stringify(previewCharts));\n      \n      if (previewFile) {\n        localStorage.setItem('previewFile', JSON.stringify(previewFile));\n      }\n    }\n  }, [previewCharts, previewFile]);\n  \n  // Restore saved charts and check file validity\n  useEffect(() => {\n    const restoreAndValidateCharts = async () => {\n      // Only restore charts if we don't already have any loaded\n      if (previewCharts.length === 0) {\n        const savedPreviewCharts = localStorage.getItem('previewCharts');\n        const savedPreviewFile = localStorage.getItem('previewFile');\n        \n        console.log('Checking for saved charts to restore:', {\n          haveCharts: Boolean(savedPreviewCharts),\n          haveFile: Boolean(savedPreviewFile)\n        });\n        \n        if (savedPreviewCharts && savedPreviewFile) {\n          try {\n            const parsedFile = JSON.parse(savedPreviewFile);\n            const parsedCharts = JSON.parse(savedPreviewCharts);\n            \n            console.log('Restoring charts from localStorage:', {\n              fileName: parsedFile.name,\n              chartCount: parsedCharts.length\n            });\n            \n            // Check if the file still exists\n            const response = await fetch(`/api/files/${parsedFile._id}`);\n            if (!response.ok) {\n              // File doesn't exist anymore, but still show visualizations with warning\n              console.log('Saved file no longer exists, showing warning');\n              setPreviewFile(parsedFile);\n              setPreviewCharts(parsedCharts);\n              setFileNotFound(true);\n            } else {\n              // File exists, restore visualizations\n              console.log('File exists, restoring visualizations');\n              setPreviewFile(parsedFile);\n              setPreviewCharts(parsedCharts);\n              setFileNotFound(false);\n            }\n            \n            // Schedule rendering after component mounts\n            setTimeout(() => {\n              console.log('Rendering restored charts...');\n              renderPreviewCharts(parsedCharts);\n            }, 300);\n          } catch (error) {\n            console.error('Error restoring saved charts:', error);\n            // Clear invalid data\n            localStorage.removeItem('previewCharts');\n            localStorage.removeItem('previewFile');\n          }\n        }\n      } else {\n        console.log('Already have charts loaded, not restoring from localStorage', {\n          currentChartCount: previewCharts.length\n        });\n      }\n    };\n    \n    restoreAndValidateCharts();\n  }, [previewCharts.length]);\n\n  // Update UI to show file not found warning\n  useEffect(() => {\n    const validateExistingPreviewFile = async () => {\n      // Check if the preview file still exists\n      if (previewFile && previewFile._id) {\n        try {\n          const response = await fetch(`/api/files/${previewFile._id}`);\n          if (!response.ok) {\n            // File doesn't exist anymore, show warning but keep visualizations\n            console.log('Preview file no longer exists, showing warning');\n            setFileNotFound(true);\n          } else {\n            setFileNotFound(false);\n          }\n        } catch (error) {\n          console.error('Error checking file existence:', error);\n          setFileNotFound(true);\n        }\n      }\n    };\n    \n    if (previewFile) {\n      validateExistingPreviewFile();\n    } else {\n      setFileNotFound(false);\n    }\n  }, [previewFile]);\n\n  // Add recommended visualizations section with previews\n  const renderRecommendedVisualizations = () => {\n    if (!analysis?.visualizationSuggestions?.length) return null;\n\n  return (\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Recommended Visualizations\n        </Typography>\n        <Grid container spacing={2}>\n          {analysis.visualizationSuggestions.map((suggestion, index) => (\n            <Grid item xs={12} sm={6} md={3} key={index}>\n              <Paper\n                sx={{\n                  p: 2,\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    transform: 'translateY(-4px)',\n                    boxShadow: 4,\n                  },\n                  bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                  border: 1,\n                  borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n                }}\n                onClick={() => {\n                  setSelectedXAxis(suggestion.xAxis || analysis.columns[0]);\n                  setSelectedYAxis(suggestion.yAxis || analysis.columns[1]);\n                  handleGenerateCharts();\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\n                    {suggestion.type.charAt(0).toUpperCase() + suggestion.type.slice(1)} Chart\n                  </Typography>\n                  <Chip\n                    label={`${suggestion.confidence}% match`}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n                \n                <Box sx={{ height: 100, display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>\n                  {suggestion.type === 'bar' && <ChartIcon sx={{ fontSize: 50, color: '#1976d2' }} />}\n                  {suggestion.type === 'line' && <LineIcon sx={{ fontSize: 50, color: '#2e7d32' }} />}\n                  {suggestion.type === 'pie' && <PieIcon sx={{ fontSize: 50, color: '#ed6c02' }} />}\n                  {suggestion.type === 'scatter' && <ScatterIcon sx={{ fontSize: 50, color: '#9c27b0' }} />}\n                </Box>\n                \n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {suggestion.description}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  // New function to clear all visualizations\n  const handleClearVisualizations = () => {\n    // Clean up chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    \n    setPreviewCharts([]);\n    setChartPreviewInstances({});\n    setPreviewFile(null);\n    \n    // Also clear from localStorage\n    localStorage.removeItem('previewCharts');\n    localStorage.removeItem('previewFile');\n    \n    // Show a brief confirmation\n    setError(null);\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ py: 4 }}>\n        <PageHeader\n          title=\"Visualizations\"\n          subtitle=\"Create and manage your data visualizations\"\n          action={\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              {previewCharts.length > 0 && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={() => {\n                    handleClearVisualizations();\n                    // After clearing, open the file selection dialog\n                    setOpenDialog(true);\n                    setSelectedXAxis('');\n                    setSelectedYAxis('');\n                    setAxisSelectionOpen(false);\n                  }}\n                >\n                  New Visualization\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                onClick={() => setOpenDialog(true)}\n              >\n                Create Visualization\n              </Button>\n            </Box>\n          }\n        />\n\n        {loading && <LinearProgress sx={{ mb: 2 }} />}\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Show file not found message when appropriate */}\n        {fileNotFound && previewCharts.length > 0 && (\n          <Alert \n            severity=\"warning\" \n            sx={{ mb: 3 }}\n            action={\n              <Button\n                color=\"inherit\"\n                size=\"small\"\n                onClick={handleClearVisualizations}\n              >\n                Clear Visualizations\n              </Button>\n            }\n          >\n            The file <strong>{previewFile?.name}</strong> used to generate these visualizations has been deleted.\n            You can still view the charts, but you won't be able to update them.\n          </Alert>\n        )}\n        \n        {!fileNotFound && previewCharts.length > 0 && previewFile && (\n          <Box>\n            <Alert \n              severity=\"info\" \n              sx={{ mb: 3 }}\n              action={\n                <Button\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={handleClearVisualizations}\n                >\n                  Clear All\n                </Button>\n              }\n            >\n              Showing visualizations for file: <strong>{previewFile.name}</strong>\n            </Alert>\n          </Box>\n        )}\n\n        {/* AI Recommended Visualizations Section */}\n        {previewCharts.filter(chart => chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <CheckCircleIcon color=\"primary\" sx={{ mr: 1 }} />\n              <Typography variant=\"h5\" component=\"h2\">\n                AI Recommended Visualizations\n              </Typography>\n            </Box>\n            \n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n              Based on your data structure, here are the most effective visualizations for {previewFile?.name}\n            </Typography>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => chart.isAIRecommended).map((chart, index) => (\n                <Grid item xs={12} sm={6} key={`ai-${chart.chartType}-${index}`}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                      <Chip \n                        label={`${chart.confidence}% match`} \n                        color={chart.confidence > 80 ? 'success' : chart.confidence > 70 ? 'primary' : 'default'} \n                        size=\"small\"\n                        sx={{ fontWeight: 'bold', color: 'white', bgcolor: chart.confidence > 80 ? '#2e7d32' : chart.confidence > 70 ? '#1976d2' : '#757575' }}\n                      />\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`ai-${chart.chartType}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                        id={`chart-ai-${chart.chartType}-${index}`}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                        disabled={fileNotFound}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n            \n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n              <Button \n                variant=\"outlined\" \n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  if (previewFile) {\n                    // If we already have a file selected, skip file selection and go straight to axis selection\n                    setSelectedFile(previewFile);\n                    setAxisSelectionOpen(true);\n                  } else {\n                    // Otherwise show file selection first\n                    setOpenDialog(true);\n                    setAxisSelectionOpen(true);\n                  }\n                }}\n              >\n                Create Custom Chart\n              </Button>\n            </Box>\n          </Paper>\n        )}\n        \n        {/* Custom Visualizations Section */}\n        {previewCharts.filter(chart => !chart.isAIRecommended).length > 0 && (\n          <Paper sx={{ \n            mb: 4, \n            p: 3, \n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n            borderRadius: 2,\n            boxShadow: theme.palette.mode === 'dark' ? '0 2px 10px rgba(0, 0, 0, 0.2)' : '0 2px 10px rgba(0, 0, 0, 0.05)',\n            border: 1,\n            borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <Typography variant=\"h5\" component=\"h2\">\n                Custom Visualizations\n              </Typography>\n            </Box>\n            \n            <Grid container spacing={3}>\n              {previewCharts.filter(chart => !chart.isAIRecommended).map((chart, index) => (\n                <Grid item xs={12} sm={6} key={`custom-${chart.chartType}-${index}`}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)} Chart\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {chart.yAxis} by {chart.xAxis}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`custom-${chart.chartType}-${chart.xAxis}-${chart.yAxis}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                        id={`chart-custom-${chart.chartType}-${index}`}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleSaveChart(chart)}\n                        disabled={fileNotFound}\n                      >\n                        Save Visualization\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        )}\n\n        {/* Placeholder when no visualizations are available */}\n        {previewCharts.length === 0 && !loading && (\n          <Box \n            sx={{ \n              mt: 4, \n              p: 4, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center',\n              height: '100%',\n              width: '100%',\n              borderRadius: 2,\n              bgcolor: 'background.paper',\n              backgroundImage: 'none',\n              boxShadow: 1\n            }}\n          >\n            <ChartIcon sx={{ width: 80, height: 80, color: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)', mb: 2 }} />\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              No visualizations yet\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ maxWidth: 400, mb: 4 }}>\n              Create your first visualization by uploading a file. We'll automatically recommend the best charts for your data.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<AddIcon />}\n              onClick={handleCreateClick}\n            >\n              Create Visualization\n            </Button>\n          </Box>\n        )}\n\n        {/* Saved Visualizations Section */}\n        {visualizations.length > 0 && (\n          <Box sx={{ mt: 6 }}>\n            <Typography variant=\"h5\" sx={{ mb: 3 }}>\n              Saved Visualizations\n            </Typography>\n            <Grid container spacing={3}>\n              {visualizations.map((viz) => (\n                <Grid item xs={12} sm={6} key={viz._id}>\n                  <Card sx={{ \n                    height: '100%',\n                    bgcolor: 'background.paper',\n                    backgroundImage: 'none',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                    borderRadius: 2,\n                    overflow: 'hidden',\n                  }}>\n                    <Box sx={{ \n                      bgcolor: 'primary.main', \n                      color: 'white',\n                      p: 2,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}>\n                      <Typography variant=\"h6\" component=\"div\">\n                        {viz.name}\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"subtitle2\" sx={{ px: 2, py: 1, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.03)' }}>\n                      {viz.description}\n                    </Typography>\n                    <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\n                      <canvas \n                        ref={el => chartPreviewRefs.current[`viz-${viz._id}`] = el}\n                        style={{ width: '100%', height: '100%' }}\n                      />\n                    </Box>\n                    <Box sx={{ p: 2, mt: 'auto' }}>\n                      <Button \n                        variant=\"contained\" \n                        fullWidth\n                        onClick={() => handleViewVisualization(viz)}\n                      >\n                        View\n                      </Button>\n                    </Box>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        )}\n      </Box>\n\n      {/* File Selection Dialog */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          {axisSelectionOpen ? 'Create Custom Visualization' : 'Create Visualization'}\n        </DialogTitle>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Typography variant=\"subtitle1\" gutterBottom sx={{ mt: 1, color: 'text.secondary' }}>\n            {axisSelectionOpen \n              ? 'Choose a file and configure custom chart settings:' \n              : 'Choose a file to analyze and visualize:'}\n          </Typography>\n          \n          {!axisSelectionOpen && (\n            <Alert severity=\"info\" sx={{ mb: 3 }}>\n              <Typography variant=\"body2\">\n                When you select a file, our AI will automatically generate the best visualizations based on your data.\n              </Typography>\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n              <CircularProgress sx={{ mb: 2 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Analyzing your data and generating recommendations...\n              </Typography>\n            </Box>\n          ) : (\n            <List sx={{ \n              borderRadius: 1, \n              border: '1px solid',\n              borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)', \n              overflow: 'hidden',\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.03)' : '#f8f8f8'\n            }}>\n              {files.map((file) => (\n                <ListItem\n                  key={file._id}\n                  button\n                  divider\n                  sx={{ \n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \n                    '&:hover': {\n                      bgcolor: theme.palette.mode === 'dark' \n                        ? 'rgba(255, 255, 255, 0.1)' \n                        : 'rgba(25, 118, 210, 0.08)'\n                    }\n                  }}\n                  onClick={() => {\n                    if (axisSelectionOpen) {\n                      // If in custom chart mode, just select the file but don't auto-generate\n                      setSelectedFile(file);\n                    } else {\n                      // Otherwise, trigger AI analysis\n                      handleFileSelect(file);\n                    }\n                  }}\n                >\n                  <ListItemIcon>\n                    <ChartIcon color=\"primary\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={<Typography fontWeight=\"medium\">{file.name}</Typography>}\n                    secondary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                        <Chip \n                          size=\"small\" \n                          label={file.type.split('/')[1].toUpperCase()} \n                          color={file.type.includes('csv') ? 'success' : file.type.includes('json') ? 'info' : 'primary'}\n                          sx={{ mr: 1, height: 20, fontSize: '0.7rem' }}\n                        />\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {(file.size / 1024).toFixed(2)} KB\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end',\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* Axis Selection Dialog */}\n      <Dialog\n        open={axisSelectionOpen}\n        onClose={() => {\n          setAxisSelectionOpen(false);\n          setError(null);\n        }}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\n            overflow: 'hidden'\n          }\n        }}\n      >\n        <Box sx={{ \n          bgcolor: 'primary.main', \n          color: 'white', \n          py: 2, \n          px: 3,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Typography variant=\"h6\">\n            Custom Chart - Select Columns\n          </Typography>\n          <Chip \n            label={selectedFile?.name || 'No file selected'} \n            size=\"small\" \n            color=\"default\"\n            sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\n          />\n        </Box>\n        <DialogContent sx={{ p: 3 }}>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Box sx={{ \n                mb: 3, \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)', \n                borderRadius: 1,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                border: 1,\n                borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'\n              }}>\n                <Box>\n                  <Typography variant=\"h6\">Data Summary</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\n                  </Typography>\n                </Box>\n                <Chip \n                  label=\"Ready for visualization\" \n                  color=\"success\" \n                  icon={<CheckCircleIcon />} \n                  sx={{ fontWeight: 'medium' }}\n                />\n              </Box>\n              \n              <Typography variant=\"h6\" gutterBottom>\n                Select Data Axes\n              </Typography>\n              \n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    X-Axis (Categories)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)', \n                    borderRadius: 1, \n                    p: 0,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedXAxis}\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      disabled={loading || !analysis || !analysis.columns || analysis.columns.length === 0}\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        height: '56px',\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        {loading ? 'Loading columns...' : 'Select X-Axis Column'}\n                      </MenuItem>\n                      {analysis && analysis.columns && analysis.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                      {(!analysis || !analysis.columns || analysis.columns.length === 0) && !loading && (\n                        <MenuItem disabled>No columns available</MenuItem>\n                      )}\n                    </Select>\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n                    Y-Axis (Values)\n                  </Typography>\n                  <Box sx={{ \n                    border: '1px solid',\n                    borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                    borderRadius: 1,\n                    p: 0,\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' \n                  }}>\n                    <Select\n                      value={selectedYAxis}\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\n                      displayEmpty\n                      fullWidth\n                      disabled={loading || !analysis || !analysis.columns || analysis.columns.length === 0}\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white',\n                            color: theme.palette.text.primary,\n                          }\n                        }\n                      }}\n                      sx={{\n                        height: '56px',\n                        bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white',\n                        '& .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: 'transparent',\n                        },\n                        '& .MuiSelect-icon': {\n                          color: theme.palette.text.secondary,\n                        }\n                      }}\n                    >\n                      <MenuItem value=\"\" disabled>\n                        {loading ? 'Loading columns...' : 'Select Y-Axis Column'}\n                      </MenuItem>\n                      {analysis && analysis.columns && analysis.columns.map((column) => (\n                        <MenuItem key={column} value={column}>{column}</MenuItem>\n                      ))}\n                      {(!analysis || !analysis.columns || analysis.columns.length === 0) && !loading && (\n                        <MenuItem disabled>No columns available</MenuItem>\n                      )}\n                    </Select>\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </DialogContent>\n        <Box sx={{ \n          p: 3, \n          display: 'flex', \n          justifyContent: 'flex-end', \n          gap: 2,\n          borderTop: '1px solid',\n          borderColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setAxisSelectionOpen(false);\n              setError(null);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            disabled={!selectedXAxis || !selectedYAxis || loading}\n            onClick={handleGenerateCharts}\n          >\n            Generate Charts\n          </Button>\n        </Box>\n      </Dialog>\n\n      {/* View Visualization Dialog */}\n      <Dialog\n        open={openViewDialog}\n        onClose={handleCloseViewDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            overflow: 'hidden',\n            bgcolor: 'background.paper',\n          }\n        }}\n      >\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\n          <Typography variant=\"h5\">\n            {currentVisualization?.name || 'View Visualization'}\n          </Typography>\n        </Box>\n        <DialogContent sx={{ p: 0 }}>\n          {currentVisualization && (\n            <Box>\n              <Box sx={{ height: 400, p: 3 }}>\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\n              </Box>\n              \n              <Box sx={{ \n                p: 3, \n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f5f5f5' \n              }}>\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\n                </Typography>\n                \n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n                  <Chip \n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\n                    color=\"primary\"\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\n                    sx={{ mr: 1 }}\n                  />\n                  <Chip \n                    label={`${currentVisualization.confidence || 90}% confidence`}\n                    color=\"success\"\n                  />\n                  <Box sx={{ flexGrow: 1 }} />\n                  <Button \n                    variant=\"outlined\" \n                    startIcon={<EditIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleEditVisualization(currentVisualization);\n                    }}\n                    sx={{ mr: 1 }}\n                  >\n                    Edit\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    color=\"error\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => {\n                      handleCloseViewDialog();\n                      handleDeleteVisualization(currentVisualization._id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n      </Dialog>\n      \n      {/* Edit Visualization Dialog - simplified */}\n      <Dialog\n        open={openEditDialog}\n        onClose={handleCloseEditDialog}\n        fullWidth\n        maxWidth=\"md\"\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\n          Edit Visualization\n        </DialogTitle>\n        <DialogContent sx={{ p: 3, mt: 2 }}>\n          {currentVisualization && (\n            <Box sx={{ pt: 1 }}>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={currentVisualization.name || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter a descriptive name\"\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\n                <textarea\n                  name=\"description\"\n                  value={currentVisualization.description || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Describe what insights this visualization provides\"\n                  rows={3}\n                  style={{ \n                    width: '100%', \n                    padding: '12px', \n                    fontSize: '16px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    backgroundColor: theme.palette.mode === 'dark' ? '#333' : 'white',\n                    color: theme.palette.mode === 'dark' ? 'white' : 'black',\n                  }}\n                />\n              </Box>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\n                    <Box \n                      key={type}\n                      onClick={() => setCurrentVisualization({\n                        ...currentVisualization,\n                        chartType: type\n                      })}\n                      sx={{ \n                        border: '2px solid',\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                        borderRadius: 2,\n                        p: 2,\n                        width: '110px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                        bgcolor: currentVisualization.chartType === type \n                          ? (theme.palette.mode === 'dark' ? 'rgba(25, 118, 210, 0.2)' : 'rgba(25, 118, 210, 0.1)') \n                          : (theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'transparent')\n                      }}\n                    >\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\n                      <Typography variant=\"body2\">\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUpdateVisualization}\n            startIcon={<EditIcon />}\n          >\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={openDeleteDialog}\n        onClose={handleCancelDelete}\n        PaperProps={{\n          sx: {\n            borderRadius: 2,\n            bgcolor: 'background.paper',\n            backgroundImage: 'none',\n          }\n        }}\n      >\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\n          Delete Visualization\n        </DialogTitle>\n        <DialogContent sx={{ mt: 2, p: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\n            <Typography variant=\"h6\">\n              Are you sure?\n            </Typography>\n          </Box>\n          <Typography>\n            This visualization will be permanently deleted. This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions sx={{ p: 3, pt: 0 }}>\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}