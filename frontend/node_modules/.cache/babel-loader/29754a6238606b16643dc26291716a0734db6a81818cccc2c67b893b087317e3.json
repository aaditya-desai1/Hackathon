{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  var _analysis$columns, _analysis$columns2, _analysis$columns3;\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setPreviewCharts([]);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi;\n        setAnalysis({\n          rowCount: ((_analysisData$analysi = analysisData.analysis.summary) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart',\n            reasoning: 'Based on data structure',\n            confidence: 85\n          }, {\n            type: 'line',\n            description: 'Line Chart',\n            reasoning: 'Good for trends over time',\n            confidence: 75\n          }, {\n            type: 'pie',\n            description: 'Pie Chart',\n            reasoning: 'Good for showing proportions',\n            confidence: 65\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot',\n            reasoning: 'Good for showing correlations',\n            confidence: 60\n          }]\n        });\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close the dialog\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : 65\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n    charts.forEach(chart => {\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (!canvasRef) return;\n      const ctx = canvasRef.getContext('2d');\n      if (!ctx) return;\n      try {\n        // Sample data for the charts\n        const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n        const data = {\n          labels: labels,\n          datasets: [{\n            label: chart.yAxis,\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n        const chartInstance = new Chart(ctx, {\n          type: chart.chartType,\n          data: data,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              title: {\n                display: true,\n                text: `${chart.yAxis} by ${chart.xAxis}`\n              },\n              legend: {\n                display: chart.chartType !== 'bar',\n                position: 'top'\n              }\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: chart.xAxis\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: chart.yAxis\n                },\n                beginAtZero: true\n              }\n            }\n          }\n        });\n        newInstances[chart.chartType] = chartInstance;\n      } catch (error) {\n        console.error(`Error creating ${chart.chartType} chart:`, error);\n      }\n    });\n    setChartPreviewInstances(newInstances);\n  };\n  const handleSaveChart = async chart => {\n    try {\n      setLoading(true);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Refresh visualizations\n      await fetchVisualizations();\n\n      // Optional: Remove from preview\n      // setPreviewCharts(prevCharts => prevCharts.filter(c => c.chartType !== chart.chartType));\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    console.log('Rendering chart for visualization:', visualization);\n    if (!chartContainerRef.current) {\n      console.error('Chart container reference not available');\n      return;\n    }\n\n    // Destroy previous chart if exists\n    if (chartInstance) {\n      console.log('Destroying previous chart instance');\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) {\n      console.error('Could not get 2D context from canvas');\n      return;\n    }\n    console.log('Chart type:', visualization.chartType);\n    console.log('Chart config:', visualization.config);\n    try {\n      var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4, _visualization$config5, _visualization$config6, _visualization$config7, _visualization$config8, _visualization$config9;\n      // Generate mock data based on the chart type and config\n      const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n      const data = {\n        labels: labels,\n        datasets: [{\n          label: ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.yAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'Value',\n          data: [65, 59, 80, 81, 56, 55],\n          backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      };\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: visualization.chartType || 'bar',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            title: {\n              display: true,\n              text: ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : _visualization$config3.title) || visualization.name\n            },\n            subtitle: {\n              display: !!((_visualization$config4 = visualization.config) !== null && _visualization$config4 !== void 0 && _visualization$config4.subtitle),\n              text: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : _visualization$config5.subtitle) || ''\n            },\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: ((_visualization$config6 = visualization.config) === null || _visualization$config6 === void 0 ? void 0 : (_visualization$config7 = _visualization$config6.xAxis) === null || _visualization$config7 === void 0 ? void 0 : _visualization$config7.label) || 'Category'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: ((_visualization$config8 = visualization.config) === null || _visualization$config8 === void 0 ? void 0 : (_visualization$config9 = _visualization$config8.yAxis) === null || _visualization$config9 === void 0 ? void 0 : _visualization$config9.label) || 'Value'\n              },\n              beginAtZero: true\n            }\n          }\n        }\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n      alert('Failed to render chart: ' + error.message);\n    }\n  };\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [chartInstance]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: '#f5f5f5',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Visualizations\",\n      icon: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 15\n      }, this),\n      actions: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 24\n        }, this),\n        onClick: handleCreateClick,\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => setAxisSelectionOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Select Data for Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            p: 3,\n            bgcolor: '#f5f5f5',\n            borderRadius: 2,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Data Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Ready for visualization\",\n            color: \"success\",\n            icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Select Data Axes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"X-Axis (Categories)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                border: '1px solid #ddd',\n                borderRadius: 1,\n                p: 1,\n                bgcolor: 'white'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedXAxis,\n                onChange: e => setSelectedXAxis(e.target.value),\n                style: {\n                  width: '100%',\n                  padding: '10px',\n                  fontSize: '16px',\n                  border: 'none',\n                  outline: 'none'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select X-Axis Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 19\n                }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns2 = analysis.columns) === null || _analysis$columns2 === void 0 ? void 0 : _analysis$columns2.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: column,\n                  children: column\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Y-Axis (Values)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                border: '1px solid #ddd',\n                borderRadius: 1,\n                p: 1,\n                bgcolor: 'white'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedYAxis,\n                onChange: e => setSelectedYAxis(e.target.value),\n                style: {\n                  width: '100%',\n                  padding: '10px',\n                  fontSize: '16px',\n                  border: 'none',\n                  outline: 'none'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Y-Axis Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 19\n                }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns3 = analysis.columns) === null || _analysis$columns3 === void 0 ? void 0 : _analysis$columns3.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: column,\n                  children: column\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setAxisSelectionOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this), previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"Chart Preview: \", selectedXAxis, \" vs \", selectedYAxis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: [\"Data from: \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          mt: 3\n        },\n        children: \"All Chart Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: previewCharts.map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n              borderRadius: 2,\n              overflow: 'hidden'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1) + ' Chart',\n              subheader: `${chart.yAxis} by ${chart.xAxis}`,\n              action: /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${chart.confidence}% match`,\n                color: chart.confidence > 80 ? 'success' : 'primary',\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 23\n              }, this),\n              sx: {\n                bgcolor: 'primary.light',\n                color: 'white',\n                '& .MuiCardHeader-subheader': {\n                  color: 'rgba(255,255,255,0.8)'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                height: 250,\n                position: 'relative'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: el => chartPreviewRefs.current[chart.chartType] = el,\n                style: {\n                  width: '100%',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                mt: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: () => handleSaveChart(chart),\n                children: \"Save Visualization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 17\n          }, this)\n        }, chart.chartType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          mt: 4\n        },\n        children: \"Recommended Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: previewCharts.sort((a, b) => b.confidence - a.confidence).slice(0, 2) // Take only top 2 recommendations\n        .map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n              borderRadius: 2,\n              overflow: 'hidden',\n              border: '2px solid',\n              borderColor: 'primary.main'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                bgcolor: 'primary.main',\n                color: 'white',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 910,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: [\"Recommended: \", chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 911,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${chart.confidence}%`,\n                size: \"small\",\n                sx: {\n                  bgcolor: 'white',\n                  color: 'primary.dark'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                gutterBottom: true,\n                children: [chart.chartType === 'bar' && `Great for comparing ${chart.yAxis} values across ${chart.xAxis} categories`, chart.chartType === 'line' && `Ideal for showing ${chart.yAxis} trends over ${chart.xAxis}`, chart.chartType === 'pie' && `Perfect for showing ${chart.yAxis} distribution among ${chart.xAxis} categories`, chart.chartType === 'scatter' && `Best for exploring relationship between ${chart.xAxis} and ${chart.yAxis}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                mt: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: () => handleSaveChart(chart),\n                children: \"Use This Recommendation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 19\n          }, this)\n        }, `rec-${chart.chartType}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 9\n    }, this), visualizations.length === 0 && !loading && previewCharts.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        borderRadius: 2,\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\n        minHeight: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TimelineIcon, {\n        sx: {\n          fontSize: 64,\n          color: 'primary.light',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"No Visualizations Yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 3\n        },\n        children: \"Create your first visualization to see it displayed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 24\n        }, this),\n        onClick: () => {\n          setOpenDialog(true);\n        },\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 9\n    }, this) : !previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 2\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading visualizations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 15\n      }, this) : visualizations.map(viz => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            transition: 'transform 0.2s, box-shadow 0.2s',\n            '&:hover': {\n              transform: 'translateY(-5px)',\n              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n              cursor: 'pointer'\n            }\n          },\n          onClick: () => handleViewVisualization(viz),\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: viz.name,\n            subheader: `Created: ${new Date(viz.createdAt).toLocaleDateString()}`,\n            action: /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${viz.confidence || 90}% match`,\n              color: \"primary\",\n              size: \"small\",\n              sx: {\n                fontWeight: 'bold'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              pt: 0,\n              height: 200,\n              position: 'relative',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: getVisualizationIcon(viz.chartType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              bgcolor: 'primary.main',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              mt: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 'bold',\n                mr: 1\n              },\n              children: [viz.chartType.charAt(0).toUpperCase() + viz.chartType.slice(1), \" Chart\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditVisualization(viz);\n                },\n                sx: {\n                  color: 'white',\n                  mr: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteVisualization(viz._id);\n                },\n                sx: {\n                  color: 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1057,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 19\n        }, this)\n      }, viz._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Select File for Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            mt: 1\n          },\n          children: \"Choose a file to analyze and visualize:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            bgcolor: '#f5f5f5',\n            borderRadius: 2\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            sx: {\n              mb: 1,\n              bgcolor: 'white',\n              borderRadius: 1,\n              boxShadow: '0 2px 5px rgba(0,0,0,0.05)',\n              '&:hover': {\n                bgcolor: 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => {\n              handleFileSelect(file);\n              setAxisSelectionOpen(true);\n              setOpenDialog(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: file.name,\n              secondary: `${file.type} - ${(file.size / 1024).toFixed(2)} KB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 17\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1178,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? 'rgba(25, 118, 210, 0.1)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1282,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1283,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1284,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1285,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1286,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 673,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"E10XFdX0XZBUt0iq9qXyB3bbrI4=\", false, function () {\n  return [useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Visualizations","_s","_analysis$columns","_analysis$columns2","_analysis$columns3","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleCreateClick","handleCloseDialog","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","rowCount","summary","totalRows","columns","Object","keys","basicAnalysis","visualizationSuggestions","type","description","reasoning","confidence","handleGenerateCharts","previewData","forEach","chartType","suggestion","find","s","push","name","charAt","toUpperCase","slice","fileId","xAxis","yAxis","setTimeout","renderPreviewCharts","charts","values","instance","destroy","newInstances","chart","canvasRef","current","ctx","getContext","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","display","text","legend","position","scales","x","y","beginAtZero","handleSaveChart","config","field","subtitle","Date","toLocaleDateString","method","headers","body","JSON","stringify","message","result","handleViewVisualization","viz","visualization","id","renderChart","alert","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","bar","scatter","line","pie","iconColor","color","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","length","variant","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","_visualization$config5","_visualization$config6","_visualization$config7","_visualization$config8","_visualization$config9","newChart","p","minHeight","icon","actions","startIcon","onClick","open","onClose","maxWidth","fullWidth","PaperProps","borderRadius","bgcolor","severity","mb","alignItems","justifyContent","gutterBottom","container","spacing","sm","border","onChange","style","padding","outline","map","column","disabled","component","height","flexDirection","boxShadow","overflow","subheader","action","size","ref","el","sort","a","b","md","mr","lg","transition","transform","cursor","createdAt","fontWeight","pt","flexGrow","stopPropagation","button","primary","secondary","toFixed","py","px","placeholder","rows","flexWrap","gap","_c","$RefreshReg$"],"sources":["E:/git_projects/test/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Chip,\r\n  Divider,\r\n  Alert,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport {\r\n  BarChart as ChartIcon,\r\n  Add as AddIcon,\r\n  Timeline as TimelineIcon,\r\n  BubbleChart as ScatterIcon,\r\n  ShowChart as LineIcon,\r\n  PieChart as PieIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from '@mui/icons-material';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Visualizations() {\r\n  const location = useLocation();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [deleteTarget, setDeleteTarget] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [visualizations, setVisualizations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [currentVisualization, setCurrentVisualization] = useState(null);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const chartContainerRef = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const [selectedXAxis, setSelectedXAxis] = useState('');\r\n  const [selectedYAxis, setSelectedYAxis] = useState('');\r\n  const [showChartOptions, setShowChartOptions] = useState(false);\r\n  const [previewCharts, setPreviewCharts] = useState([]);\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\r\n  const chartPreviewRefs = useRef({});\r\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    fetchVisualizations();\r\n    \r\n    if (location.state?.openCreateDialog) {\r\n      setOpenDialog(true);\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n  }, [location]);\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const response = await fetch('/api/files');\r\n      const data = await response.json();\r\n      setFiles(data.files || []);\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n      setError('Failed to fetch files');\r\n    }\r\n  };\r\n\r\n  const fetchVisualizations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/visualizations');\r\n      const data = await response.json();\r\n      console.log('Fetched visualizations:', data);\r\n      setVisualizations(data.visualizations || []);\r\n    } catch (error) {\r\n      console.error('Error fetching visualizations:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    setOpenDialog(true);\r\n    setPreviewCharts([]);\r\n    setSelectedXAxis('');\r\n    setSelectedYAxis('');\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setAxisSelectionOpen(false);\r\n    setSelectedFile(null);\r\n    setAnalysis(null);\r\n  };\r\n\r\n  const handleFileSelect = async (file) => {\r\n    setSelectedFile(file);\r\n    setLoading(true);\r\n    setError(null);\r\n    setSelectedXAxis('');\r\n    setSelectedYAxis('');\r\n    setShowChartOptions(false);\r\n    \r\n    try {\r\n      console.log('Analyzing file with ID:', file._id);\r\n      const response = await fetch(`/api/files/${file._id}/analyze`);\r\n      console.log('Analysis response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Analysis error details:', errorData);\r\n        throw new Error(errorData.error || 'Analysis failed');\r\n      }\r\n      \r\n      const analysisData = await response.json();\r\n      console.log('Analysis result:', analysisData);\r\n      \r\n      // Check the structure of analysis data and adapt as needed\r\n      if (analysisData.success && analysisData.analysis) {\r\n        setAnalysis({\r\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\r\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\r\n          visualizationSuggestions: [\r\n            {\r\n              type: 'bar',\r\n              description: 'Bar Chart',\r\n              reasoning: 'Based on data structure',\r\n              confidence: 85\r\n            },\r\n            {\r\n              type: 'line',\r\n              description: 'Line Chart',\r\n              reasoning: 'Good for trends over time',\r\n              confidence: 75\r\n            },\r\n            {\r\n              type: 'pie',\r\n              description: 'Pie Chart',\r\n              reasoning: 'Good for showing proportions',\r\n              confidence: 65\r\n            },\r\n            {\r\n              type: 'scatter',\r\n              description: 'Scatter Plot',\r\n              reasoning: 'Good for showing correlations',\r\n              confidence: 60\r\n            }\r\n          ]\r\n        });\r\n      } else {\r\n        setAnalysis({\r\n          rowCount: 0,\r\n          columns: [],\r\n          visualizationSuggestions: []\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error analyzing file:', error);\r\n      setError('Failed to analyze file');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateCharts = () => {\r\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\r\n      setError('Please select file and axes first');\r\n      return;\r\n    }\r\n    \r\n    // Close the dialog\r\n    setOpenDialog(false);\r\n    \r\n    // Create preview charts for all chart types\r\n    const previewData = [];\r\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\r\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\r\n        type: chartType,\r\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : 65\r\n      };\r\n      \r\n      previewData.push({\r\n        chartType,\r\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\r\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\r\n        fileId: selectedFile._id,\r\n        confidence: suggestion.confidence,\r\n        xAxis: selectedXAxis,\r\n        yAxis: selectedYAxis,\r\n        file: selectedFile\r\n      });\r\n    });\r\n    \r\n    setPreviewFile(selectedFile);\r\n    setPreviewCharts(previewData);\r\n    \r\n    // Schedule rendering after the DOM updates\r\n    setTimeout(() => {\r\n      renderPreviewCharts(previewData);\r\n    }, 300);\r\n  };\r\n\r\n  const renderPreviewCharts = (charts) => {\r\n    // Clean up existing chart instances\r\n    Object.values(chartPreviewInstances).forEach(instance => {\r\n      if (instance) instance.destroy();\r\n    });\r\n    \r\n    const newInstances = {};\r\n    \r\n    charts.forEach(chart => {\r\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\r\n      if (!canvasRef) return;\r\n      \r\n      const ctx = canvasRef.getContext('2d');\r\n      if (!ctx) return;\r\n      \r\n      try {\r\n        // Sample data for the charts\r\n        const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\r\n        const data = {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: chart.yAxis,\r\n            data: [65, 59, 80, 81, 56, 55],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        };\r\n        \r\n        const chartInstance = new Chart(ctx, {\r\n          type: chart.chartType,\r\n          data: data,\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              title: {\r\n                display: true,\r\n                text: `${chart.yAxis} by ${chart.xAxis}`\r\n              },\r\n              legend: {\r\n                display: chart.chartType !== 'bar',\r\n                position: 'top'\r\n              }\r\n            },\r\n            scales: {\r\n              x: {\r\n                title: {\r\n                  display: true,\r\n                  text: chart.xAxis\r\n                }\r\n              },\r\n              y: {\r\n                title: {\r\n                  display: true,\r\n                  text: chart.yAxis\r\n                },\r\n                beginAtZero: true\r\n              }\r\n            }\r\n          }\r\n        });\r\n        \r\n        newInstances[chart.chartType] = chartInstance;\r\n      } catch (error) {\r\n        console.error(`Error creating ${chart.chartType} chart:`, error);\r\n      }\r\n    });\r\n    \r\n    setChartPreviewInstances(newInstances);\r\n  };\r\n\r\n  const handleSaveChart = async (chart) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Create a basic config from the selected axes\r\n      const config = {\r\n        xAxis: {\r\n          field: chart.xAxis,\r\n          label: chart.xAxis\r\n        },\r\n        yAxis: {\r\n          field: chart.yAxis,\r\n          label: chart.yAxis\r\n        },\r\n        title: chart.name,\r\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\r\n      };\r\n      \r\n      // Send request to create visualization\r\n      const response = await fetch('/api/visualizations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: chart.name,\r\n          description: chart.description,\r\n          fileId: chart.fileId,\r\n          chartType: chart.chartType,\r\n          confidence: chart.confidence,\r\n          config: config\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to create visualization');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Visualization created:', result);\r\n      \r\n      // Refresh visualizations\r\n      await fetchVisualizations();\r\n      \r\n      // Optional: Remove from preview\r\n      // setPreviewCharts(prevCharts => prevCharts.filter(c => c.chartType !== chart.chartType));\r\n    } catch (error) {\r\n      console.error('Error creating visualization:', error);\r\n      setError('Failed to create visualization: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViewVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Visualization details:', data.visualization);\r\n      \r\n      // Fix id inconsistency by ensuring we have _id\r\n      if (data.visualization.id && !data.visualization._id) {\r\n        data.visualization._id = data.visualization.id;\r\n      }\r\n      \r\n      setCurrentVisualization(data.visualization);\r\n      setOpenViewDialog(true);\r\n      \r\n      // We need to render the chart after the dialog is open and DOM is ready\r\n      setTimeout(() => {\r\n        renderChart(data.visualization);\r\n      }, 300);\r\n    } catch (error) {\r\n      console.error('Error viewing visualization:', error);\r\n      alert('Failed to load visualization details');\r\n    }\r\n  };\r\n  \r\n  const handleEditVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCurrentVisualization(data.visualization);\r\n      setOpenEditDialog(true);\r\n    } catch (error) {\r\n      console.error('Error editing visualization:', error);\r\n      alert('Failed to load visualization for editing');\r\n    }\r\n  };\r\n  \r\n  const handleUpdateVisualization = async () => {\r\n    if (!currentVisualization) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: currentVisualization.name,\r\n          description: currentVisualization.description,\r\n          chartType: currentVisualization.chartType,\r\n          config: currentVisualization.config\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update visualization');\r\n      }\r\n      \r\n      // Close dialog and refresh visualizations\r\n      setOpenEditDialog(false);\r\n      setCurrentVisualization(null);\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error updating visualization:', error);\r\n      alert('Failed to update visualization');\r\n    }\r\n  };\r\n  \r\n  const handleCloseViewDialog = () => {\r\n    if (chartInstance) {\r\n      chartInstance.destroy();\r\n      setChartInstance(null);\r\n    }\r\n    setOpenViewDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleCloseEditDialog = () => {\r\n    setOpenEditDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentVisualization(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleDeleteVisualization = async (vizId) => {\r\n    setDeleteTarget(vizId);\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (!deleteTarget) {\r\n      console.error('No delete target set');\r\n      alert('Error: No visualization selected for deletion');\r\n      setOpenDeleteDialog(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Deleting visualization with ID:', deleteTarget);\r\n      \r\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      console.log('Delete response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\r\n        console.error('Delete error details:', errorData);\r\n        throw new Error(errorData.message || 'Failed to delete visualization');\r\n      }\r\n      \r\n      console.log('Visualization deleted successfully');\r\n      alert('Visualization deleted successfully');\r\n      \r\n      // Refresh the list\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error deleting visualization:', error);\r\n      alert(`Failed to delete visualization: ${error.message}`);\r\n    } finally {\r\n      setOpenDeleteDialog(false);\r\n      setDeleteTarget(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenDeleteDialog(false);\r\n    setDeleteTarget(null);\r\n  };\r\n\r\n  const getVisualizationIcon = (type) => {\r\n    const iconSize = { fontSize: 80, opacity: 0.8 };\r\n    const colors = {\r\n      bar: '#1976d2',    // blue\r\n      scatter: '#9c27b0', // purple\r\n      line: '#2e7d32',    // green\r\n      pie: '#ed6c02'      // orange\r\n    };\r\n    \r\n    const iconColor = { color: colors[type] || colors.bar };\r\n    \r\n    switch (type) {\r\n      case 'bar':\r\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'scatter':\r\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'line':\r\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'pie':\r\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      default:\r\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n    }\r\n  };\r\n\r\n  const renderPlaceholder = () => {\r\n    if (loading) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <LinearProgress />\r\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\r\n              Loading...\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    if (visualizations.length === 0) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const renderChart = (visualization) => {\r\n    console.log('Rendering chart for visualization:', visualization);\r\n    \r\n    if (!chartContainerRef.current) {\r\n      console.error('Chart container reference not available');\r\n      return;\r\n    }\r\n    \r\n    // Destroy previous chart if exists\r\n    if (chartInstance) {\r\n      console.log('Destroying previous chart instance');\r\n      chartInstance.destroy();\r\n    }\r\n    \r\n    const ctx = chartContainerRef.current.getContext('2d');\r\n    if (!ctx) {\r\n      console.error('Could not get 2D context from canvas');\r\n      return;\r\n    }\r\n    \r\n    console.log('Chart type:', visualization.chartType);\r\n    console.log('Chart config:', visualization.config);\r\n    \r\n    try {\r\n      // Generate mock data based on the chart type and config\r\n      const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\r\n      const data = {\r\n        labels: labels,\r\n        datasets: [{\r\n          label: visualization.config?.yAxis?.label || 'Value',\r\n          data: [65, 59, 80, 81, 56, 55],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n          ],\r\n          borderWidth: 1\r\n        }]\r\n      };\r\n      \r\n      // Create the chart based on the type\r\n      console.log('Creating new chart');\r\n      const newChart = new Chart(ctx, {\r\n        type: visualization.chartType || 'bar',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: visualization.config?.title || visualization.name\r\n            },\r\n            subtitle: {\r\n              display: !!visualization.config?.subtitle,\r\n              text: visualization.config?.subtitle || ''\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'top'\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.xAxis?.label || 'Category'\r\n              }\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.yAxis?.label || 'Value'\r\n              },\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      console.log('Chart created successfully');\r\n      setChartInstance(newChart);\r\n    } catch (error) {\r\n      console.error('Error creating chart:', error);\r\n      alert('Failed to render chart: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // Clean up chart instance on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [chartInstance]);\r\n\r\n  return (\r\n    <Box sx={{ p: 3, backgroundColor: '#f5f5f5', minHeight: '100vh' }}>\r\n      <PageHeader\r\n        title=\"Visualizations\"\r\n        icon={<ChartIcon />}\r\n        actions={\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateClick}\r\n          >\r\n            Create Visualization\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      {/* Axis Selection Dialog */}\r\n      <Dialog\r\n        open={axisSelectionOpen}\r\n        onClose={() => setAxisSelectionOpen(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Select Data for Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          <Box sx={{ \r\n            mb: 3, \r\n            p: 3, \r\n            bgcolor: '#f5f5f5', \r\n            borderRadius: 2,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between'\r\n          }}>\r\n            <Box>\r\n              <Typography variant=\"h6\">Data Summary</Typography>\r\n              <Typography>\r\n                {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\r\n              </Typography>\r\n            </Box>\r\n            <Chip \r\n              label=\"Ready for visualization\" \r\n              color=\"success\" \r\n              icon={<CheckCircleIcon />} \r\n            />\r\n          </Box>\r\n          \r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Select Data Axes\r\n          </Typography>\r\n          \r\n          <Grid container spacing={3} sx={{ mb: 4 }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                X-Axis (Categories)\r\n              </Typography>\r\n              <Box sx={{ \r\n                border: '1px solid #ddd', \r\n                borderRadius: 1, \r\n                p: 1,\r\n                bgcolor: 'white' \r\n              }}>\r\n                <select \r\n                  value={selectedXAxis}\r\n                  onChange={(e) => setSelectedXAxis(e.target.value)}\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '10px', \r\n                    fontSize: '16px',\r\n                    border: 'none',\r\n                    outline: 'none'\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select X-Axis Column</option>\r\n                  {analysis?.columns?.map(column => (\r\n                    <option key={column} value={column}>{column}</option>\r\n                  ))}\r\n                </select>\r\n              </Box>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Y-Axis (Values)\r\n              </Typography>\r\n              <Box sx={{ \r\n                border: '1px solid #ddd', \r\n                borderRadius: 1, \r\n                p: 1,\r\n                bgcolor: 'white' \r\n              }}>\r\n                <select \r\n                  value={selectedYAxis}\r\n                  onChange={(e) => setSelectedYAxis(e.target.value)}\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '10px', \r\n                    fontSize: '16px',\r\n                    border: 'none',\r\n                    outline: 'none'\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select Y-Axis Column</option>\r\n                  {analysis?.columns?.map(column => (\r\n                    <option key={column} value={column}>{column}</option>\r\n                  ))}\r\n                </select>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setAxisSelectionOpen(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={!selectedXAxis || !selectedYAxis}\r\n            onClick={handleGenerateCharts}\r\n          >\r\n            Generate Charts\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Main content */}\r\n      {previewCharts.length > 0 && (\r\n        <Box sx={{ mb: 4 }}>\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between',\r\n            mb: 2\r\n          }}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Chart Preview: {selectedXAxis} vs {selectedYAxis}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n              Data from: {previewFile?.name}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* All Chart Types */}\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\r\n            All Chart Types\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            {previewCharts.map((chart) => (\r\n              <Grid item xs={12} sm={6} key={chart.chartType}>\r\n                <Card sx={{ \r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n                  borderRadius: 2,\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <CardHeader\r\n                    title={chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1) + ' Chart'}\r\n                    subheader={`${chart.yAxis} by ${chart.xAxis}`}\r\n                    action={\r\n                      <Chip \r\n                        label={`${chart.confidence}% match`} \r\n                        color={chart.confidence > 80 ? 'success' : 'primary'} \r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    sx={{ \r\n                      bgcolor: 'primary.light', \r\n                      color: 'white',\r\n                      '& .MuiCardHeader-subheader': { color: 'rgba(255,255,255,0.8)' }\r\n                    }}\r\n                  />\r\n                  <Box sx={{ p: 2, height: 250, position: 'relative' }}>\r\n                    <canvas \r\n                      ref={el => chartPreviewRefs.current[chart.chartType] = el}\r\n                      style={{ width: '100%', height: '100%' }}\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ p: 2, mt: 'auto' }}>\r\n                    <Button \r\n                      variant=\"contained\" \r\n                      fullWidth\r\n                      onClick={() => handleSaveChart(chart)}\r\n                    >\r\n                      Save Visualization\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          {/* Recommended Charts */}\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n            Recommended Charts\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            {previewCharts\r\n              .sort((a, b) => b.confidence - a.confidence)\r\n              .slice(0, 2) // Take only top 2 recommendations\r\n              .map((chart) => (\r\n                <Grid item xs={12} sm={6} md={4} key={`rec-${chart.chartType}`}>\r\n                  <Card sx={{ \r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n                    borderRadius: 2,\r\n                    overflow: 'hidden',\r\n                    border: '2px solid',\r\n                    borderColor: 'primary.main'\r\n                  }}>\r\n                    <Box sx={{ \r\n                      p: 2, \r\n                      bgcolor: 'primary.main', \r\n                      color: 'white',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'space-between'\r\n                    }}>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <CheckCircleIcon sx={{ mr: 1 }} />\r\n                        <Typography variant=\"subtitle1\">\r\n                          Recommended: {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Chip \r\n                        label={`${chart.confidence}%`}\r\n                        size=\"small\"\r\n                        sx={{ bgcolor: 'white', color: 'primary.dark' }}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ p: 2 }}>\r\n                      <Typography variant=\"body2\" gutterBottom>\r\n                        {chart.chartType === 'bar' && `Great for comparing ${chart.yAxis} values across ${chart.xAxis} categories`}\r\n                        {chart.chartType === 'line' && `Ideal for showing ${chart.yAxis} trends over ${chart.xAxis}`}\r\n                        {chart.chartType === 'pie' && `Perfect for showing ${chart.yAxis} distribution among ${chart.xAxis} categories`}\r\n                        {chart.chartType === 'scatter' && `Best for exploring relationship between ${chart.xAxis} and ${chart.yAxis}`}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ p: 2, mt: 'auto' }}>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        fullWidth\r\n                        onClick={() => handleSaveChart(chart)}\r\n                      >\r\n                        Use This Recommendation\r\n                      </Button>\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n\r\n      {visualizations.length === 0 && !loading && previewCharts.length === 0 ? (\r\n        <Box \r\n          sx={{ \r\n            mt: 4, \r\n            p: 4, \r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            alignItems: 'center', \r\n            justifyContent: 'center',\r\n            backgroundColor: 'white',\r\n            borderRadius: 2,\r\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\r\n            minHeight: '300px'\r\n          }}\r\n        >\r\n          <TimelineIcon sx={{ fontSize: 64, color: 'primary.light', mb: 2 }} />\r\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n            No Visualizations Yet\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n            Create your first visualization to see it displayed here.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => {\r\n              setOpenDialog(true);\r\n            }}\r\n          >\r\n            Create Visualization\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        !previewCharts.length > 0 && (\r\n          <Grid container spacing={3} sx={{ mt: 2 }}>\r\n            {loading ? (\r\n              <Grid item xs={12}>\r\n                <Box sx={{ width: '100%', mt: 2 }}>\r\n                  <LinearProgress />\r\n                  <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\r\n                    Loading visualizations...\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            ) : (\r\n              visualizations.map((viz) => (\r\n                <Grid item xs={12} sm={6} lg={4} key={viz._id}>\r\n                  <Card sx={{ \r\n                    height: '100%', \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    transition: 'transform 0.2s, box-shadow 0.2s',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-5px)',\r\n                      boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\r\n                      cursor: 'pointer'\r\n                    } \r\n                  }} onClick={() => handleViewVisualization(viz)}>\r\n                    <CardHeader \r\n                      title={viz.name}\r\n                      subheader={`Created: ${new Date(viz.createdAt).toLocaleDateString()}`}\r\n                      action={\r\n                        <Chip \r\n                          label={`${viz.confidence || 90}% match`} \r\n                          color=\"primary\" \r\n                          size=\"small\"\r\n                          sx={{ fontWeight: 'bold' }}\r\n                        />\r\n                      }\r\n                    />\r\n                    <Box sx={{ \r\n                      p: 2, \r\n                      pt: 0, \r\n                      height: 200, \r\n                      position: 'relative',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }}>\r\n                      {getVisualizationIcon(viz.chartType)}\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      p: 2, \r\n                      bgcolor: 'primary.main', \r\n                      color: 'white',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      mt: 'auto'\r\n                    }}>\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mr: 1 }}>\r\n                        {viz.chartType.charAt(0).toUpperCase() + viz.chartType.slice(1)} Chart\r\n                      </Typography>\r\n                      <Box sx={{ flexGrow: 1 }} />\r\n                      <Box sx={{ display: 'flex' }}>\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleEditVisualization(viz);\r\n                          }}\r\n                          sx={{ color: 'white', mr: 1 }}\r\n                        >\r\n                          <EditIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteVisualization(viz._id);\r\n                          }}\r\n                          sx={{ color: 'white' }}\r\n                        >\r\n                          <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))\r\n            )}\r\n          </Grid>\r\n        )\r\n      )}\r\n\r\n      {/* File Selection Dialog */}\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Select File for Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 1 }}>\r\n            Choose a file to analyze and visualize:\r\n          </Typography>\r\n          \r\n          <List sx={{ bgcolor: '#f5f5f5', borderRadius: 2 }}>\r\n            {files.map((file) => (\r\n              <ListItem\r\n                key={file._id}\r\n                button\r\n                sx={{ \r\n                  mb: 1, \r\n                  bgcolor: 'white', \r\n                  borderRadius: 1,\r\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.05)',\r\n                  '&:hover': {\r\n                    bgcolor: 'rgba(25, 118, 210, 0.08)'\r\n                  }\r\n                }}\r\n                onClick={() => {\r\n                  handleFileSelect(file);\r\n                  setAxisSelectionOpen(true);\r\n                  setOpenDialog(false);\r\n                }}\r\n              >\r\n                <ListItemIcon>\r\n                  <ChartIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={file.name}\r\n                  secondary={`${file.type} - ${(file.size / 1024).toFixed(2)} KB`}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* View Visualization Dialog */}\r\n      <Dialog\r\n        open={openViewDialog}\r\n        onClose={handleCloseViewDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\r\n          <Typography variant=\"h5\">\r\n            {currentVisualization?.name || 'View Visualization'}\r\n          </Typography>\r\n        </Box>\r\n        <DialogContent sx={{ p: 0 }}>\r\n          {currentVisualization && (\r\n            <Box>\r\n              <Box sx={{ height: 400, p: 3 }}>\r\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\r\n              </Box>\r\n              \r\n              <Box sx={{ p: 3, bgcolor: '#f5f5f5' }}>\r\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\r\n                </Typography>\r\n                \r\n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n                  <Chip \r\n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\r\n                    color=\"primary\"\r\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Chip \r\n                    label={`${currentVisualization.confidence || 90}% confidence`}\r\n                    color=\"success\"\r\n                  />\r\n                  <Box sx={{ flexGrow: 1 }} />\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<EditIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleEditVisualization(currentVisualization);\r\n                    }}\r\n                    sx={{ mr: 1 }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"error\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleDeleteVisualization(currentVisualization._id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n      \r\n      {/* Edit Visualization Dialog - simplified */}\r\n      <Dialog\r\n        open={openEditDialog}\r\n        onClose={handleCloseEditDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Edit Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3, mt: 2 }}>\r\n          {currentVisualization && (\r\n            <Box sx={{ pt: 1 }}>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={currentVisualization.name || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter a descriptive name\"\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px'\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={currentVisualization.description || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe what insights this visualization provides\"\r\n                  rows={3}\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px'\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\r\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\r\n                    <Box \r\n                      key={type}\r\n                      onClick={() => setCurrentVisualization({\r\n                        ...currentVisualization,\r\n                        chartType: type\r\n                      })}\r\n                      sx={{ \r\n                        border: '2px solid',\r\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\r\n                        borderRadius: 2,\r\n                        p: 2,\r\n                        width: '110px',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        cursor: 'pointer',\r\n                        bgcolor: currentVisualization.chartType === type ? 'rgba(25, 118, 210, 0.1)' : 'transparent'\r\n                      }}\r\n                    >\r\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      <Typography variant=\"body2\">\r\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={handleUpdateVisualization}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCancelDelete}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\r\n          Delete Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ mt: 2, p: 3 }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\r\n            <Typography variant=\"h6\">\r\n              Are you sure?\r\n            </Typography>\r\n          </Box>\r\n          <Typography>\r\n            This visualization will be permanently deleted. This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}