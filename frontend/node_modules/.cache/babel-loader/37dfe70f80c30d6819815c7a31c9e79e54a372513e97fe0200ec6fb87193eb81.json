{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\test\\\\frontend\\\\src\\\\components\\\\file\\\\FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Box, Typography, LinearProgress, Alert, Paper } from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploader({\n  onUploadSuccess,\n  allowedTypes\n}) {\n  _s();\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const onDrop = useCallback(async acceptedFiles => {\n    const file = acceptedFiles[0]; // Handle one file at a time\n\n    if (!allowedTypes.includes(file.type)) {\n      setError(`File type not supported. Please upload ${allowedTypes.join(', ')} files.`);\n      return;\n    }\n    try {\n      setError(null);\n      setSuccess(false);\n      setUploadProgress(0);\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch('/api/files/upload', {\n        method: 'POST',\n        body: formData,\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(progress);\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n      const result = await response.json();\n      setSuccess(true);\n      setUploadProgress(100);\n      onUploadSuccess(result);\n    } catch (err) {\n      setError(err.message || 'Failed to upload file');\n      setUploadProgress(0);\n    }\n  }, [allowedTypes, onUploadSuccess]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: allowedTypes.join(','),\n    multiple: false\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: \"File uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      ...getRootProps(),\n      sx: {\n        p: 3,\n        border: '2px dashed',\n        borderColor: isDragActive ? 'primary.main' : 'grey.300',\n        backgroundColor: isDragActive ? 'action.hover' : 'background.paper',\n        cursor: 'pointer',\n        transition: 'all 0.2s ease',\n        '&:hover': {\n          borderColor: 'primary.main',\n          backgroundColor: 'action.hover'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n          sx: {\n            fontSize: 48,\n            color: 'primary.main',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: isDragActive ? 'Drop the file here' : 'Drag and drop a file here, or click to select'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"Supported formats: CSV, JSON, and text files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: uploadProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        align: \"center\",\n        sx: {\n          mt: 1\n        },\n        children: [uploadProgress, \"% uploaded\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"+j8df7RaK1vTjshvKNSxa1eTCTQ=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","Box","Typography","LinearProgress","Alert","Paper","CloudUploadIcon","jsxDEV","_jsxDEV","FileUploader","onUploadSuccess","allowedTypes","_s","uploadProgress","setUploadProgress","error","setError","success","setSuccess","onDrop","acceptedFiles","file","includes","type","join","formData","FormData","append","response","fetch","method","body","onUploadProgress","progressEvent","progress","Math","round","loaded","total","ok","Error","result","json","err","message","getRootProps","getInputProps","isDragActive","accept","multiple","sx","width","children","severity","mb","fileName","_jsxFileName","lineNumber","columnNumber","p","border","borderColor","backgroundColor","cursor","transition","display","flexDirection","alignItems","textAlign","fontSize","color","variant","gutterBottom","mt","value","align","_c","$RefreshReg$"],"sources":["E:/git_projects/test/frontend/src/components/file/FileUploader.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  LinearProgress,\r\n  Alert,\r\n  Paper,\r\n} from '@mui/material';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nfunction FileUploader({ onUploadSuccess, allowedTypes }) {\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    const file = acceptedFiles[0]; // Handle one file at a time\r\n    \r\n    if (!allowedTypes.includes(file.type)) {\r\n      setError(`File type not supported. Please upload ${allowedTypes.join(', ')} files.`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n      setSuccess(false);\r\n      setUploadProgress(0);\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      const response = await fetch('/api/files/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n        onUploadProgress: (progressEvent) => {\r\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(progress);\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Upload failed');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setSuccess(true);\r\n      setUploadProgress(100);\r\n      onUploadSuccess(result);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to upload file');\r\n      setUploadProgress(0);\r\n    }\r\n  }, [allowedTypes, onUploadSuccess]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: allowedTypes.join(','),\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n          File uploaded successfully!\r\n        </Alert>\r\n      )}\r\n\r\n      <Paper\r\n        {...getRootProps()}\r\n        sx={{\r\n          p: 3,\r\n          border: '2px dashed',\r\n          borderColor: isDragActive ? 'primary.main' : 'grey.300',\r\n          backgroundColor: isDragActive ? 'action.hover' : 'background.paper',\r\n          cursor: 'pointer',\r\n          transition: 'all 0.2s ease',\r\n          '&:hover': {\r\n            borderColor: 'primary.main',\r\n            backgroundColor: 'action.hover',\r\n          },\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <CloudUploadIcon\r\n            sx={{ fontSize: 48, color: 'primary.main', mb: 2 }}\r\n          />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {isDragActive\r\n              ? 'Drop the file here'\r\n              : 'Drag and drop a file here, or click to select'}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Supported formats: CSV, JSON, and text files\r\n          </Typography>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {uploadProgress > 0 && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <LinearProgress variant=\"determinate\" value={uploadProgress} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 1 }}>\r\n            {uploadProgress}% uploaded\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FileUploader; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}