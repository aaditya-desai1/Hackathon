{"ast":null,"code":"var _jsxFileName = \"E:\\\\git_projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Visualizations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, Card, CardContent, CardHeader, CardActions, LinearProgress, List, ListItem, ListItemText, ListItemIcon, Chip, Divider, Alert, IconButton, useTheme, CircularProgress } from '@mui/material';\nimport { BarChart as ChartIcon, Add as AddIcon, Timeline as TimelineIcon, BubbleChart as ScatterIcon, ShowChart as LineIcon, PieChart as PieIcon, Delete as DeleteIcon, Edit as EditIcon, CheckCircle as CheckCircleIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport PageHeader from '../components/common/PageHeader';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Visualizations() {\n  _s();\n  var _analysis$columns, _analysis$columns2, _analysis$columns3;\n  const theme = useTheme();\n  const location = useLocation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [deleteTarget, setDeleteTarget] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [analysis, setAnalysis] = useState(null);\n  const [error, setError] = useState(null);\n  const [openViewDialog, setOpenViewDialog] = useState(false);\n  const [currentVisualization, setCurrentVisualization] = useState(null);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const chartContainerRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [selectedXAxis, setSelectedXAxis] = useState('');\n  const [selectedYAxis, setSelectedYAxis] = useState('');\n  const [showChartOptions, setShowChartOptions] = useState(false);\n  const [previewCharts, setPreviewCharts] = useState([]);\n  const [previewFile, setPreviewFile] = useState(null);\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\n  const chartPreviewRefs = useRef({});\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\n  useEffect(() => {\n    var _location$state;\n    fetchFiles();\n    fetchVisualizations();\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.openCreateDialog) {\n      setOpenDialog(true);\n      window.history.replaceState({}, document.title);\n    }\n  }, [location]);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      const data = await response.json();\n      setFiles(data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Failed to fetch files');\n    }\n  };\n  const fetchVisualizations = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/visualizations');\n      const data = await response.json();\n      console.log('Fetched visualizations:', data);\n      setVisualizations(data.visualizations || []);\n    } catch (error) {\n      console.error('Error fetching visualizations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = async file => {\n    setSelectedFile(file);\n    setLoading(true);\n    setError(null);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setShowChartOptions(false);\n    try {\n      console.log('Analyzing file with ID:', file._id);\n      const response = await fetch(`/api/files/${file._id}/analyze`);\n      console.log('Analysis response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Analysis error details:', errorData);\n        throw new Error(errorData.error || 'Analysis failed');\n      }\n      const analysisData = await response.json();\n      console.log('Analysis result:', analysisData);\n\n      // Check the structure of analysis data and adapt as needed\n      if (analysisData.success && analysisData.analysis) {\n        var _analysisData$analysi;\n        setAnalysis({\n          rowCount: ((_analysisData$analysi = analysisData.analysis.summary) === null || _analysisData$analysi === void 0 ? void 0 : _analysisData$analysi.totalRows) || 0,\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\n          visualizationSuggestions: [{\n            type: 'bar',\n            description: 'Bar Chart',\n            reasoning: 'Based on data structure',\n            confidence: 85\n          }, {\n            type: 'line',\n            description: 'Line Chart',\n            reasoning: 'Good for trends over time',\n            confidence: 75\n          }, {\n            type: 'pie',\n            description: 'Pie Chart',\n            reasoning: 'Good for showing proportions',\n            confidence: 65\n          }, {\n            type: 'scatter',\n            description: 'Scatter Plot',\n            reasoning: 'Good for showing correlations',\n            confidence: 60\n          }]\n        });\n\n        // Automatically open axis selection after successful analysis\n        setAxisSelectionOpen(true);\n      } else {\n        setAnalysis({\n          rowCount: 0,\n          columns: [],\n          visualizationSuggestions: []\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing file:', error);\n      setError('Failed to analyze file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateClick = () => {\n    setOpenDialog(true);\n    setPreviewCharts([]);\n    setSelectedXAxis('');\n    setSelectedYAxis('');\n    setAxisSelectionOpen(false);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setAxisSelectionOpen(false);\n    setSelectedFile(null);\n    setAnalysis(null);\n  };\n  const handleGenerateCharts = () => {\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\n      setError('Please select file and axes first');\n      return;\n    }\n\n    // Close both dialogs\n    setAxisSelectionOpen(false);\n    setOpenDialog(false);\n\n    // Create preview charts for all chart types\n    const previewData = [];\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\n        type: chartType,\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : 65\n      };\n      previewData.push({\n        chartType,\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\n        fileId: selectedFile._id,\n        confidence: suggestion.confidence,\n        xAxis: selectedXAxis,\n        yAxis: selectedYAxis,\n        file: selectedFile\n      });\n    });\n    setPreviewFile(selectedFile);\n    setPreviewCharts(previewData);\n\n    // Schedule rendering after the DOM updates\n    setTimeout(() => {\n      renderPreviewCharts(previewData);\n    }, 300);\n  };\n  const renderPreviewCharts = charts => {\n    // Clean up existing chart instances\n    Object.values(chartPreviewInstances).forEach(instance => {\n      if (instance) instance.destroy();\n    });\n    const newInstances = {};\n    charts.forEach(chart => {\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\n      if (!canvasRef) return;\n      const ctx = canvasRef.getContext('2d');\n      if (!ctx) return;\n      try {\n        // Sample data for the charts\n        const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n        const data = {\n          labels: labels,\n          datasets: [{\n            label: chart.yAxis,\n            data: [65, 59, 80, 81, 56, 55],\n            backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        };\n        const chartInstance = new Chart(ctx, {\n          type: chart.chartType,\n          data: data,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              title: {\n                display: true,\n                text: `${chart.yAxis} by ${chart.xAxis}`,\n                color: theme.palette.text.primary\n              },\n              legend: {\n                display: chart.chartType !== 'bar',\n                position: 'top',\n                labels: {\n                  color: theme.palette.text.primary\n                }\n              }\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: chart.xAxis,\n                  color: theme.palette.text.primary\n                },\n                ticks: {\n                  color: theme.palette.text.secondary\n                },\n                grid: {\n                  color: theme.palette.divider\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: chart.yAxis,\n                  color: theme.palette.text.primary\n                },\n                ticks: {\n                  color: theme.palette.text.secondary\n                },\n                grid: {\n                  color: theme.palette.divider\n                },\n                beginAtZero: true\n              }\n            }\n          }\n        });\n        newInstances[chart.chartType] = chartInstance;\n      } catch (error) {\n        console.error(`Error creating ${chart.chartType} chart:`, error);\n      }\n    });\n    setChartPreviewInstances(newInstances);\n  };\n  const handleSaveChart = async chart => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Create a basic config from the selected axes\n      const config = {\n        xAxis: {\n          field: chart.xAxis,\n          label: chart.xAxis\n        },\n        yAxis: {\n          field: chart.yAxis,\n          label: chart.yAxis\n        },\n        title: chart.name,\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\n      };\n      console.log('Creating visualization with config:', {\n        name: chart.name,\n        description: chart.description,\n        fileId: chart.fileId,\n        chartType: chart.chartType,\n        confidence: chart.confidence,\n        config: config\n      });\n\n      // Send request to create visualization\n      const response = await fetch('/api/visualizations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: chart.name,\n          description: chart.description,\n          fileId: chart.fileId,\n          chartType: chart.chartType,\n          confidence: chart.confidence,\n          config: config,\n          isAIGenerated: true\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create visualization');\n      }\n      const result = await response.json();\n      console.log('Visualization created:', result);\n\n      // Show success message\n      alert('Visualization saved successfully!');\n\n      // Refresh visualizations\n      await fetchVisualizations();\n\n      // Clear preview charts after successful save\n      setPreviewCharts([]);\n    } catch (error) {\n      console.error('Error creating visualization:', error);\n      setError('Failed to create visualization: ' + error.message);\n      alert('Error: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      console.log('Visualization details:', data.visualization);\n\n      // Fix id inconsistency by ensuring we have _id\n      if (data.visualization.id && !data.visualization._id) {\n        data.visualization._id = data.visualization.id;\n      }\n      setCurrentVisualization(data.visualization);\n      setOpenViewDialog(true);\n\n      // We need to render the chart after the dialog is open and DOM is ready\n      setTimeout(() => {\n        renderChart(data.visualization);\n      }, 300);\n    } catch (error) {\n      console.error('Error viewing visualization:', error);\n      alert('Failed to load visualization details');\n    }\n  };\n  const handleEditVisualization = async viz => {\n    try {\n      // Get the visualization details\n      const response = await fetch(`/api/visualizations/${viz._id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visualization details');\n      }\n      const data = await response.json();\n      setCurrentVisualization(data.visualization);\n      setOpenEditDialog(true);\n    } catch (error) {\n      console.error('Error editing visualization:', error);\n      alert('Failed to load visualization for editing');\n    }\n  };\n  const handleUpdateVisualization = async () => {\n    if (!currentVisualization) return;\n    try {\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: currentVisualization.name,\n          description: currentVisualization.description,\n          chartType: currentVisualization.chartType,\n          config: currentVisualization.config\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update visualization');\n      }\n\n      // Close dialog and refresh visualizations\n      setOpenEditDialog(false);\n      setCurrentVisualization(null);\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error updating visualization:', error);\n      alert('Failed to update visualization');\n    }\n  };\n  const handleCloseViewDialog = () => {\n    if (chartInstance) {\n      chartInstance.destroy();\n      setChartInstance(null);\n    }\n    setOpenViewDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setCurrentVisualization(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentVisualization(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteVisualization = async vizId => {\n    setDeleteTarget(vizId);\n    setOpenDeleteDialog(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!deleteTarget) {\n      console.error('No delete target set');\n      alert('Error: No visualization selected for deletion');\n      setOpenDeleteDialog(false);\n      return;\n    }\n    try {\n      console.log('Deleting visualization with ID:', deleteTarget);\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Delete response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Delete error details:', errorData);\n        throw new Error(errorData.message || 'Failed to delete visualization');\n      }\n      console.log('Visualization deleted successfully');\n      alert('Visualization deleted successfully');\n\n      // Refresh the list\n      await fetchVisualizations();\n    } catch (error) {\n      console.error('Error deleting visualization:', error);\n      alert(`Failed to delete visualization: ${error.message}`);\n    } finally {\n      setOpenDeleteDialog(false);\n      setDeleteTarget(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setOpenDeleteDialog(false);\n    setDeleteTarget(null);\n  };\n  const getVisualizationIcon = type => {\n    const iconSize = {\n      fontSize: 80,\n      opacity: 0.8\n    };\n    const colors = {\n      bar: '#1976d2',\n      // blue\n      scatter: '#9c27b0',\n      // purple\n      line: '#2e7d32',\n      // green\n      pie: '#ed6c02' // orange\n    };\n    const iconColor = {\n      color: colors[type] || colors.bar\n    };\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(ChartIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 16\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(PieIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TimelineIcon, {\n          sx: {\n            ...iconSize,\n            ...iconColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderPlaceholder = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this);\n    }\n    if (visualizations.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 4\n          },\n          children: \"No visualizations yet. Click the \\\"Create Visualization\\\" button to create one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderChart = visualization => {\n    console.log('Rendering chart for visualization:', visualization);\n    if (!chartContainerRef.current) {\n      console.error('Chart container reference not available');\n      return;\n    }\n\n    // Destroy previous chart if exists\n    if (chartInstance) {\n      console.log('Destroying previous chart instance');\n      chartInstance.destroy();\n    }\n    const ctx = chartContainerRef.current.getContext('2d');\n    if (!ctx) {\n      console.error('Could not get 2D context from canvas');\n      return;\n    }\n    console.log('Chart type:', visualization.chartType);\n    console.log('Chart config:', visualization.config);\n    try {\n      var _visualization$config, _visualization$config2, _visualization$config3, _visualization$config4, _visualization$config5, _visualization$config6, _visualization$config7, _visualization$config8, _visualization$config9;\n      // Generate mock data based on the chart type and config\n      const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n      const data = {\n        labels: labels,\n        datasets: [{\n          label: ((_visualization$config = visualization.config) === null || _visualization$config === void 0 ? void 0 : (_visualization$config2 = _visualization$config.yAxis) === null || _visualization$config2 === void 0 ? void 0 : _visualization$config2.label) || 'Value',\n          data: [65, 59, 80, 81, 56, 55],\n          backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      };\n\n      // Create the chart based on the type\n      console.log('Creating new chart');\n      const newChart = new Chart(ctx, {\n        type: visualization.chartType || 'bar',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            title: {\n              display: true,\n              text: ((_visualization$config3 = visualization.config) === null || _visualization$config3 === void 0 ? void 0 : _visualization$config3.title) || visualization.name,\n              color: theme.palette.text.primary\n            },\n            subtitle: {\n              display: !!((_visualization$config4 = visualization.config) !== null && _visualization$config4 !== void 0 && _visualization$config4.subtitle),\n              text: ((_visualization$config5 = visualization.config) === null || _visualization$config5 === void 0 ? void 0 : _visualization$config5.subtitle) || '',\n              color: theme.palette.text.secondary\n            },\n            legend: {\n              display: true,\n              position: 'top',\n              labels: {\n                color: theme.palette.text.primary\n              }\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: ((_visualization$config6 = visualization.config) === null || _visualization$config6 === void 0 ? void 0 : (_visualization$config7 = _visualization$config6.xAxis) === null || _visualization$config7 === void 0 ? void 0 : _visualization$config7.label) || 'Category',\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.divider\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: ((_visualization$config8 = visualization.config) === null || _visualization$config8 === void 0 ? void 0 : (_visualization$config9 = _visualization$config8.yAxis) === null || _visualization$config9 === void 0 ? void 0 : _visualization$config9.label) || 'Value',\n                color: theme.palette.text.primary\n              },\n              ticks: {\n                color: theme.palette.text.secondary\n              },\n              grid: {\n                color: theme.palette.divider\n              },\n              beginAtZero: true\n            }\n          }\n        }\n      });\n      console.log('Chart created successfully');\n      setChartInstance(newChart);\n    } catch (error) {\n      console.error('Error creating chart:', error);\n      alert('Failed to render chart: ' + error.message);\n    }\n  };\n\n  // Clean up chart instance on component unmount\n  useEffect(() => {\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      Object.values(chartPreviewInstances).forEach(instance => {\n        if (instance) instance.destroy();\n      });\n    };\n  }, [chartInstance, chartPreviewInstances]);\n\n  // Re-render charts when theme changes\n  useEffect(() => {\n    if (currentVisualization && openViewDialog) {\n      setTimeout(() => {\n        renderChart(currentVisualization);\n      }, 300);\n    }\n    if (previewCharts.length > 0) {\n      setTimeout(() => {\n        renderPreviewCharts(previewCharts);\n      }, 300);\n    }\n  }, [theme.palette.mode]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: 'background.default',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Visualizations\",\n      icon: /*#__PURE__*/_jsxDEV(ChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 15\n      }, this),\n      actions: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 24\n        }, this),\n        onClick: handleCreateClick,\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: axisSelectionOpen,\n      onClose: () => {\n        setAxisSelectionOpen(false);\n        setError(null);\n      },\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Select Data for Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              p: 3,\n              bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : '#f5f5f5',\n              borderRadius: 2,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Data Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [analysis === null || analysis === void 0 ? void 0 : analysis.rowCount, \" rows analyzed across \", analysis === null || analysis === void 0 ? void 0 : (_analysis$columns = analysis.columns) === null || _analysis$columns === void 0 ? void 0 : _analysis$columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Ready for visualization\",\n              color: \"success\",\n              icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select Data Axes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"X-Axis (Categories)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: 'divider',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedXAxis,\n                  onChange: e => setSelectedXAxis(e.target.value),\n                  style: {\n                    width: '100%',\n                    padding: '10px',\n                    fontSize: '16px',\n                    border: 'none',\n                    outline: 'none',\n                    backgroundColor: 'transparent',\n                    color: theme.palette.text.primary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select X-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns2 = analysis.columns) === null || _analysis$columns2 === void 0 ? void 0 : _analysis$columns2.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 851,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 836,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Y-Axis (Values)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  border: '1px solid',\n                  borderColor: 'divider',\n                  borderRadius: 1,\n                  p: 1,\n                  bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedYAxis,\n                  onChange: e => setSelectedYAxis(e.target.value),\n                  style: {\n                    width: '100%',\n                    padding: '10px',\n                    fontSize: '16px',\n                    border: 'none',\n                    outline: 'none',\n                    backgroundColor: 'transparent',\n                    color: theme.palette.text.primary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Y-Axis Column\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 23\n                  }, this), analysis === null || analysis === void 0 ? void 0 : (_analysis$columns3 = analysis.columns) === null || _analysis$columns3 === void 0 ? void 0 : _analysis$columns3.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: column,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 883,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            setAxisSelectionOpen(false);\n            setError(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: !selectedXAxis || !selectedYAxis || loading,\n          onClick: handleGenerateCharts,\n          children: \"Generate Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this), previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"Chart Preview: \", selectedXAxis, \" vs \", selectedYAxis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: [\"Data from: \", previewFile === null || previewFile === void 0 ? void 0 : previewFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          mt: 3\n        },\n        children: \"All Chart Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: previewCharts.map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n              borderRadius: 2,\n              overflow: 'hidden',\n              bgcolor: 'background.paper'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1) + ' Chart',\n              subheader: `${chart.yAxis} by ${chart.xAxis}`,\n              action: /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${chart.confidence}% match`,\n                color: chart.confidence > 80 ? 'success' : 'primary',\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 23\n              }, this),\n              sx: {\n                bgcolor: 'primary.main',\n                color: 'white',\n                '& .MuiCardHeader-subheader': {\n                  color: 'rgba(255,255,255,0.8)'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                height: 250,\n                position: 'relative',\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: el => chartPreviewRefs.current[chart.chartType] = el,\n                style: {\n                  width: '100%',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                mt: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: () => handleSaveChart(chart),\n                children: \"Save Visualization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 17\n          }, this)\n        }, chart.chartType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          mt: 4\n        },\n        children: \"Recommended Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: previewCharts.sort((a, b) => b.confidence - a.confidence).slice(0, 2) // Take only top 2 recommendations\n        .map(chart => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n              borderRadius: 2,\n              overflow: 'hidden',\n              border: '2px solid',\n              borderColor: 'primary.main',\n              bgcolor: 'background.paper'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                bgcolor: 'primary.main',\n                color: 'white',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1011,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: [\"Recommended: \", chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${chart.confidence}%`,\n                size: \"small\",\n                sx: {\n                  bgcolor: 'white',\n                  color: 'primary.dark'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : theme.palette.grey[50]\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                gutterBottom: true,\n                children: [chart.chartType === 'bar' && `Great for comparing ${chart.yAxis} values across ${chart.xAxis} categories`, chart.chartType === 'line' && `Ideal for showing ${chart.yAxis} trends over ${chart.xAxis}`, chart.chartType === 'pie' && `Perfect for showing ${chart.yAxis} distribution among ${chart.xAxis} categories`, chart.chartType === 'scatter' && `Best for exploring relationship between ${chart.xAxis} and ${chart.yAxis}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                mt: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: () => handleSaveChart(chart),\n                children: \"Use This Recommendation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 19\n          }, this)\n        }, `rec-${chart.chartType}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 9\n    }, this), visualizations.length === 0 && !loading && previewCharts.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        borderRadius: 2,\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\n        minHeight: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TimelineIcon, {\n        sx: {\n          fontSize: 64,\n          color: 'primary.light',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"No Visualizations Yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 3\n        },\n        children: \"Create your first visualization to see it displayed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 24\n        }, this),\n        onClick: () => {\n          setOpenDialog(true);\n        },\n        children: \"Create Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 9\n    }, this) : !previewCharts.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 2\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            align: \"center\",\n            color: \"text.secondary\",\n            children: \"Loading visualizations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 15\n      }, this) : visualizations.map(viz => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            transition: 'transform 0.2s, box-shadow 0.2s',\n            '&:hover': {\n              transform: 'translateY(-5px)',\n              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n              cursor: 'pointer'\n            }\n          },\n          onClick: () => handleViewVisualization(viz),\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: viz.name,\n            subheader: `Created: ${new Date(viz.createdAt).toLocaleDateString()}`,\n            action: /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${viz.confidence || 90}% match`,\n              color: \"primary\",\n              size: \"small\",\n              sx: {\n                fontWeight: 'bold'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              pt: 0,\n              height: 200,\n              position: 'relative',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: getVisualizationIcon(viz.chartType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              bgcolor: 'primary.main',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              mt: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 'bold',\n                mr: 1\n              },\n              children: [viz.chartType.charAt(0).toUpperCase() + viz.chartType.slice(1), \" Chart\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditVisualization(viz);\n                },\n                sx: {\n                  color: 'white',\n                  mr: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1148,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteVisualization(viz._id);\n                },\n                sx: {\n                  color: 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1158,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 19\n        }, this)\n      }, viz._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          bgcolor: 'background.paper'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Select File for Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 3\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            mt: 1\n          },\n          children: \"Choose a file to analyze and visualize:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : '#f5f5f5',\n            borderRadius: 2\n          },\n          children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            sx: {\n              mb: 1,\n              bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white',\n              borderRadius: 1,\n              boxShadow: '0 2px 5px rgba(0,0,0,0.05)',\n              '&:hover': {\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(25, 118, 210, 0.08)'\n              }\n            },\n            onClick: () => handleFileSelect(file),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(ChartIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1221,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: file.name,\n              secondary: `${file.type} - ${(file.size / 1024).toFixed(2)} KB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 19\n            }, this)]\n          }, file._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openViewDialog,\n      onClose: handleCloseViewDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2,\n          overflow: 'hidden'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white',\n          py: 2,\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: (currentVisualization === null || currentVisualization === void 0 ? void 0 : currentVisualization.name) || 'View Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 0\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartContainerRef,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Data Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 2\n              },\n              children: currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3,\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`,\n                color: \"primary\",\n                icon: getVisualizationIcon(currentVisualization.chartType),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentVisualization.confidence || 90}% confidence`,\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1284,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleEditVisualization(currentVisualization);\n                },\n                sx: {\n                  mr: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1296,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  handleCloseViewDialog();\n                  handleDeleteVisualization(currentVisualization._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'primary.main',\n          color: 'white'\n        },\n        children: \"Edit Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          p: 3,\n          mt: 2\n        },\n        children: currentVisualization && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Visualization Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: currentVisualization.name || '',\n              onChange: handleInputChange,\n              placeholder: \"Enter a descriptive name\",\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: currentVisualization.description || '',\n              onChange: handleInputChange,\n              placeholder: \"Describe what insights this visualization provides\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Chart Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 2\n              },\n              children: ['bar', 'line', 'pie', 'scatter'].map(type => /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => setCurrentVisualization({\n                  ...currentVisualization,\n                  chartType: type\n                }),\n                sx: {\n                  border: '2px solid',\n                  borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\n                  borderRadius: 2,\n                  p: 2,\n                  width: '110px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  cursor: 'pointer',\n                  bgcolor: currentVisualization.chartType === type ? 'rgba(25, 118, 210, 0.1)' : 'transparent'\n                },\n                children: [type === 'bar' && /*#__PURE__*/_jsxDEV(ChartIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 42\n                }, this), type === 'line' && /*#__PURE__*/_jsxDEV(LineIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1389,\n                  columnNumber: 43\n                }, this), type === 'pie' && /*#__PURE__*/_jsxDEV(PieIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 42\n                }, this), type === 'scatter' && /*#__PURE__*/_jsxDEV(ScatterIcon, {\n                  sx: {\n                    fontSize: 32,\n                    mb: 1,\n                    color: 'primary.main'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1391,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: type.charAt(0).toUpperCase() + type.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1392,\n                  columnNumber: 23\n                }, this)]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1369,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1328,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateVisualization,\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1409,\n            columnNumber: 24\n          }, this),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1402,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCancelDelete,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          bgcolor: 'error.main',\n          color: 'white'\n        },\n        children: \"Delete Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          mt: 2,\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\",\n            sx: {\n              mr: 2,\n              fontSize: 32\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This visualization will be permanently deleted. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 3,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCancelDelete,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 751,\n    columnNumber: 5\n  }, this);\n}\n_s(Visualizations, \"C8O3pdEPGmjT+8FMRf8hM+dPvhw=\", false, function () {\n  return [useTheme, useLocation];\n});\n_c = Visualizations;\nexport default Visualizations;\nvar _c;\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","Grid","Card","CardContent","CardHeader","CardActions","LinearProgress","List","ListItem","ListItemText","ListItemIcon","Chip","Divider","Alert","IconButton","useTheme","CircularProgress","BarChart","ChartIcon","Add","AddIcon","Timeline","TimelineIcon","BubbleChart","ScatterIcon","ShowChart","LineIcon","PieChart","PieIcon","Delete","DeleteIcon","Edit","EditIcon","CheckCircle","CheckCircleIcon","ArrowBack","ArrowBackIcon","PageHeader","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizations","_s","_analysis$columns","_analysis$columns2","_analysis$columns3","theme","location","openDialog","setOpenDialog","openDeleteDialog","setOpenDeleteDialog","deleteTarget","setDeleteTarget","selectedFile","setSelectedFile","files","setFiles","visualizations","setVisualizations","loading","setLoading","analysis","setAnalysis","error","setError","openViewDialog","setOpenViewDialog","currentVisualization","setCurrentVisualization","openEditDialog","setOpenEditDialog","chartContainerRef","chartInstance","setChartInstance","selectedXAxis","setSelectedXAxis","selectedYAxis","setSelectedYAxis","showChartOptions","setShowChartOptions","previewCharts","setPreviewCharts","previewFile","setPreviewFile","axisSelectionOpen","setAxisSelectionOpen","chartPreviewRefs","chartPreviewInstances","setChartPreviewInstances","_location$state","fetchFiles","fetchVisualizations","state","openCreateDialog","window","history","replaceState","document","title","response","fetch","data","json","console","log","handleFileSelect","file","_id","status","ok","errorData","Error","analysisData","success","_analysisData$analysi","rowCount","summary","totalRows","columns","Object","keys","basicAnalysis","visualizationSuggestions","type","description","reasoning","confidence","handleCreateClick","handleCloseDialog","handleGenerateCharts","previewData","forEach","chartType","suggestion","find","s","push","name","charAt","toUpperCase","slice","fileId","xAxis","yAxis","setTimeout","renderPreviewCharts","charts","values","instance","destroy","newInstances","chart","canvasRef","current","ctx","getContext","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","display","text","color","palette","primary","legend","position","scales","x","ticks","secondary","grid","divider","y","beginAtZero","handleSaveChart","config","field","subtitle","Date","toLocaleDateString","method","headers","body","JSON","stringify","isAIGenerated","message","result","alert","handleViewVisualization","viz","visualization","id","renderChart","handleEditVisualization","handleUpdateVisualization","handleCloseViewDialog","handleCloseEditDialog","handleInputChange","e","value","target","prev","handleDeleteVisualization","vizId","handleConfirmDelete","catch","handleCancelDelete","getVisualizationIcon","iconSize","fontSize","opacity","colors","bar","scatter","line","pie","iconColor","sx","fileName","_jsxFileName","lineNumber","columnNumber","renderPlaceholder","item","xs","children","width","mt","align","length","variant","_visualization$config","_visualization$config2","_visualization$config3","_visualization$config4","_visualization$config5","_visualization$config6","_visualization$config7","_visualization$config8","_visualization$config9","newChart","mode","p","minHeight","icon","actions","startIcon","onClick","open","onClose","maxWidth","fullWidth","PaperProps","borderRadius","bgcolor","severity","mb","justifyContent","alignItems","gutterBottom","container","spacing","sm","border","onChange","style","padding","outline","map","column","disabled","component","height","flexDirection","boxShadow","overflow","subheader","action","size","ref","el","sort","a","b","md","mr","grey","lg","transition","transform","cursor","createdAt","fontWeight","pt","flexGrow","stopPropagation","button","toFixed","py","px","placeholder","rows","flexWrap","gap","_c","$RefreshReg$"],"sources":["E:/git_projects/test/frontend/src/pages/Visualizations.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Chip,\r\n  Divider,\r\n  Alert,\r\n  IconButton,\r\n  useTheme,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport {\r\n  BarChart as ChartIcon,\r\n  Add as AddIcon,\r\n  Timeline as TimelineIcon,\r\n  BubbleChart as ScatterIcon,\r\n  ShowChart as LineIcon,\r\n  PieChart as PieIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from '@mui/icons-material';\r\nimport PageHeader from '../components/common/PageHeader';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Visualizations() {\r\n  const theme = useTheme();\r\n  const location = useLocation();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [deleteTarget, setDeleteTarget] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [visualizations, setVisualizations] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [analysis, setAnalysis] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [currentVisualization, setCurrentVisualization] = useState(null);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const chartContainerRef = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const [selectedXAxis, setSelectedXAxis] = useState('');\r\n  const [selectedYAxis, setSelectedYAxis] = useState('');\r\n  const [showChartOptions, setShowChartOptions] = useState(false);\r\n  const [previewCharts, setPreviewCharts] = useState([]);\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n  const [axisSelectionOpen, setAxisSelectionOpen] = useState(false);\r\n  const chartPreviewRefs = useRef({});\r\n  const [chartPreviewInstances, setChartPreviewInstances] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    fetchVisualizations();\r\n    \r\n    if (location.state?.openCreateDialog) {\r\n      setOpenDialog(true);\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n  }, [location]);\r\n\r\n  const fetchFiles = async () => {\r\n    try {\r\n      const response = await fetch('/api/files');\r\n      const data = await response.json();\r\n      setFiles(data.files || []);\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n      setError('Failed to fetch files');\r\n    }\r\n  };\r\n\r\n  const fetchVisualizations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/visualizations');\r\n      const data = await response.json();\r\n      console.log('Fetched visualizations:', data);\r\n      setVisualizations(data.visualizations || []);\r\n    } catch (error) {\r\n      console.error('Error fetching visualizations:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = async (file) => {\r\n    setSelectedFile(file);\r\n    setLoading(true);\r\n    setError(null);\r\n    setSelectedXAxis('');\r\n    setSelectedYAxis('');\r\n    setShowChartOptions(false);\r\n    \r\n    try {\r\n      console.log('Analyzing file with ID:', file._id);\r\n      const response = await fetch(`/api/files/${file._id}/analyze`);\r\n      console.log('Analysis response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Analysis error details:', errorData);\r\n        throw new Error(errorData.error || 'Analysis failed');\r\n      }\r\n      \r\n      const analysisData = await response.json();\r\n      console.log('Analysis result:', analysisData);\r\n      \r\n      // Check the structure of analysis data and adapt as needed\r\n      if (analysisData.success && analysisData.analysis) {\r\n        setAnalysis({\r\n          rowCount: analysisData.analysis.summary?.totalRows || 0,\r\n          columns: Object.keys(analysisData.analysis.basicAnalysis || {}),\r\n          visualizationSuggestions: [\r\n            {\r\n              type: 'bar',\r\n              description: 'Bar Chart',\r\n              reasoning: 'Based on data structure',\r\n              confidence: 85\r\n            },\r\n            {\r\n              type: 'line',\r\n              description: 'Line Chart',\r\n              reasoning: 'Good for trends over time',\r\n              confidence: 75\r\n            },\r\n            {\r\n              type: 'pie',\r\n              description: 'Pie Chart',\r\n              reasoning: 'Good for showing proportions',\r\n              confidence: 65\r\n            },\r\n            {\r\n              type: 'scatter',\r\n              description: 'Scatter Plot',\r\n              reasoning: 'Good for showing correlations',\r\n              confidence: 60\r\n            }\r\n          ]\r\n        });\r\n        \r\n        // Automatically open axis selection after successful analysis\r\n        setAxisSelectionOpen(true);\r\n      } else {\r\n        setAnalysis({\r\n          rowCount: 0,\r\n          columns: [],\r\n          visualizationSuggestions: []\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error analyzing file:', error);\r\n      setError('Failed to analyze file');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateClick = () => {\r\n    setOpenDialog(true);\r\n    setPreviewCharts([]);\r\n    setSelectedXAxis('');\r\n    setSelectedYAxis('');\r\n    setAxisSelectionOpen(false);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setAxisSelectionOpen(false);\r\n    setSelectedFile(null);\r\n    setAnalysis(null);\r\n  };\r\n\r\n  const handleGenerateCharts = () => {\r\n    if (!selectedFile || !analysis || !selectedXAxis || !selectedYAxis) {\r\n      setError('Please select file and axes first');\r\n      return;\r\n    }\r\n    \r\n    // Close both dialogs\r\n    setAxisSelectionOpen(false);\r\n    setOpenDialog(false);\r\n    \r\n    // Create preview charts for all chart types\r\n    const previewData = [];\r\n    ['bar', 'line', 'pie', 'scatter'].forEach(chartType => {\r\n      const suggestion = analysis.visualizationSuggestions.find(s => s.type === chartType) || {\r\n        type: chartType,\r\n        confidence: chartType === 'bar' ? 85 : chartType === 'line' ? 75 : 65\r\n      };\r\n      \r\n      previewData.push({\r\n        chartType,\r\n        name: `${selectedFile.name} - ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\r\n        description: `Visualization showing ${selectedYAxis} by ${selectedXAxis}`,\r\n        fileId: selectedFile._id,\r\n        confidence: suggestion.confidence,\r\n        xAxis: selectedXAxis,\r\n        yAxis: selectedYAxis,\r\n        file: selectedFile\r\n      });\r\n    });\r\n    \r\n    setPreviewFile(selectedFile);\r\n    setPreviewCharts(previewData);\r\n    \r\n    // Schedule rendering after the DOM updates\r\n    setTimeout(() => {\r\n      renderPreviewCharts(previewData);\r\n    }, 300);\r\n  };\r\n\r\n  const renderPreviewCharts = (charts) => {\r\n    // Clean up existing chart instances\r\n    Object.values(chartPreviewInstances).forEach(instance => {\r\n      if (instance) instance.destroy();\r\n    });\r\n    \r\n    const newInstances = {};\r\n    \r\n    charts.forEach(chart => {\r\n      const canvasRef = chartPreviewRefs.current[chart.chartType];\r\n      if (!canvasRef) return;\r\n      \r\n      const ctx = canvasRef.getContext('2d');\r\n      if (!ctx) return;\r\n      \r\n      try {\r\n        // Sample data for the charts\r\n        const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\r\n        const data = {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: chart.yAxis,\r\n            data: [65, 59, 80, 81, 56, 55],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        };\r\n        \r\n        const chartInstance = new Chart(ctx, {\r\n          type: chart.chartType,\r\n          data: data,\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              title: {\r\n                display: true,\r\n                text: `${chart.yAxis} by ${chart.xAxis}`,\r\n                color: theme.palette.text.primary\r\n              },\r\n              legend: {\r\n                display: chart.chartType !== 'bar',\r\n                position: 'top',\r\n                labels: {\r\n                  color: theme.palette.text.primary\r\n                }\r\n              }\r\n            },\r\n            scales: {\r\n              x: {\r\n                title: {\r\n                  display: true,\r\n                  text: chart.xAxis,\r\n                  color: theme.palette.text.primary\r\n                },\r\n                ticks: {\r\n                  color: theme.palette.text.secondary\r\n                },\r\n                grid: {\r\n                  color: theme.palette.divider\r\n                }\r\n              },\r\n              y: {\r\n                title: {\r\n                  display: true,\r\n                  text: chart.yAxis,\r\n                  color: theme.palette.text.primary\r\n                },\r\n                ticks: {\r\n                  color: theme.palette.text.secondary\r\n                },\r\n                grid: {\r\n                  color: theme.palette.divider\r\n                },\r\n                beginAtZero: true\r\n              }\r\n            }\r\n          }\r\n        });\r\n        \r\n        newInstances[chart.chartType] = chartInstance;\r\n      } catch (error) {\r\n        console.error(`Error creating ${chart.chartType} chart:`, error);\r\n      }\r\n    });\r\n    \r\n    setChartPreviewInstances(newInstances);\r\n  };\r\n\r\n  const handleSaveChart = async (chart) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Create a basic config from the selected axes\r\n      const config = {\r\n        xAxis: {\r\n          field: chart.xAxis,\r\n          label: chart.xAxis\r\n        },\r\n        yAxis: {\r\n          field: chart.yAxis,\r\n          label: chart.yAxis\r\n        },\r\n        title: chart.name,\r\n        subtitle: `Generated on ${new Date().toLocaleDateString()}`\r\n      };\r\n      \r\n      console.log('Creating visualization with config:', {\r\n        name: chart.name,\r\n        description: chart.description,\r\n        fileId: chart.fileId,\r\n        chartType: chart.chartType,\r\n        confidence: chart.confidence,\r\n        config: config\r\n      });\r\n      \r\n      // Send request to create visualization\r\n      const response = await fetch('/api/visualizations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: chart.name,\r\n          description: chart.description,\r\n          fileId: chart.fileId,\r\n          chartType: chart.chartType,\r\n          confidence: chart.confidence,\r\n          config: config,\r\n          isAIGenerated: true\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to create visualization');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Visualization created:', result);\r\n      \r\n      // Show success message\r\n      alert('Visualization saved successfully!');\r\n      \r\n      // Refresh visualizations\r\n      await fetchVisualizations();\r\n      \r\n      // Clear preview charts after successful save\r\n      setPreviewCharts([]);\r\n    } catch (error) {\r\n      console.error('Error creating visualization:', error);\r\n      setError('Failed to create visualization: ' + error.message);\r\n      alert('Error: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViewVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Visualization details:', data.visualization);\r\n      \r\n      // Fix id inconsistency by ensuring we have _id\r\n      if (data.visualization.id && !data.visualization._id) {\r\n        data.visualization._id = data.visualization.id;\r\n      }\r\n      \r\n      setCurrentVisualization(data.visualization);\r\n      setOpenViewDialog(true);\r\n      \r\n      // We need to render the chart after the dialog is open and DOM is ready\r\n      setTimeout(() => {\r\n        renderChart(data.visualization);\r\n      }, 300);\r\n    } catch (error) {\r\n      console.error('Error viewing visualization:', error);\r\n      alert('Failed to load visualization details');\r\n    }\r\n  };\r\n  \r\n  const handleEditVisualization = async (viz) => {\r\n    try {\r\n      // Get the visualization details\r\n      const response = await fetch(`/api/visualizations/${viz._id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch visualization details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCurrentVisualization(data.visualization);\r\n      setOpenEditDialog(true);\r\n    } catch (error) {\r\n      console.error('Error editing visualization:', error);\r\n      alert('Failed to load visualization for editing');\r\n    }\r\n  };\r\n  \r\n  const handleUpdateVisualization = async () => {\r\n    if (!currentVisualization) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/visualizations/${currentVisualization._id || currentVisualization.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: currentVisualization.name,\r\n          description: currentVisualization.description,\r\n          chartType: currentVisualization.chartType,\r\n          config: currentVisualization.config\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update visualization');\r\n      }\r\n      \r\n      // Close dialog and refresh visualizations\r\n      setOpenEditDialog(false);\r\n      setCurrentVisualization(null);\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error updating visualization:', error);\r\n      alert('Failed to update visualization');\r\n    }\r\n  };\r\n  \r\n  const handleCloseViewDialog = () => {\r\n    if (chartInstance) {\r\n      chartInstance.destroy();\r\n      setChartInstance(null);\r\n    }\r\n    setOpenViewDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleCloseEditDialog = () => {\r\n    setOpenEditDialog(false);\r\n    setCurrentVisualization(null);\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentVisualization(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleDeleteVisualization = async (vizId) => {\r\n    setDeleteTarget(vizId);\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (!deleteTarget) {\r\n      console.error('No delete target set');\r\n      alert('Error: No visualization selected for deletion');\r\n      setOpenDeleteDialog(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Deleting visualization with ID:', deleteTarget);\r\n      \r\n      const response = await fetch(`/api/visualizations/${deleteTarget}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      console.log('Delete response status:', response.status);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\r\n        console.error('Delete error details:', errorData);\r\n        throw new Error(errorData.message || 'Failed to delete visualization');\r\n      }\r\n      \r\n      console.log('Visualization deleted successfully');\r\n      alert('Visualization deleted successfully');\r\n      \r\n      // Refresh the list\r\n      await fetchVisualizations();\r\n    } catch (error) {\r\n      console.error('Error deleting visualization:', error);\r\n      alert(`Failed to delete visualization: ${error.message}`);\r\n    } finally {\r\n      setOpenDeleteDialog(false);\r\n      setDeleteTarget(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setOpenDeleteDialog(false);\r\n    setDeleteTarget(null);\r\n  };\r\n\r\n  const getVisualizationIcon = (type) => {\r\n    const iconSize = { fontSize: 80, opacity: 0.8 };\r\n    const colors = {\r\n      bar: '#1976d2',    // blue\r\n      scatter: '#9c27b0', // purple\r\n      line: '#2e7d32',    // green\r\n      pie: '#ed6c02'      // orange\r\n    };\r\n    \r\n    const iconColor = { color: colors[type] || colors.bar };\r\n    \r\n    switch (type) {\r\n      case 'bar':\r\n        return <ChartIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'scatter':\r\n        return <ScatterIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'line':\r\n        return <LineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      case 'pie':\r\n        return <PieIcon sx={{ ...iconSize, ...iconColor }} />;\r\n      default:\r\n        return <TimelineIcon sx={{ ...iconSize, ...iconColor }} />;\r\n    }\r\n  };\r\n\r\n  const renderPlaceholder = () => {\r\n    if (loading) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <LinearProgress />\r\n            <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\r\n              Loading...\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    if (visualizations.length === 0) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n            No visualizations yet. Click the \"Create Visualization\" button to create one.\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const renderChart = (visualization) => {\r\n    console.log('Rendering chart for visualization:', visualization);\r\n    \r\n    if (!chartContainerRef.current) {\r\n      console.error('Chart container reference not available');\r\n      return;\r\n    }\r\n    \r\n    // Destroy previous chart if exists\r\n    if (chartInstance) {\r\n      console.log('Destroying previous chart instance');\r\n      chartInstance.destroy();\r\n    }\r\n    \r\n    const ctx = chartContainerRef.current.getContext('2d');\r\n    if (!ctx) {\r\n      console.error('Could not get 2D context from canvas');\r\n      return;\r\n    }\r\n    \r\n    console.log('Chart type:', visualization.chartType);\r\n    console.log('Chart config:', visualization.config);\r\n    \r\n    try {\r\n      // Generate mock data based on the chart type and config\r\n      const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\r\n      const data = {\r\n        labels: labels,\r\n        datasets: [{\r\n          label: visualization.config?.yAxis?.label || 'Value',\r\n          data: [65, 59, 80, 81, 56, 55],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n          ],\r\n          borderWidth: 1\r\n        }]\r\n      };\r\n      \r\n      // Create the chart based on the type\r\n      console.log('Creating new chart');\r\n      const newChart = new Chart(ctx, {\r\n        type: visualization.chartType || 'bar',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: visualization.config?.title || visualization.name,\r\n              color: theme.palette.text.primary\r\n            },\r\n            subtitle: {\r\n              display: !!visualization.config?.subtitle,\r\n              text: visualization.config?.subtitle || '',\r\n              color: theme.palette.text.secondary\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n              labels: {\r\n                color: theme.palette.text.primary\r\n              }\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.xAxis?.label || 'Category',\r\n                color: theme.palette.text.primary\r\n              },\r\n              ticks: {\r\n                color: theme.palette.text.secondary\r\n              },\r\n              grid: {\r\n                color: theme.palette.divider\r\n              }\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: visualization.config?.yAxis?.label || 'Value',\r\n                color: theme.palette.text.primary\r\n              },\r\n              ticks: {\r\n                color: theme.palette.text.secondary\r\n              },\r\n              grid: {\r\n                color: theme.palette.divider\r\n              },\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      console.log('Chart created successfully');\r\n      setChartInstance(newChart);\r\n    } catch (error) {\r\n      console.error('Error creating chart:', error);\r\n      alert('Failed to render chart: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // Clean up chart instance on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n      Object.values(chartPreviewInstances).forEach(instance => {\r\n        if (instance) instance.destroy();\r\n      });\r\n    };\r\n  }, [chartInstance, chartPreviewInstances]);\r\n\r\n  // Re-render charts when theme changes\r\n  useEffect(() => {\r\n    if (currentVisualization && openViewDialog) {\r\n      setTimeout(() => {\r\n        renderChart(currentVisualization);\r\n      }, 300);\r\n    }\r\n    \r\n    if (previewCharts.length > 0) {\r\n      setTimeout(() => {\r\n        renderPreviewCharts(previewCharts);\r\n      }, 300);\r\n    }\r\n  }, [theme.palette.mode]);\r\n\r\n  return (\r\n    <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\r\n      <PageHeader\r\n        title=\"Visualizations\"\r\n        icon={<ChartIcon />}\r\n        actions={\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateClick}\r\n          >\r\n            Create Visualization\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      {/* Axis Selection Dialog */}\r\n      <Dialog\r\n        open={axisSelectionOpen}\r\n        onClose={() => {\r\n          setAxisSelectionOpen(false);\r\n          setError(null);\r\n        }}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            bgcolor: 'background.paper'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Select Data for Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Box sx={{ \r\n                mb: 3, \r\n                p: 3, \r\n                bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : '#f5f5f5', \r\n                borderRadius: 2,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between'\r\n              }}>\r\n                <Box>\r\n                  <Typography variant=\"h6\">Data Summary</Typography>\r\n                  <Typography>\r\n                    {analysis?.rowCount} rows analyzed across {analysis?.columns?.length} columns\r\n                  </Typography>\r\n                </Box>\r\n                <Chip \r\n                  label=\"Ready for visualization\" \r\n                  color=\"success\" \r\n                  icon={<CheckCircleIcon />} \r\n                />\r\n              </Box>\r\n              \r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Select Data Axes\r\n              </Typography>\r\n              \r\n              <Grid container spacing={3} sx={{ mb: 4 }}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    X-Axis (Categories)\r\n                  </Typography>\r\n                  <Box sx={{ \r\n                    border: '1px solid',\r\n                    borderColor: 'divider', \r\n                    borderRadius: 1, \r\n                    p: 1,\r\n                    bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white' \r\n                  }}>\r\n                    <select \r\n                      value={selectedXAxis}\r\n                      onChange={(e) => setSelectedXAxis(e.target.value)}\r\n                      style={{ \r\n                        width: '100%', \r\n                        padding: '10px', \r\n                        fontSize: '16px',\r\n                        border: 'none',\r\n                        outline: 'none',\r\n                        backgroundColor: 'transparent',\r\n                        color: theme.palette.text.primary\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select X-Axis Column</option>\r\n                      {analysis?.columns?.map(column => (\r\n                        <option key={column} value={column}>{column}</option>\r\n                      ))}\r\n                    </select>\r\n                  </Box>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Y-Axis (Values)\r\n                  </Typography>\r\n                  <Box sx={{ \r\n                    border: '1px solid',\r\n                    borderColor: 'divider', \r\n                    borderRadius: 1, \r\n                    p: 1,\r\n                    bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : 'white' \r\n                  }}>\r\n                    <select \r\n                      value={selectedYAxis}\r\n                      onChange={(e) => setSelectedYAxis(e.target.value)}\r\n                      style={{ \r\n                        width: '100%', \r\n                        padding: '10px', \r\n                        fontSize: '16px',\r\n                        border: 'none',\r\n                        outline: 'none',\r\n                        backgroundColor: 'transparent',\r\n                        color: theme.palette.text.primary\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select Y-Axis Column</option>\r\n                      {analysis?.columns?.map(column => (\r\n                        <option key={column} value={column}>{column}</option>\r\n                      ))}\r\n                    </select>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              setAxisSelectionOpen(false);\r\n              setError(null);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={!selectedXAxis || !selectedYAxis || loading}\r\n            onClick={handleGenerateCharts}\r\n          >\r\n            Generate Charts\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Main content */}\r\n      {previewCharts.length > 0 && (\r\n        <Box sx={{ mb: 4 }}>\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between',\r\n            mb: 2\r\n          }}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              Chart Preview: {selectedXAxis} vs {selectedYAxis}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n              Data from: {previewFile?.name}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* All Chart Types */}\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\r\n            All Chart Types\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            {previewCharts.map((chart) => (\r\n              <Grid item xs={12} sm={6} key={chart.chartType}>\r\n                <Card sx={{ \r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\r\n                  borderRadius: 2,\r\n                  overflow: 'hidden',\r\n                  bgcolor: 'background.paper'\r\n                }}>\r\n                  <CardHeader\r\n                    title={chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1) + ' Chart'}\r\n                    subheader={`${chart.yAxis} by ${chart.xAxis}`}\r\n                    action={\r\n                      <Chip \r\n                        label={`${chart.confidence}% match`} \r\n                        color={chart.confidence > 80 ? 'success' : 'primary'} \r\n                        size=\"small\"\r\n                      />\r\n                    }\r\n                    sx={{ \r\n                      bgcolor: 'primary.main', \r\n                      color: 'white',\r\n                      '& .MuiCardHeader-subheader': { color: 'rgba(255,255,255,0.8)' }\r\n                    }}\r\n                  />\r\n                  <Box sx={{ p: 2, height: 250, position: 'relative', bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'white' }}>\r\n                    <canvas \r\n                      ref={el => chartPreviewRefs.current[chart.chartType] = el}\r\n                      style={{ width: '100%', height: '100%' }}\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ p: 2, mt: 'auto' }}>\r\n                    <Button \r\n                      variant=\"contained\" \r\n                      fullWidth\r\n                      onClick={() => handleSaveChart(chart)}\r\n                    >\r\n                      Save Visualization\r\n                    </Button>\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          {/* Recommended Charts */}\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n            Recommended Charts\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            {previewCharts\r\n              .sort((a, b) => b.confidence - a.confidence)\r\n              .slice(0, 2) // Take only top 2 recommendations\r\n              .map((chart) => (\r\n                <Grid item xs={12} sm={6} md={4} key={`rec-${chart.chartType}`}>\r\n                  <Card sx={{ \r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n                    borderRadius: 2,\r\n                    overflow: 'hidden',\r\n                    border: '2px solid',\r\n                    borderColor: 'primary.main',\r\n                    bgcolor: 'background.paper'\r\n                  }}>\r\n                    <Box sx={{ \r\n                      p: 2, \r\n                      bgcolor: 'primary.main', \r\n                      color: 'white',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'space-between'\r\n                    }}>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <CheckCircleIcon sx={{ mr: 1 }} />\r\n                        <Typography variant=\"subtitle1\">\r\n                          Recommended: {chart.chartType.charAt(0).toUpperCase() + chart.chartType.slice(1)}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Chip \r\n                        label={`${chart.confidence}%`}\r\n                        size=\"small\"\r\n                        sx={{ bgcolor: 'white', color: 'primary.dark' }}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ p: 2, bgcolor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : theme.palette.grey[50] }}>\r\n                      <Typography variant=\"body2\" gutterBottom>\r\n                        {chart.chartType === 'bar' && `Great for comparing ${chart.yAxis} values across ${chart.xAxis} categories`}\r\n                        {chart.chartType === 'line' && `Ideal for showing ${chart.yAxis} trends over ${chart.xAxis}`}\r\n                        {chart.chartType === 'pie' && `Perfect for showing ${chart.yAxis} distribution among ${chart.xAxis} categories`}\r\n                        {chart.chartType === 'scatter' && `Best for exploring relationship between ${chart.xAxis} and ${chart.yAxis}`}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ p: 2, mt: 'auto' }}>\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        fullWidth\r\n                        onClick={() => handleSaveChart(chart)}\r\n                      >\r\n                        Use This Recommendation\r\n                      </Button>\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n\r\n      {visualizations.length === 0 && !loading && previewCharts.length === 0 ? (\r\n        <Box \r\n          sx={{ \r\n            mt: 4, \r\n            p: 4, \r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            alignItems: 'center', \r\n            justifyContent: 'center',\r\n            backgroundColor: 'white',\r\n            borderRadius: 2,\r\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.05)',\r\n            minHeight: '300px'\r\n          }}\r\n        >\r\n          <TimelineIcon sx={{ fontSize: 64, color: 'primary.light', mb: 2 }} />\r\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n            No Visualizations Yet\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n            Create your first visualization to see it displayed here.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => {\r\n              setOpenDialog(true);\r\n            }}\r\n          >\r\n            Create Visualization\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        !previewCharts.length > 0 && (\r\n          <Grid container spacing={3} sx={{ mt: 2 }}>\r\n            {loading ? (\r\n              <Grid item xs={12}>\r\n                <Box sx={{ width: '100%', mt: 2 }}>\r\n                  <LinearProgress />\r\n                  <Typography sx={{ mt: 1 }} align=\"center\" color=\"text.secondary\">\r\n                    Loading visualizations...\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            ) : (\r\n              visualizations.map((viz) => (\r\n                <Grid item xs={12} sm={6} lg={4} key={viz._id}>\r\n                  <Card sx={{ \r\n                    height: '100%', \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    transition: 'transform 0.2s, box-shadow 0.2s',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-5px)',\r\n                      boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\r\n                      cursor: 'pointer'\r\n                    } \r\n                  }} onClick={() => handleViewVisualization(viz)}>\r\n                    <CardHeader \r\n                      title={viz.name}\r\n                      subheader={`Created: ${new Date(viz.createdAt).toLocaleDateString()}`}\r\n                      action={\r\n                        <Chip \r\n                          label={`${viz.confidence || 90}% match`} \r\n                          color=\"primary\" \r\n                          size=\"small\"\r\n                          sx={{ fontWeight: 'bold' }}\r\n                        />\r\n                      }\r\n                    />\r\n                    <Box sx={{ \r\n                      p: 2, \r\n                      pt: 0, \r\n                      height: 200, \r\n                      position: 'relative',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }}>\r\n                      {getVisualizationIcon(viz.chartType)}\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      p: 2, \r\n                      bgcolor: 'primary.main', \r\n                      color: 'white',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      mt: 'auto'\r\n                    }}>\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mr: 1 }}>\r\n                        {viz.chartType.charAt(0).toUpperCase() + viz.chartType.slice(1)} Chart\r\n                      </Typography>\r\n                      <Box sx={{ flexGrow: 1 }} />\r\n                      <Box sx={{ display: 'flex' }}>\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleEditVisualization(viz);\r\n                          }}\r\n                          sx={{ color: 'white', mr: 1 }}\r\n                        >\r\n                          <EditIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteVisualization(viz._id);\r\n                          }}\r\n                          sx={{ color: 'white' }}\r\n                        >\r\n                          <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </Box>\r\n                  </Card>\r\n                </Grid>\r\n              ))\r\n            )}\r\n          </Grid>\r\n        )\r\n      )}\r\n\r\n      {/* File Selection Dialog */}\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            bgcolor: 'background.paper'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Select File for Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3 }}>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 1 }}>\r\n            Choose a file to analyze and visualize:\r\n          </Typography>\r\n          \r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <List sx={{ bgcolor: theme.palette.mode === 'dark' ? 'background.paper' : '#f5f5f5', borderRadius: 2 }}>\r\n              {files.map((file) => (\r\n                <ListItem\r\n                  key={file._id}\r\n                  button\r\n                  sx={{ \r\n                    mb: 1, \r\n                    bgcolor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'white', \r\n                    borderRadius: 1,\r\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.05)',\r\n                    '&:hover': {\r\n                      bgcolor: theme.palette.mode === 'dark' \r\n                        ? 'rgba(255, 255, 255, 0.1)' \r\n                        : 'rgba(25, 118, 210, 0.08)'\r\n                    }\r\n                  }}\r\n                  onClick={() => handleFileSelect(file)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <ChartIcon color=\"primary\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={file.name}\r\n                    secondary={`${file.type} - ${(file.size / 1024).toFixed(2)} KB`}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button onClick={handleCloseDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* View Visualization Dialog */}\r\n      <Dialog\r\n        open={openViewDialog}\r\n        onClose={handleCloseViewDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, px: 3 }}>\r\n          <Typography variant=\"h5\">\r\n            {currentVisualization?.name || 'View Visualization'}\r\n          </Typography>\r\n        </Box>\r\n        <DialogContent sx={{ p: 0 }}>\r\n          {currentVisualization && (\r\n            <Box>\r\n              <Box sx={{ height: 400, p: 3 }}>\r\n                <canvas ref={chartContainerRef} style={{ width: '100%', height: '100%' }}></canvas>\r\n              </Box>\r\n              \r\n              <Box sx={{ p: 3, bgcolor: '#f5f5f5' }}>\r\n                <Typography variant=\"h6\" gutterBottom>Data Insights</Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  {currentVisualization.description || 'This visualization shows key patterns in your data. The chart type was selected based on your data structure and optimal visualization methods.'}\r\n                </Typography>\r\n                \r\n                <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n                  <Chip \r\n                    label={`${currentVisualization.chartType.charAt(0).toUpperCase() + currentVisualization.chartType.slice(1)} Chart`}\r\n                    color=\"primary\"\r\n                    icon={getVisualizationIcon(currentVisualization.chartType)}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Chip \r\n                    label={`${currentVisualization.confidence || 90}% confidence`}\r\n                    color=\"success\"\r\n                  />\r\n                  <Box sx={{ flexGrow: 1 }} />\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<EditIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleEditVisualization(currentVisualization);\r\n                    }}\r\n                    sx={{ mr: 1 }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"error\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => {\r\n                      handleCloseViewDialog();\r\n                      handleDeleteVisualization(currentVisualization._id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n      \r\n      {/* Edit Visualization Dialog - simplified */}\r\n      <Dialog\r\n        open={openEditDialog}\r\n        onClose={handleCloseEditDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'primary.main', color: 'white' }}>\r\n          Edit Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: 3, mt: 2 }}>\r\n          {currentVisualization && (\r\n            <Box sx={{ pt: 1 }}>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Visualization Name</Typography>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={currentVisualization.name || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter a descriptive name\"\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px'\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Description</Typography>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={currentVisualization.description || ''}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe what insights this visualization provides\"\r\n                  rows={3}\r\n                  style={{ \r\n                    width: '100%', \r\n                    padding: '12px', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px'\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>Chart Type</Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\r\n                  {['bar', 'line', 'pie', 'scatter'].map(type => (\r\n                    <Box \r\n                      key={type}\r\n                      onClick={() => setCurrentVisualization({\r\n                        ...currentVisualization,\r\n                        chartType: type\r\n                      })}\r\n                      sx={{ \r\n                        border: '2px solid',\r\n                        borderColor: currentVisualization.chartType === type ? 'primary.main' : '#ddd',\r\n                        borderRadius: 2,\r\n                        p: 2,\r\n                        width: '110px',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        cursor: 'pointer',\r\n                        bgcolor: currentVisualization.chartType === type ? 'rgba(25, 118, 210, 0.1)' : 'transparent'\r\n                      }}\r\n                    >\r\n                      {type === 'bar' && <ChartIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'line' && <LineIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'pie' && <PieIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      {type === 'scatter' && <ScatterIcon sx={{ fontSize: 32, mb: 1, color: 'primary.main' }} />}\r\n                      <Typography variant=\"body2\">\r\n                        {type.charAt(0).toUpperCase() + type.slice(1)}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCloseEditDialog} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={handleUpdateVisualization}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCancelDelete}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ bgcolor: 'error.main', color: 'white' }}>\r\n          Delete Visualization\r\n        </DialogTitle>\r\n        <DialogContent sx={{ mt: 2, p: 3 }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n            <DeleteIcon color=\"error\" sx={{ mr: 2, fontSize: 32 }} />\r\n            <Typography variant=\"h6\">\r\n              Are you sure?\r\n            </Typography>\r\n          </Box>\r\n          <Typography>\r\n            This visualization will be permanently deleted. This action cannot be undone.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3, pt: 0 }}>\r\n          <Button onClick={handleCancelDelete} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmDelete} color=\"error\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Visualizations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}